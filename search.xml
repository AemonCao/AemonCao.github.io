<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>工厂方法模式（Factory Method Pattern）</title>
    <url>/2020/03/31/Factory-Method-Pattern/</url>
    <content><![CDATA[<p>工厂方法模式的目的是：</p>
<blockquote>
<p>通过让子类决定该创建的对象是什么，来达到将对象创建的过程封装的目的。</p>
</blockquote>
<span id="more"></span>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>我们还是继续<a href="/2020/03/29/Simple-Factory-Pattern/" title="简单工厂模式（Simple Factory Pattern）">简单工厂模式（Simple Factory Pattern）</a>中的披萨店。</p>
<p>首先我们需要修改一下 <code>Pizza</code> 类：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 披萨抽象类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">Pizza</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> dough;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> sauce;</span><br><span class="line">    <span class="keyword">public</span> ArrayList toppings = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 准备 Pizza</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Prepare</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Prepring &quot;</span> + name);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Tossing dough...&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Adding sauce...&quot;</span>);</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Adding toppings: &quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; toppings.Count; i++)</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;    &quot;</span> + toppings[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 烘培 Pizza</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Bake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Bake for 25 minutes at 350&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 切 Pizza</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Cut</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Cutting the pizza into diagonal slices&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 装箱 Pizza</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Box</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Place pizza in official PizzaStore box&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后通过继承，我们有了几种不同风格和口味的 <code>Pizza</code>：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 纽约芝士披萨</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NYStyleCheesePizza</span> : <span class="title">Pizza</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NYStyleCheesePizza</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        name = <span class="string">&quot;NY Style Sauce and Cheese Pizza&quot;</span>;</span><br><span class="line">        dough = <span class="string">&quot;Thin Crust Dough&quot;</span>;</span><br><span class="line">        sauce = <span class="string">&quot;Marinara Sauce&quot;</span>;</span><br><span class="line"></span><br><span class="line">        toppings.Add(<span class="string">&quot;Grated Reggiano Cheese&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 纽约素食披萨</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NYStyleVeggiePizza</span> : <span class="title">Pizza</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NYStyleVeggiePizza</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        name = <span class="string">&quot;NY Style Sauce and Veggie Pizza&quot;</span>;</span><br><span class="line">        dough = <span class="string">&quot;Thin Crust Dough&quot;</span>;</span><br><span class="line">        sauce = <span class="string">&quot;Marinara Sauce&quot;</span>;</span><br><span class="line"></span><br><span class="line">        toppings.Add(<span class="string">&quot;Grated Reggiano Veggie&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 芝加哥芝士披萨</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ChicagoStyleCheesePizza</span> : <span class="title">Pizza</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChicagoStyleCheesePizza</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        name = <span class="string">&quot;Chicago Style Deep Dish Cheese Pizza&quot;</span>;</span><br><span class="line">        dough = <span class="string">&quot;Extra Thick Crust Dough&quot;</span>;</span><br><span class="line">        sauce = <span class="string">&quot;Plum Tomato Sauce&quot;</span>;</span><br><span class="line"></span><br><span class="line">        toppings.Add(<span class="string">&quot;Shredded Mozzarella Cheese&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Cut</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Cutting the pizza into square slices&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 芝加哥素食披萨</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ChicagoStyleVeggiePizza</span> : <span class="title">Pizza</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ChicagoStyleVeggiePizza</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        name = <span class="string">&quot;Chicago Style Deep Dish Veggie Pizza&quot;</span>;</span><br><span class="line">        dough = <span class="string">&quot;Extra Thick Crust Dough&quot;</span>;</span><br><span class="line">        sauce = <span class="string">&quot;Plum Tomato Sauce&quot;</span>;</span><br><span class="line"></span><br><span class="line">        toppings.Add(<span class="string">&quot;Shredded Mozzarella Veggie&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Cut</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;Cutting the pizza into square slices&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>相比较之前的写法，新的写法将 <code>Pizza</code> 抽象类中的方法改成了虚方法（<code>virtual</code>）。这样的话，之后继承此抽象类的子类就不需要某些不用改动的方法进行重复的 <code>override</code> 了。就像代码所展示的一样，我们只对 <code>Cut</code> 方法进行了覆写，因为 Chicago Style 的披萨需要切成方形的。</p>
<p>之后是 <code>PizzaStore</code> 的部分：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">PizzaStore</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> Pizza <span class="title">CreatePizza</span>(<span class="params"><span class="built_in">string</span> type</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Pizza <span class="title">OrderPizza</span>(<span class="params"><span class="built_in">string</span> type</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Pizza pizza;</span><br><span class="line"></span><br><span class="line">        pizza = CreatePizza(type);</span><br><span class="line"></span><br><span class="line">        pizza.Prepare();</span><br><span class="line">        pizza.Bake();</span><br><span class="line">        pizza.Cut();</span><br><span class="line">        pizza.Box();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pizza;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我们将 <code>PizzaStore</code> 也写成了一个抽象类，我们把它称作<strong>抽象创造者类</strong>，同时还有一个 <code>CreatePizza</code> 的抽象方法。而这就是<strong>工厂方法</strong>，当然，是抽象的。它返回一个 <code>Pizza</code>，这就是<strong>产品</strong>。</p>
<p>继承：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NYStylePizzaStore</span> : <span class="title">PizzaStore</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> Pizza <span class="title">CreatePizza</span>(<span class="params"><span class="built_in">string</span> type</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (type.Equals(<span class="string">&quot;cheese&quot;</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> NYStyleCheesePizza();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (type.Equals(<span class="string">&quot;viggie&quot;</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> NYStyleVeggiePizza();</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ChicagoStylePizzaStore</span> : <span class="title">PizzaStore</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> Pizza <span class="title">CreatePizza</span>(<span class="params"><span class="built_in">string</span> type</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (type.Equals(<span class="string">&quot;cheese&quot;</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ChicagoStyleCheesePizza();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (type.Equals(<span class="string">&quot;viggie&quot;</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ChicagoStyleVeggiePizza();</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这两个 <code>PizzaStore</code> 的子类（<strong>具体创造者</strong>）实现了 <code>CreatePizza</code> 抽象方法，这就是真正实现实例化的工厂方法。</p>
<p>我们把实例化的工作都交给了子类，或者说是交给了子类中的一个方法，这个方法就是一个工厂。</p>
<h2 id="注意的点"><a href="#注意的点" class="headerlink" title="注意的点"></a>注意的点</h2><ul>
<li>简单工厂和工厂方法之间的差异：简单方法把全部的事情都在一个地方做完了，而工厂方法则是定义了一个框架，通过继承抽象类来创造实际的产品。</li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/AemonCao/DesignPattern/tree/master/DesignPattern/FactoryMethodPattern">FactoryMethodPattern</a></p>
]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>设计模式</tag>
        <tag>工厂方法模式</tag>
        <tag>Factory Method Pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>抽象工厂模式（Abstract Factory Pattern）</title>
    <url>/2020/04/18/Abstract-Factory-Pattern/</url>
    <content><![CDATA[<p>抽象工厂模式的定义是：</p>
<blockquote>
<p>提供一个接口，用于创建相关或依赖对象的家族，而不需要明确指定具体类。</p>
</blockquote>
<span id="more"></span>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>上一篇<a href="/2020/03/31/Factory-Method-Pattern/" title="工厂方法模式（Factory Method Pattern）">工厂方法模式（Factory Method Pattern）</a>中，我们已经能生产不同区域的不同披萨了，但是每家店使用的原料都是不一致的，做为一个好的连锁店，我们需要确保原料的高质量。这里需要注意的是，即使是同一种披萨，在不同的区域使用的原料也是会有区别的，会根据当地人的口味进行调整，那么为了保证以上两点，我们需要建立原料的工厂。</p>
<p>首先，即使原料略有不同，但是原料的种类就是那么几种：面团（Dough）、酱（Sauce）、起司（Cheese）、蔬菜（Veggies）、意大利辣香肠（Pepperoni）和蛤（Clam）。</p>
<p>大多数的披萨，都是由上面这些原料组成的，所以我们的原料工厂要保证能生产这些原料：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 披萨原料工厂</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">PizzaIngredientFactory</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IDough <span class="title">createDough</span>()</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ISauce <span class="title">createSauce</span>()</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ICheese <span class="title">createCheese</span>()</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IVeggies[] <span class="title">createVeggies</span>()</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IPepperoni <span class="title">createPepperoni</span>()</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IClams <span class="title">createClam</span>()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>每种原料下面又分成好多种不同地区的原料，以面团为例：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.AbstractFactoryPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 面团</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IDough</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 厚皮面团</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ThickCrustDough</span> : <span class="title">IDough</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;厚皮面团&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 薄皮面团</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ThinCrustDough</span> : <span class="title">IDough</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;薄皮面团&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>其他种类的原料也是类似：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.AbstractFactoryPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 酱</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">ISauce</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 意大利西红柿酱</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MarinaraSauce</span> : <span class="title">ISauce</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;意大利西红柿酱&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 梅子番茄酱</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlumTomatoSauce</span> : <span class="title">ISauce</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;梅子西红柿酱&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.AbstractFactoryPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 起司</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">ICheese</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 芝士丝</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MozzarellaCheese</span> : <span class="title">ICheese</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;芝士丝&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 帕尔马干酪</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ParmesanCheese</span> : <span class="title">ICheese</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;帕尔马干酪&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 雷吉亚诺奶酪</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ReggianoCheese</span> : <span class="title">ICheese</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;雷吉亚诺奶酪&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.AbstractFactoryPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 蔬菜</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IVeggies</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 茄子</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Eggplant</span> : <span class="title">IVeggies</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;茄子&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 大蒜</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Garlic</span> : <span class="title">IVeggies</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;大蒜&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 菠菜</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Spinach</span> : <span class="title">IVeggies</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;菠菜&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 洋葱</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Onion</span> : <span class="title">IVeggies</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;洋葱&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 蘑菇</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Mushroom</span> : <span class="title">IVeggies</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;蘑菇&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 辣椒</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RedPepper</span> : <span class="title">IVeggies</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;辣椒&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 黑橄榄</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BlackOlives</span> : <span class="title">IVeggies</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;黑橄榄&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.AbstractFactoryPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 意大利辣香肠</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IPepperoni</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SlicedPepperoni</span> : <span class="title">IPepperoni</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> String <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;切意大利辣香肠&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.AbstractFactoryPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 蛤</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">IClams</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="built_in">string</span> <span class="title">ToString</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 新鲜的蛤</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FreshClams</span> : <span class="title">IClams</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> String <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;长岛之声的新鲜蛤&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 冷冻的蛤</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FrozenClams</span> : <span class="title">IClams</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> String <span class="title">ToString</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;切萨皮克湾的冷冻蛤&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>接下来，我们就可以根据原料工厂来创建不同地区的原料工厂了，以纽约原料工厂为例：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 纽约披萨原料工厂</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NYPizzaIngredientFactory</span> : <span class="title">PizzaIngredientFactory</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IDough <span class="title">createDough</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ThinCrustDough();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ISauce <span class="title">createSauce</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MarinaraSauce();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ICheese <span class="title">createCheese</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ReggianoCheese();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IVeggies[] <span class="title">createVeggies</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        IVeggies[] veggies = &#123;</span><br><span class="line">        <span class="keyword">new</span> Garlic(),</span><br><span class="line">        <span class="keyword">new</span> Onion(),</span><br><span class="line">        <span class="keyword">new</span> Mushroom(),</span><br><span class="line">        <span class="keyword">new</span> RedPepper()</span><br><span class="line">    &#125;;</span><br><span class="line">        <span class="keyword">return</span> veggies;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IPepperoni <span class="title">createPepperoni</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SlicedPepperoni();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IClams <span class="title">createClam</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> FreshClams();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>同样的，芝加哥原料工厂如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 芝加哥披萨原料工厂</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ChicagoPizzaIngredientFactory</span> : <span class="title">PizzaIngredientFactory</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> IDough <span class="title">createDough</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ThickCrustDough();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ISauce <span class="title">createSauce</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> PlumTomatoSauce();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ICheese <span class="title">createCheese</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> MozzarellaCheese();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IVeggies[] <span class="title">createVeggies</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        IVeggies[] veggies = &#123;</span><br><span class="line">            <span class="keyword">new</span> BlackOlives(),</span><br><span class="line">            <span class="keyword">new</span> Spinach(),</span><br><span class="line">            <span class="keyword">new</span> Eggplant()</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">return</span> veggies;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IPepperoni <span class="title">createPepperoni</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> SlicedPepperoni();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IClams <span class="title">createClam</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> FrozenClams();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>现在，所有的原料已经准备完成，我们需要修改一下披萨，使其只能使用我们原料工厂提供的原料：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">Pizza</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> IDough dough;</span><br><span class="line">    <span class="keyword">public</span> ISauce sauce;</span><br><span class="line">    <span class="keyword">public</span> IVeggies[] veggies;</span><br><span class="line">    <span class="keyword">public</span> ICheese cheese;</span><br><span class="line">    <span class="keyword">public</span> IPepperoni pepperoni;</span><br><span class="line">    <span class="keyword">public</span> IClams clam;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 准备</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">prepare</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 烘焙</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">bake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;350摄氏度烘焙25分钟。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 切</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">cut</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;将披萨切成对角。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 装盒</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">box</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;将披萨放入盒中&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span>(<span class="params">String name</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> String <span class="title">ToString</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        StringBuilder result = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        result.Append(<span class="string">&quot;---- &quot;</span> + name + <span class="string">&quot; ----\n&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (dough != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            result.Append(dough);</span><br><span class="line">            result.Append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (sauce != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            result.Append(sauce);</span><br><span class="line">            result.Append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cheese != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            result.Append(cheese);</span><br><span class="line">            result.Append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (veggies != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; veggies.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                result.Append(veggies[i]);</span><br><span class="line">                <span class="keyword">if</span> (i &lt; veggies.Length - <span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    result.Append(<span class="string">&quot;, &quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            result.Append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (clam != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            result.Append(clam);</span><br><span class="line">            result.Append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (pepperoni != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            result.Append(pepperoni);</span><br><span class="line">            result.Append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result.ToString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在抽象类 <code>Pizza</code> 中，<code>prepare</code> 方法也被定义为抽象方法，因为这里我们需要根据不同的披萨生成不同的原料。</p>
<p>接下来，我们就可以制作披萨了：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 芝士披萨</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CheesePizza</span> : <span class="title">Pizza</span></span><br><span class="line">&#123;</span><br><span class="line">    PizzaIngredientFactory ingredientFactory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CheesePizza</span>(<span class="params">PizzaIngredientFactory ingredientFactory</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.ingredientFactory = ingredientFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">prepare</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;准备：&quot;</span> + name);</span><br><span class="line">        dough = ingredientFactory.createDough();</span><br><span class="line">        sauce = ingredientFactory.createSauce();</span><br><span class="line">        cheese = ingredientFactory.createCheese();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在重写的 <code>prepare</code> 方法中，当我们需要什么原料我们只要向原料工厂要就行了。具体是什么原料，由原料工厂来决定，纽约的原料工厂就给纽约风格的原料，芝加哥的原料工厂就给芝加哥风格的原料。</p>
<p>同样的，蛤蜊披萨也是：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 蛤蜊披萨</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ClamPizza</span> : <span class="title">Pizza</span></span><br><span class="line">&#123;</span><br><span class="line">    PizzaIngredientFactory ingredientFactory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ClamPizza</span>(<span class="params">PizzaIngredientFactory ingredientFactory</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.ingredientFactory = ingredientFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">prepare</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;准备：&quot;</span> + name);</span><br><span class="line">        dough = ingredientFactory.createDough();</span><br><span class="line">        sauce = ingredientFactory.createSauce();</span><br><span class="line">        cheese = ingredientFactory.createCheese();</span><br><span class="line">        clam = ingredientFactory.createClam();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>相对于 <code>CheesePizza</code>，<code>ClamPizza</code> 多了蛤蜊作为原谅，至于蛤蜊的种类，就由所在地的工厂来决定。如果是靠海的纽约，那就可以拿到新鲜的蛤蜊，如果是内陆的芝加哥，那么就只能使用冷冻的蛤蜊了。</p>
<p>另外两种披萨：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 素食披萨</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">VeggiePizza</span> : <span class="title">Pizza</span></span><br><span class="line">&#123;</span><br><span class="line">    PizzaIngredientFactory ingredientFactory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">VeggiePizza</span>(<span class="params">PizzaIngredientFactory ingredientFactory</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.ingredientFactory = ingredientFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">prepare</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;准备：&quot;</span> + name);</span><br><span class="line">        dough = ingredientFactory.createDough();</span><br><span class="line">        sauce = ingredientFactory.createSauce();</span><br><span class="line">        cheese = ingredientFactory.createCheese();</span><br><span class="line">        veggies = ingredientFactory.createVeggies();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 意大利辣香肠比萨</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PepperoniPizza</span> : <span class="title">Pizza</span></span><br><span class="line">&#123;</span><br><span class="line">    PizzaIngredientFactory ingredientFactory;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PepperoniPizza</span>(<span class="params">PizzaIngredientFactory ingredientFactory</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.ingredientFactory = ingredientFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">prepare</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Console.WriteLine(<span class="string">&quot;准备：&quot;</span> + name);</span><br><span class="line">        dough = ingredientFactory.createDough();</span><br><span class="line">        sauce = ingredientFactory.createSauce();</span><br><span class="line">        cheese = ingredientFactory.createCheese();</span><br><span class="line">        veggies = ingredientFactory.createVeggies();</span><br><span class="line">        pepperoni = ingredientFactory.createPepperoni();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>再回到披萨店：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">PizzaStore</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">abstract</span> Pizza <span class="title">createPizza</span>(<span class="params">String item</span>)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Pizza <span class="title">orderPizza</span>(<span class="params">String type</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Pizza pizza = createPizza(type);</span><br><span class="line"></span><br><span class="line">        Console.WriteLine(<span class="string">&quot;制作一个&quot;</span> + pizza.getName());</span><br><span class="line"></span><br><span class="line">        pizza.prepare();</span><br><span class="line">        pizza.bake();</span><br><span class="line">        pizza.cut();</span><br><span class="line">        pizza.box();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pizza;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>创建纽约披萨加盟店和芝加哥披萨加盟店：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 纽约披萨店</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NYPizzaStore</span> : <span class="title">PizzaStore</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> Pizza <span class="title">createPizza</span>(<span class="params"><span class="built_in">string</span> item</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Pizza pizza = <span class="literal">null</span>;</span><br><span class="line">        PizzaIngredientFactory ingredientFactory = <span class="keyword">new</span> NYPizzaIngredientFactory();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (item.Equals(<span class="string">&quot;cheese&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            pizza = <span class="keyword">new</span> CheesePizza(ingredientFactory);</span><br><span class="line">            pizza.setName(<span class="string">&quot;纽约风格芝士披萨&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (item.Equals(<span class="string">&quot;veggie&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            pizza = <span class="keyword">new</span> VeggiePizza(ingredientFactory);</span><br><span class="line">            pizza.setName(<span class="string">&quot;纽约风格素食披萨&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (item.Equals(<span class="string">&quot;clam&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            pizza = <span class="keyword">new</span> ClamPizza(ingredientFactory);</span><br><span class="line">            pizza.setName(<span class="string">&quot;纽约风格蛤蜊披萨&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (item.Equals(<span class="string">&quot;pepperoni&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            pizza = <span class="keyword">new</span> PepperoniPizza(ingredientFactory);</span><br><span class="line">            pizza.setName(<span class="string">&quot;纽约风格意大利辣香肠披萨&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pizza;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 芝加哥披萨店</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ChicagoPizzaStore</span> : <span class="title">PizzaStore</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> Pizza <span class="title">createPizza</span>(<span class="params"><span class="built_in">string</span> item</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Pizza pizza = <span class="literal">null</span>;</span><br><span class="line">        PizzaIngredientFactory ingredientFactory = <span class="keyword">new</span> ChicagoPizzaIngredientFactory();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (item.Equals(<span class="string">&quot;cheese&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            pizza = <span class="keyword">new</span> CheesePizza(ingredientFactory);</span><br><span class="line">            pizza.setName(<span class="string">&quot;芝加哥风格芝士披萨&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (item.Equals(<span class="string">&quot;veggie&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            pizza = <span class="keyword">new</span> VeggiePizza(ingredientFactory);</span><br><span class="line">            pizza.setName(<span class="string">&quot;芝加哥风格素食披萨&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (item.Equals(<span class="string">&quot;clam&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            pizza = <span class="keyword">new</span> ClamPizza(ingredientFactory);</span><br><span class="line">            pizza.setName(<span class="string">&quot;芝加哥风格蛤蜊披萨&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (item.Equals(<span class="string">&quot;pepperoni&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            pizza = <span class="keyword">new</span> PepperoniPizza(ingredientFactory);</span><br><span class="line">            pizza.setName(<span class="string">&quot;芝加哥风格意大利辣香肠披萨&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> pizza;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这两家披萨店就是抽象工厂的客户，如果想生产纽约风格的披萨，只需要使用纽约披萨原料工厂提供的原料。</p>
<h2 id="注意的点"><a href="#注意的点" class="headerlink" title="注意的点"></a>注意的点</h2><ul>
<li><p>抽象工厂定义了一个接口，所有的具体工厂都必须实现此接口。</p>
</li>
<li><p>在客户的代码中，只需要涉及抽象工厂，当运行时将自动使用实际的具体工厂。</p>
</li>
<li><p>当需要创建产品家族和想让制造的相关产品集合起来时，可以使用抽象工厂，而当目前还不知道将来需要实例化哪些具体类时，就可以使用工厂方法。</p>
</li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/AemonCao/DesignPattern/tree/master/DesignPattern/AbstractFactoryPattern">AbstractFactoryPattern</a></p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>最后让我们点个披萨吃吧：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">PizzaStore nyStore = <span class="keyword">new</span> NYPizzaStore();</span><br><span class="line">Pizza pizza = nyStore.orderPizza(<span class="string">&quot;cheese&quot;</span>);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>设计模式</tag>
        <tag>抽象工厂模式</tag>
        <tag>Abstract Factory Pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>如何「黑入」你的特斯拉</title>
    <url>/2021/08/03/How-to-hack-your-Tesla/</url>
    <content><![CDATA[<p>正题之前，先说一些半题外话：</p>
<p>提车到现在已经三个多月了，我对 Model 3 的感受就是好开。不过我是基本上没开过油车的。所以我不能说比油车好开多少，毕竟我驾照也是五年前学的，我已经忘了教练车开起来是什么感觉了。</p>
<p>买车的时候，正是刹车问题最沸沸扬扬的时候，不被影响是不可能的，不过还是抱着一颗支持人类太空计划的心选择了特斯拉（SpaceX 天下第一）。那时候也要很多朋友半调侃的提起这个问题，我都是笑着说：「是的啊，刹车根本没用，每次都是开门直接脚刹」。你要是问我有没有遇到刹车失灵的情况，说实话，到目前为止我都没踩过几脚刹车，单踏板模式太爽了。</p>
<h3 id="Tesla-App"><a href="#Tesla-App" class="headerlink" title="Tesla App"></a>Tesla App</h3><p>特斯拉有个官方的 <a href="https://apps.apple.com/cn/app/tesla/id582007913">App</a>，下载后登录 Tesla 账号后就可以对车子进行控制，例如：空调、车窗、前后备箱、闪灯、鸣笛等等，甚至可以控制车子前进后退（极其缓慢的），方便在超挤的车位中进出。</p>
<p>虽然这个 APP 控制功能强大，但是可以查看的信息却是少得可怜，只能查看车辆的当前位置、当前电量、当前温度、总里程。基本上再没有其他信息了。</p>
<p>但其实这些信息，车辆都会进行记录，只是 APP 没有展示出来。特斯拉方面已经设计了一整套完善的车机接口，APP 只是调取了部分接口而已。你问我为什么特斯拉不开放？我也不知道，毕竟它做得到车内安装了 14 个喇叭却只启用 8 个；后排座椅硬件上支持座椅加热，却不开放后排座椅加热的开关。</p>
<h3 id="TeslaMate"><a href="#TeslaMate" class="headerlink" title="TeslaMate"></a>TeslaMate</h3><p>国外已经有大神通过反向特斯拉的 App，取得了很多尚未开放的接口，我要介绍的就是其中一个叫做 <a href="https://github.com/adriankumpf/teslamate">TeslaMate</a> 的项目。</p>
<p>它做到了通过调取 Tesla 的接口来获取更多的数据，并将其整合成图表，以实现例如：终身驾驶地图、驾驶效率报告、充电报告、电池退化统计等等等等。</p>
<p>其中最吸引我的就是终身驾驶地图这一功能，苹果手机的相册拥有地图功能，可以通过照片的拍摄地点来记录你所到过的地方，所以我每到一个新地方就会拍些照片，就好像游戏中打卡一样。我是那种喜欢记录过去的人，这功能简直直击我的心坎。不多说，就但这一个功能，我也要把它搭起来。</p>
<h3 id="搭建"><a href="#搭建" class="headerlink" title="搭建"></a>搭建</h3><h4 id="搭在哪"><a href="#搭在哪" class="headerlink" title="搭在哪"></a>搭在哪</h4><p>TeslaMate 的文档是这么说的：</p>
<blockquote>
<p>A Machine that’s always on, so TeslaMate can continually fetch data.</p>
</blockquote>
<p>一台永远在线的机器，这样 TeslaMate 才能不断得获取数据。</p>
<p>那么现在我就有几个选择：</p>
<ol>
<li>自己的台式电脑；</li>
<li>云服务器；</li>
<li>树莓派。</li>
</ol>
<p>开始是想安装在台式机上的，但是自从我上次由于 24 小时开机挖 ETH 导致电脑无故蓝屏后，我就不太敢长时间让它开机了。</p>
<p>其次是云服务器，这其实是最好的选择，永远在线（前提是💰足够），并且支持外网访问，这样你在世界各地都能看到自己的车辆数据，那没选择它的原因呢？就是因为💰不够。</p>
<p>最后就是树莓派了，选它的原因就是不想再看它吃灰了。而且之后配合公网 IP，以及 DDNS，也能实现和云服务器一样的效果。比起云服务器有个优点是，数据都是存在我自己的设备上，相对来说安全一些。所以就决定部署在树莓派上了。</p>
<h4 id="怎么搭"><a href="#怎么搭" class="headerlink" title="怎么搭"></a>怎么搭</h4><p>首先需要在树莓派上安装 <a href="https://www.docker.com/">Docker</a>，当然如果部署在台式电脑或者云服务器上，也都是要安装 Docker 的。</p>
<p>Docker 在树莓派上的安装步骤如下：</p>
<ol>
<li><p>安装 Docker</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -sSL https://get.docker.com | sh</span><br></pre></td></tr></table></figure>
</li>
<li><p>为 <code>pi</code> 用户添加权限以运行 Docker 命令</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo usermod -aG docker pi</span><br></pre></td></tr></table></figure>
<p> 之后重启一下，或者使用 sudo 来运行下一步的命令。</p>
</li>
<li><p>测试 Docker 是否安装成功</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure>
</li>
<li><p>十分重要！安装正确的依赖项</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y libffi-dev libssl-dev</span><br></pre></td></tr></table></figure>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install -y python3 python3-pip</span><br></pre></td></tr></table></figure>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get remove python-configparser</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装 <a href="https://docs.docker.com/compose/">Docker Compose</a></p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo pip3 -v install docker-compose</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>这样，准备工作就完成了。接下来开始安装 TeslaMate：</p>
<ol>
<li><p>新建一个名为 <code>docker-compose.yml</code> 的文件，内容如下：</p>
 <figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&quot;3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">teslamate:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">teslamate/teslamate:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_USER=teslamate</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_PASS=secret</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_NAME=teslamate</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_HOST=database</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">MQTT_HOST=mosquitto</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">4000</span><span class="string">:4000</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./import:/opt/app/import</span></span><br><span class="line">    <span class="attr">cap_drop:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">all</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">database:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">postgres:13</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_USER=teslamate</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_PASSWORD=secret</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">POSTGRES_DB=teslamate</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">teslamate-db:/var/lib/postgresql/data</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">grafana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">teslamate/grafana:latest</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_USER=teslamate</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_PASS=secret</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_NAME=teslamate</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">DATABASE_HOST=database</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3000</span><span class="string">:3000</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">teslamate-grafana-data:/var/lib/grafana</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">mosquitto:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">eclipse-mosquitto:2</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">command:</span> <span class="string">mosquitto</span> <span class="string">-c</span> <span class="string">/mosquitto-no-auth.conf</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">1883</span><span class="string">:1883</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mosquitto-conf:/mosquitto/config</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">mosquitto-data:/mosquitto/data</span></span><br><span class="line"></span><br><span class="line"><span class="attr">volumes:</span></span><br><span class="line">  <span class="attr">teslamate-db:</span></span><br><span class="line">  <span class="attr">teslamate-grafana-data:</span></span><br><span class="line">  <span class="attr">mosquitto-conf:</span></span><br><span class="line">  <span class="attr">mosquitto-data:</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>使用 <code>docker-compose up</code> 命令启动 docker 容器，如果要在后台运行，可以添加 <code>-d</code> 参数：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>好了，至此，属于你自己的 TeslaMate 已经搭建完成了。没错，由于 docker 的存在，搭建的过程还是很简单的。</p>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>在部署完成后，我们可以访问：<a href="http://192.168.2.121:4000">http://192.168.2.121:4000</a> 这个网址。</p>
<p>这边的 IP 地址是我的树莓派的局域网 IP 地址，如果你使用的是云服务器，那就替换成云服务器的公网 IP 地址，并且要去控制台的安全策略组开放 4000 端口以及下面的 3000 端口。如果你是在台式电脑上部署的，那和树莓派一样，替换成你的台式机局域网 IP 地址就行了，或者可以使用 <code>127.0.0.1</code> 这个 IP 来访问。</p>
<p>进入后，使用你的特斯拉账号来进行登录，不出意外的话，你应该可以看到如下页面：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/How-to-hack-your-Tesla/web_interface.png" alt="web_interface.png"></p>
<p>之后，你就可以访问 <a href="http://192.168.2.121:3000">http://192.168.2.121:3000</a> 来访问 <a href="https://grafana.com/">Grafana</a> 仪表盘，Grafana 是一个跨平台、开源的数据可视化网络应用程序平台。它可以将 TeslaMate 中数据库的数据通过可视化图表的方式展示出来。</p>
<h4 id="驾驶细节（Drive-Details）"><a href="#驾驶细节（Drive-Details）" class="headerlink" title="驾驶细节（Drive Details）"></a>驾驶细节（Drive Details）</h4><p>例如你可以看到你每次行程的驾驶细节（Drive Details）</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/How-to-hack-your-Tesla/drive.png" alt="drive.png"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/How-to-hack-your-Tesla/race_track.png" alt="race_track.png"></p>
<h4 id="驾驶统计（Drive-Stats）"><a href="#驾驶统计（Drive-Stats）" class="headerlink" title="驾驶统计（Drive Stats）"></a>驾驶统计（Drive Stats）</h4><p>你的总历程数，你的总驾驶次数，你的总耗电量，你的预计每月里程，预计每年里程</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/How-to-hack-your-Tesla/drive-stats.png" alt="drive-stats.png"></p>
<h4 id="驾驶记录（Drives）"><a href="#驾驶记录（Drives）" class="headerlink" title="驾驶记录（Drives）"></a>驾驶记录（Drives）</h4><p>你的每一段行程的记录：起始位置，耗时，里程，开始电量，结束电量，温度，平均速度，耗电量：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/How-to-hack-your-Tesla/drives.png" alt="drives.png"></p>
<h4 id="充电统计（Charging-Stats）"><a href="#充电统计（Charging-Stats）" class="headerlink" title="充电统计（Charging Stats）"></a>充电统计（Charging Stats）</h4><p>可以查看你充电的统计（Charging Stats），例如每次充电的时间，是交流还是直流，你在各个地点充电的统计信息</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/How-to-hack-your-Tesla/charging-stats.png" alt="charging-stats.png"></p>
<h4 id="充电记录（Charges）"><a href="#充电记录（Charges）" class="headerlink" title="充电记录（Charges）"></a>充电记录（Charges）</h4><p>你的每一次充电的记录：时间，充电位置，充电时长，话费，增加的里程</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/How-to-hack-your-Tesla/charging-history.png" alt="charging-history.png"></p>
<h4 id="亏电记录（Vampire-Drain）"><a href="#亏电记录（Vampire-Drain）" class="headerlink" title="亏电记录（Vampire Drain）"></a>亏电记录（Vampire Drain）</h4><p>每次驻车时的亏电记录</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/How-to-hack-your-Tesla/vampire_drain.png" alt="vampire_drain.png"></p>
<h4 id="更新记录（Updates）"><a href="#更新记录（Updates）" class="headerlink" title="更新记录（Updates）"></a>更新记录（Updates）</h4><p>每次系统更新的记录：更新开始时间，更新结束时间，系统版本</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/How-to-hack-your-Tesla/updates.png" alt="updates.png"></p>
<h4 id="预计里程（Projected-Range）"><a href="#预计里程（Projected-Range）" class="headerlink" title="预计里程（Projected Range）"></a>预计里程（Projected Range）</h4><p>你的车辆电池预计里程和总里程数以及时间的关系：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/How-to-hack-your-Tesla/projected-range.png" alt="projected-range.png"></p>
<h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><p>需要注意几点：</p>
<ol>
<li><p>每一步操作前，务必知道自己在做什么；</p>
</li>
<li><p>上面提供的安装方法，仅仅当在自己的家庭网络中部署时才推荐，如果想要将其暴露在互联网上（例如我提到的安装在云服务器上），请查看官方的<a href="https://docs.teslamate.org/docs/guides/traefik">高级指南</a>；</p>
</li>
<li><p>如果希望长久的使用，还是需要定时备份，备份的方法，请查看<a href="https://docs.teslamate.org/docs/maintenance/backup_restore">这里</a>；</p>
</li>
<li><p>此项目只能展示你部署之后车辆的信息，你部署之前的信息是无法获取到的；</p>
</li>
<li><p><del>所有因为此文章，进行操作并导致车辆变砖的情况，本人概不负责；</del></p>
</li>
<li><p>请理性看待这一篇文章，这并不是一篇教授你如何入侵的教程，学会了这些你也<strong>不能</strong>启停其他特斯拉车主的车，也<strong>不能</strong>使他们的<strong>刹车失灵</strong>。</p>
</li>
</ol>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><p><a href="https://github.com/adriankumpf/teslamate">https://github.com/adriankumpf/teslamate</a></p>
</li>
<li><p><a href="https://docs.teslamate.org/docs/installation/docker">https://docs.teslamate.org/docs/installation/docker</a></p>
</li>
<li><p><a href="https://dev.to/rohansawant/installing-docker-and-docker-compose-on-the-raspberry-pi-in-5-simple-steps-3mgl">https://dev.to/rohansawant/installing-docker-and-docker-compose-on-the-raspberry-pi-in-5-simple-steps-3mgl</a></p>
</li>
<li><p><a href="https://www.bilibili.com/video/BV1u54y167BE">https://www.bilibili.com/video/BV1u54y167BE</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Tesla</category>
      </categories>
      <tags>
        <tag>Tesla</tag>
        <tag>Docker</tag>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux 学习记录</title>
    <url>/2020/03/11/Linux%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>这是一篇偏向流水账的文章，主要记一下平时使用 Linux 过程中的一些小技巧，或者某些命令的使用方法。</p>
<p>本文不定期更新，可以点击目录来跳转观看。</p>
<span id="more"></span>
<h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><h3 id="tac"><a href="#tac" class="headerlink" title="tac"></a>tac</h3><blockquote>
<p>用于将文件已行为单位的反序输出，即第一行最后显示，最后一行先显示。</p>
</blockquote>
<p>今天在写博客的<a href="/about">关于页</a>时，把原本记在微信收藏中的一些「骚话」贴过来了，原本记录的时候是按时间从旧到新，如果有新的，就往底部添加。</p>
<p>但是觉得这样不太好，我希望比较新的「骚话」可以放在前面。</p>
<p>第一时间是想用 <em>python</em> 或者 <em>JavaScript</em> 写个小脚本跑一下，但是有点懒，就去网上找了一下资料，被我找到了<a href="https://www.itranslater.com/qa/details/2106725530790790144">这个</a>，排在第一的就是 <a href="https://man.linuxde.net/tac">tac</a> 命令。</p>
<p>tac 其实就是 cat 的 reverse，包含于 <a href="https://zh.wikipedia.org/zh-hans/GNU%E6%A0%B8%E5%BF%83%E5%B7%A5%E5%85%B7%E7%BB%84">coreutils</a>。</p>
<p>用法和 cat 类似，预览：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tac abc.txt</span><br></pre></td></tr></table></figure>
<p>输出到文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tac abc.txt &gt; cba.txt</span><br></pre></td></tr></table></figure>
<p>目前想到的用法可能是用在日志文件上，可以将日志文件 reverse，方便查看最新的日志。</p>
<h3 id="w"><a href="#w" class="headerlink" title="w"></a>w</h3><blockquote>
<p>用于显示目前登入系统的用户信息。</p>
</blockquote>
<p>这个命令也不算是新学的，但是对输出的信息还只是一知半解，所以今天去查了一下，这边记录一下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">w</span><br></pre></td></tr></table></figure>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line"> 22:33:11 up 4 days,  9:44,  1 user,  load average: 0.05, 0.03, 0.05</span><br><span class="line">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">root     pts/1    192.168.1.88     22:22    7.00s  0.03s  0.00s w</span><br></pre></td></tr></table></figure>
<p>第一行显示以下信息：当前时间（<code>22:33:11</code>），系统运行时间（<code>up 4 days,  9:44</code>），当前一共有多少用户登录（<code>1 user</code>），以及过去 1 分钟，5 分钟，15 分钟的系统平均负载（<code>load average: 0.05, 0.03, 0.05</code>）。</p>
<p>第二行开始是一张表，标头依次为登录名（<code>USER</code>），登录后系统分配的终端号（<code>TTY</code>），远程主机名（<code>FROM</code>），何时登录（<code>LOGIN@</code>），空闲时间（<code>IDLE</code>），与该 TTY 终端连接的所由进程占用的时间，不包括过去的后台作业时间（<code>JCPU</code>），当前进程所占用的时间（<code>PCPU</code>），当前进程（<code>WHAT</code>）。</p>
<p>参考：</p>
<ul>
<li><p><code>man w</code></p>
</li>
<li><p><a href="https://www.geeksforgeeks.org/w-command-in-linux-with-examples/">w command in Linux with Examples</a></p>
</li>
<li><p><a href="https://blog.csdn.net/Jerry_1126/article/details/52088987">图解Linux命令之—w命令</a></p>
</li>
<li><p><a href="https://blog.csdn.net/zzxian/article/details/8070144">Linux的JCPU与PCPU</a></p>
</li>
</ul>
<h3 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h3><blockquote>
<p>在给定的文件中搜寻指定的字符串。</p>
</blockquote>
<p>这是一个很实用的命令，它可以在使文件搜索更上一层楼，往常的文件搜索关键字只能到文件名。而 <code>grep</code> 则可以<del>深入</del>到文件内部。</p>
<p>用法是：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">grep &#x27;The quick brown fox jumps over a lazy dog.&#x27; a.txt</span><br></pre></td></tr></table></figure>
<p>意思就是在 <em>a.txt</em> 文件中搜索 <code>The quick brown fox jumps over a lazy dog.</code> 字符串。</p>
<p>它有几个常用的参数：</p>
<ul>
<li><p>-i</p>
<p>忽略字符串大小写。</p>
</li>
<li><p>-r</p>
<p>在当前文件夹下递归查询。</p>
</li>
<li><p>-n</p>
<p>搜索结果显示行号。</p>
</li>
</ul>
<p>参考：</p>
<ul>
<li><p><code>man grep</code></p>
</li>
<li><p><a href="https://man.linuxde.net/grep">grep命令-文件过滤分割与合并</a></p>
</li>
<li><p><a href="https://blog.csdn.net/devwang_com/article/details/52587884">grep查找字符串所在文件和行号，find查找文件所在目录即路径</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/0056d671ea6d">27个常用的 Linux 命令</a></p>
</li>
</ul>
<h3 id="mount"><a href="#mount" class="headerlink" title="mount"></a>mount</h3><blockquote>
<p>mount命令用于加载文件系统到指定的加载点。</p>
</blockquote>
<p>在 Linux 中，外置的存储设备并不会自动挂载，所以需要 <code>mount</code> 命令来进行挂载。</p>
<p>用法是：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mount /dev/mmcblk0p1 /home/pi/Mount/3TB</span><br></pre></td></tr></table></figure>
<p>意思是将设备 <code>/dev/mmcblk0p1</code> 挂载到挂载点 <code>/home/pi/Mount/3TB</code>。这里要注意的是，如果挂载点不存在将会报错 <code>mount: mount point /home/pi/Mount/3TB does not exist</code>，所以要先手动创建挂载点目录；</p>
<p>参考：</p>
<ul>
<li><a href="https://man.linuxde.net/mount">mount命令-用于加载文件系统到指定的加载点</a></li>
</ul>
<h2 id="Vim"><a href="#Vim" class="headerlink" title="Vim"></a>Vim</h2><p>这里写一下 Vim 的学习历程，之前都是用 nano，但是不是所有的系统都预装的 nano。而且最近在使用 Vim 的时候，发现并没用想象中那么难用。更加下定了要学好 Vim 的决心。</p>
<h3 id="退出-Vim"><a href="#退出-Vim" class="headerlink" title="退出 Vim"></a>退出 Vim</h3><p>在学习 Vim 前，首先要先学会如何退出 Vim，毕竟很多人直到老死也没有退出 Vim。</p>
<blockquote>
<p>How to exit the Vim editor?</p>
</blockquote>
<p>这个问题在 <a href="https://stackoverflow.com/questions/11828270/how-do-i-exit-the-vim-editor">Stack Overflow</a> 得到了 200多万次的查看（截至 2020-3-12 13:55:28）。</p>
<p>其实排名第一的答案已经讲得很清楚了，这边就把答案拿过来放在这里了：</p>
<p>点击 <kbd>ESC</kbd> 进入「正常模式」，然后输入 <kbd>:</kbd>，进入「命令模式」。此时屏幕的下方会出现一个冒号，你可以输入以下命令，并按 <kbd>ENTER</kbd> 执行：</p>
<ul>
<li><code>:q</code>：退出（<code>:quit</code> 的缩写）；</li>
<li><code>:q!</code>：退出且不保存（<code>:quit!</code> 的缩写）；</li>
<li><code>:wq</code>：保存并退出；</li>
<li><code>:wq!</code>：保存并退出即使文件没有写入权限（强制保存退出）；</li>
<li><code>:x</code>：保存并退出（类似 <code>:wq</code>，但是只有在有更改的情况下才保存）；</li>
<li><code>:exit</code>：保存并退出（和 <code>:x</code> 相同）；</li>
<li><code>:qa</code>：退出所有（<code>:quitall</code> 的缩写）；</li>
<li><code>:cq</code>：退出且不保存（即便有错误）。</li>
</ul>
<p>你也可以直接在「正常模式」下输入 <code>ZZ</code> 来保存并退出 Vim（和 <code>:x</code> 相同），或者 <code>ZQ</code> 不保存并退出（和 <code>:q!</code> 相同），注意此处 <code>ZZ</code> 大写和小写是完全不同的。</p>
<h3 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h3><p>在命令模式按下 <kbd>/</kbd>，之后跟上你需要搜索的字符串然后回车就可以进行搜索，如果要查找下一个只需要按下 <kbd>n</kbd>，上一个的话则是 <kbd>N</kbd>。</p>
<h3 id="上下移动一行代码"><a href="#上下移动一行代码" class="headerlink" title="上下移动一行代码"></a>上下移动一行代码</h3><p>在 Visual Studio Code 中，上下移动代码比较简单，只要使用 <kbd>alt</kbd> + <kbd>↑</kbd> 或者 <kbd>alt</kbd> + <kbd>↓</kbd> 就可以移动了。</p>
<p>而在 vim 中，首先你需要将光标移动到你想要操作的行，按下两次 <kbd>d</kbd>（剪切当前行），然后移动你的光标到你想要的位置，按下 <kbd>p</kbd>（在光标之后粘贴） 或 <kbd>P</kbd>（在光标之前粘贴），即可将一行代码移动过来了。</p>
<p>参考：</p>
<ul>
<li><p><a href="https://www.v2ex.com/t/49043">请问vim如何移动当前行向上或向下？不用选中</a></p>
</li>
<li><p><a href="https://blog.csdn.net/donahue_ldz/article/details/17139361">最全的vim快捷键</a></p>
</li>
</ul>
<h3 id="Vim-配置"><a href="#Vim-配置" class="headerlink" title="Vim 配置"></a>Vim 配置</h3><p>Vim 不仅功能强大，而且它的可配置性也非常强，所以如果想要更好的使用这个工具，适合自己的配置是必不可少的。</p>
<p>这边就把我目前的配置放在下面，大家可以进行参考（其实大多数都是从<a href="https://www.ruanyifeng.com/blog/2018/09/vimrc.html">阮老师</a>这里抄来哒）：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="comment">&quot; 显示行号</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">number</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 显示相对行号</span></span><br><span class="line"><span class="keyword">set</span> relativenumber</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 当前行高亮</span></span><br><span class="line"><span class="keyword">set</span> cursorline</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 不与 Vi 兼容（采用 Vim 自己的操作命令）。</span></span><br><span class="line"><span class="keyword">set</span> nocompatible</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 语法高亮</span></span><br><span class="line"><span class="keyword">syntax</span> <span class="keyword">on</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 显示当前是什么模式</span></span><br><span class="line"><span class="keyword">set</span> showmode</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 使用utf-8编码</span></span><br><span class="line"><span class="keyword">set</span> encoding=utf-<span class="number">8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 使用 256 色</span></span><br><span class="line"><span class="keyword">set</span> t_Co=<span class="number">256</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 垂直滚动时，光标距离底部的位置</span></span><br><span class="line"><span class="keyword">set</span> scrolloff=<span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 是否显示状态栏。0 表示不显示，1 表示只在多窗口时显示，2 表示显示。</span></span><br><span class="line"><span class="keyword">set</span> laststatus=<span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 在状态栏显示光标的当前位置（位于哪一行哪一列）。</span></span><br><span class="line"><span class="keyword">set</span>  ruler</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 光标遇到圆括号、方括号、大括号时，自动高亮对应的另一个圆括号、方括号和大括号。</span></span><br><span class="line"><span class="keyword">set</span> showmatch</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 打开英语单词的拼写检查。</span></span><br><span class="line"><span class="comment">&quot; set spell spelllang=en_us</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 保留撤销历史。</span></span><br><span class="line"><span class="keyword">set</span> <span class="built_in">undofile</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 出错时不要发出声音</span></span><br><span class="line"><span class="keyword">set</span> noerrorbells</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 出错时，发出视觉提示</span></span><br><span class="line"><span class="keyword">set</span> visualbell</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Vim 需要记住多少次历史操作。</span></span><br><span class="line"><span class="keyword">set</span> <span class="keyword">history</span>=<span class="number">1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 打开文件监视。如果在编辑过程中文件发生外部改变（比如被别的编辑器编辑了），就会发出提示。</span></span><br><span class="line"><span class="keyword">set</span> autoread</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 如果行尾有多余的空格（包括 Tab 键），该配置将让这些空格显示成可见的小方块。</span></span><br><span class="line"><span class="keyword">set</span> listchars=<span class="keyword">tab</span>:»■,trail:■</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">list</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 命令模式下，底部操作指令按下 Tab 键自动补全。第一次按下 Tab，会显示所有匹配的操作指令的清单；第二次按下 Tab，会依次选择各个指令。</span></span><br><span class="line"><span class="keyword">set</span> wildmenu</span><br><span class="line"><span class="keyword">set</span> wildmode=longes<span class="variable">t:list</span>,full</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; 一直显示标签页</span></span><br><span class="line"><span class="keyword">set</span> showtabline=<span class="number">2</span></span><br></pre></td></tr></table></figure>
<p>我将自己常用的几款软件的配置都放到了 <a href="https://github.com/AemonCao/mySettings">GitHub</a> 上，如果有需要可以看看。</p>
<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><h3 id="保存-GitHub-的用户名和密码"><a href="#保存-GitHub-的用户名和密码" class="headerlink" title="保存 GitHub 的用户名和密码"></a>保存 GitHub 的用户名和密码</h3><p>通过 ssh 远程服务器进行开发后，如果需要 <code>git push</code> 到 GitHub 的话，每次都需要重新输入用户名和密码，比较繁琐。</p>
<p>可以使用以下命令来设置：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global credential.helper cache</span><br></pre></td></tr></table></figure>
<p>或者：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure>
<p>使用 <code>cache</code> 选项的话，会将用户名密码保存在内存中，平且在15分钟后从内存中消失，使用 <code>store</code> 选项的话，则会将用户名密码保存在磁盘中，永远都不会消失，除非你更改了 GitHub 的密码，否则是永远都不用输入密码的。但是密码会以明文的方式存储在当前用户的根目录下的 <em>.git-credentials</em> 文件中，比较不安全。</p>
<p>如果你是 Mac 系统，则可以使用第三个选项 <code>osxkeychain</code>，可以将凭证存储都<a href="https://support.apple.com/zh-cn/HT204085">钥匙串</a>中。这样你的凭证虽然还是存储在磁盘中，但是它是被加密的，并且也是可以永久使用。</p>
<p>参考：</p>
<ul>
<li><a href="https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%87%AD%E8%AF%81%E5%AD%98%E5%82%A8">Git 工具 - 凭证存储</a></li>
</ul>
<h3 id="Submodules"><a href="#Submodules" class="headerlink" title="Submodules"></a>Submodules</h3><p>在搭建 hexo 博客的时候，当使用了 next 的 themes 时，修改配置后，发现 commit 总是报错。总觉得哪里不对劲，在 GitHub 上查看项目的时候，next 文件夹只有一个名称，无法点击进入。</p>
<p>如果一个项目中包含了另一个项目，我们就要使用 Git 的 Submodules 来进行管理。</p>
<p>首先要在当前主项目上使用 <code>git submodule</code> 命令来添加一个子项目：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git submodule add https://github.com/AemonCao/hexo-theme-next.git themes/next</span><br></pre></td></tr></table></figure>
<p>默认情况下，子项目会放在一个与仓库名同名的目录中，如果想放到其他地方，可以在命令最后添加一个路径。</p>
<p>这时候，主项目的目录下会有一个新的 <em>.gitmodules</em> 的文件。</p>
<p>这是用来保存项子项目的 URL 以及已经拉取的本地目录之间的映射：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[submodule &quot;themes/next&quot;]</span><br><span class="line">        path = themes/next</span><br><span class="line">        url = https://github.com/AemonCao/hexo-theme-next.git</span><br></pre></td></tr></table></figure>
<p>当前只有一条记录，如果添加了多个子项目，则会有多条记录。</p>
<p>之后在 Visual Studio Code 的「源代码管理页面」的「源代码管理提供程序」中就会出现两个项目，一个是主项目，一个就是刚刚添加的子项目。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/Linux学习记录/源代码管理提供程序.png" alt="源代码管理提供程序"></p>
<!-- <img data-src="/2020/03/11/Linux%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/%E6%BA%90%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86%E6%8F%90%E4%BE%9B%E7%A8%8B%E5%BA%8F.png" class="" title="源代码管理提供程序"> -->
<p>现在你就可以更好得管理这两个项目了。</p>
<p>此时在 GitHub 上，你的主项目中相应的<a href="https://github.com/AemonCao/AemonCao.github.io/tree/source/themes">子项目文件夹</a>也会有一个指向原仓库的某一次提交的一个链接。</p>
<p>参考：</p>
<ul>
<li><a href="https://git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97">Git 工具 - 子模块</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>Vim</tag>
      </tags>
  </entry>
  <entry>
    <title>在 Visual Studio Code 中远程开发</title>
    <url>/2020/03/08/Remote-development-in-Visual-Studio-Code/</url>
    <content><![CDATA[<p>由于近期的疫情影响，导致复工时候只能在家办公，所以捣鼓了一下远程办公，特此记录一下。</p>
<span id="more"></span>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol>
<li><p>一台可以通过 ssh 来进行连接的服务器（云服务器或者公司的服务器）；</p>
</li>
<li><p>一台用于可以连接 <code>0</code> 中的服务器的 PC。</p>
</li>
</ol>
<h2 id="安装-Visual-Studio-Code"><a href="#安装-Visual-Studio-Code" class="headerlink" title="安装 Visual Studio Code"></a>安装 Visual Studio Code</h2><p>点击这里下载「<a href="https://code.visualstudio.com/">Visual Studio Code</a>」，然后安装。</p>
<h2 id="安装远程插件"><a href="#安装远程插件" class="headerlink" title="安装远程插件"></a>安装远程插件</h2><p>新安装的 Visual Studio Code 并不能直接进行远程工作，需要下载相应的插件。</p>
<ol>
<li><p>在左侧边栏点击 Extensions（或者使用快捷键 Ctrl+Shift+X）调出插件管理页面；</p>
</li>
<li><p>在顶部搜索栏搜索「Remote」,在搜索结果中选择 「Remote - SSH」 进行安装；</p>
<p> 在安装的时候会自动为你安装 「Remote - SSH: Editing Configuration Files」。</p>
</li>
<li><p>安装完成后，你的左侧边栏就会多出一个「远程资源管理器（Remote Explorer）」的图标，如下图所示：</p>
 <!-- ![Remote Explorer](https://i.loli.net/2020/03/08/YXuTfDQxovHUkNm.png) -->
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/Remote-development-in-Visual-Studio-Code/RemoteExplorer.png" alt="RemoteExplorer"></p>
 <!-- <img data-src="/2020/03/08/Remote-development-in-Visual-Studio-Code/RemoteExplorer.png" class="" title="RemoteExplorer"> -->
</li>
</ol>
<h2 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h2><h3 id="进行连接"><a href="#进行连接" class="headerlink" title="进行连接"></a>进行连接</h3><p>点击远程资源管理器图标，在 SSH TARGETS 栏中点击加号，来新建一个 ssh 连接：</p>
<!-- ![SSH TARGETS](https://i.loli.net/2020/03/08/mlqFf1N9nuxRaEp.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/Remote-development-in-Visual-Studio-Code/SSHTARGETS.png" alt="SSHTARGETS"></p>
<!-- <img data-src="/2020/03/08/Remote-development-in-Visual-Studio-Code/SSHTARGETS.png" class="" title="SSHTARGETS"> -->
<p>输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh user@host</span><br></pre></td></tr></table></figure>
<p><code>user</code> 是用来登录的用户名，<code>host</code> 则是你需要远程的服务器的地址。</p>
<p>ssh 的默认端口是 22，如果你修改过该端口，则需要使用 p 参数：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh -p 9588 user@host</span><br></pre></td></tr></table></figure>
<p>9588 则是新的 ssh 端口。</p>
<p>回车，然后选择一个配置文件进行保存。</p>
<p>这时候在左侧 SSH TARGETS 下将会出现以你的 host 为名称的项目，右键选择在连接当前窗口或者在新窗口，进行连接。</p>
<!-- ![password.png](https://i.loli.net/2020/03/08/jXhLQ2UgY5Gwl3f.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/Remote-development-in-Visual-Studio-Code/password.png" alt="password"></p>
<!-- <img data-src="/2020/03/08/Remote-development-in-Visual-Studio-Code/password.png" class="" title="password"> -->
<p>输入当前用户名所对应的密码。</p>
<p>这时你的窗口左下角将会将会显示正在连接：</p>
<!-- ![Opening](https://i.loli.net/2020/03/08/Fa6xRzThrIsEYUN.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/Remote-development-in-Visual-Studio-Code/Opening.png" alt="Opening"></p>
<!-- <img data-src="/2020/03/08/Remote-development-in-Visual-Studio-Code/Opening.png" class="" title="Opening"> -->
<p>等待一段时间后。如果变成以下样式，则为连接成功：</p>
<!-- ![success.png](https://i.loli.net/2020/03/08/v6jDnFKbcJPWLRl.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/Remote-development-in-Visual-Studio-Code/success.png" alt="success"></p>
<!-- <img data-src="/2020/03/08/Remote-development-in-Visual-Studio-Code/success.png" class="" title="success"> -->
<h3 id="选择文件夹"><a href="#选择文件夹" class="headerlink" title="选择文件夹"></a>选择文件夹</h3><p>连接成功后，你要选择需要进行工作的文件夹，基本上是一个项目的根目录。</p>
<ol>
<li><p>点击左侧边栏的 Expoler（或者使用快捷键 Ctrl+Shift+E）打开资源管理器：</p>
 <!-- ![expoler.png](https://i.loli.net/2020/03/08/Tltvb9aLrmq67CI.png) -->
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/Remote-development-in-Visual-Studio-Code/expoler.png" alt="expoler"></p>
 <!-- <img data-src="/2020/03/08/Remote-development-in-Visual-Studio-Code/expoler.png" class="" title="expoler"> -->
</li>
<li><p>点击 Open Folder 按钮来选择文件夹：</p>
 <!-- ![open-folder.png](https://i.loli.net/2020/03/08/2JU7CYA5i6T1Fzc.png) -->
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/Remote-development-in-Visual-Studio-Code/open-folder.png" alt="open-folder"></p>
 <!-- <img data-src="/2020/03/08/Remote-development-in-Visual-Studio-Code/open-folder.png" class="" title="open-folder"> -->
</li>
<li><p>点击 OK，这时可能需要你再次输入密码，之后你的资源管理器中就会有选择文件夹下的文件了。</p>
</li>
</ol>
<h3 id="权限修改"><a href="#权限修改" class="headerlink" title="权限修改"></a>权限修改</h3><p>这时候你已经可以点击任意一个文件来进行预览了，为什么说是预览呢，因为当你尝试编辑并保存时，系统会有如下警告：</p>
<!-- ![error.png](https://i.loli.net/2020/03/08/BemOgUkIxCsjPrh.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/Remote-development-in-Visual-Studio-Code/error.png" alt="error"></p>
<!-- <img data-src="/2020/03/08/Remote-development-in-Visual-Studio-Code/error.png" class="" title="error"> -->
<p>提示权限不够。</p>
<p>最简单的方法是执行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo chmod 777 /path</span><br></pre></td></tr></table></figure>
<p>之后再保存的话就可以顺利保存成功了。</p>
]]></content>
      <categories>
        <category>Visual Studio Code</category>
      </categories>
      <tags>
        <tag>Visual Studio Code</tag>
      </tags>
  </entry>
  <entry>
    <title>Premiere Pro 学习笔记</title>
    <url>/2021/03/16/Premiere-Pro-%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    <content><![CDATA[<p>本文将采用问答的形式来记录学习 Premiere Pro 中遇到的问题。</p>
<p>目前正在学习过程中，等日后条目多了，将会进行分类。</p>
<h3 id="导入的图片素材分辨率和项目分辨率不一致，该怎么修改图片大小？"><a href="#导入的图片素材分辨率和项目分辨率不一致，该怎么修改图片大小？" class="headerlink" title="导入的图片素材分辨率和项目分辨率不一致，该怎么修改图片大小？"></a>导入的图片素材分辨率和项目分辨率不一致，该怎么修改图片大小？</h3><ol>
<li><p>将图片素材拖入视频轨道；</p>
</li>
<li><p>单击轨道中的相应素材；</p>
</li>
<li><p>在「源」窗口中单击「效果控件」标签页；</p>
</li>
<li><p>调整在「运动」效果下的「缩放」属性大小，即可同步调整素材大小了；</p>
</li>
<li><p>点击「缩放」标签即可在「节目」窗口显示图片大小变换框，可以直接用鼠标进行操作。</p>
</li>
</ol>
<h3 id="音频如何调整声音大小？"><a href="#音频如何调整声音大小？" class="headerlink" title="音频如何调整声音大小？"></a>音频如何调整声音大小？</h3><ol>
<li><p>将声音素材拖入视频轨道；</p>
</li>
<li><p>单击轨道中的相应素材；</p>
</li>
<li><p>在「源」窗口中单击「效果控件」标签页；</p>
</li>
<li><p>调整在「音量」效果下的「级别」属性大小，即可调整素材的音量大小了。</p>
</li>
</ol>
<h3 id="如何将视频定格若干秒？"><a href="#如何将视频定格若干秒？" class="headerlink" title="如何将视频定格若干秒？"></a>如何将视频定格若干秒？</h3><ol>
<li><p>「仅拖动视频」到序列；</p>
</li>
<li><p>在序列中，右键单击视频线前面的「fx」，选择「时间重映射」-&gt;「速度」；</p>
</li>
<li><p>拖动时间线到需要定格的画面；</p>
</li>
<li><p>在「源」窗口中单击「效果控件」标签页；</p>
</li>
<li><p>左键单击「视频」-&gt;「时间重映射」-&gt;「速度」-&gt;「添加/移除关键帧」来添加关键帧；</p>
</li>
<li><p>按住「Ctrl」+「Alt」用鼠标左键长按关键帧右侧标记并拖动需要定格的时长；</p>
</li>
<li><p>「仅拖动音频」到序列（这样做是为了将图像和声音分离，不然的话定格之后音画将不同步）；</p>
</li>
<li><p>使用「剃刀工具」在关键帧处将音频拆分为两段；</p>
</li>
<li><p>使用「选择工具」将后半段移动至定格结束后的位置。</p>
</li>
</ol>
]]></content>
      <categories>
        <category>Premiere Pro</category>
      </categories>
      <tags>
        <tag>Premiere Pro</tag>
      </tags>
  </entry>
  <entry>
    <title>简单工厂模式（Simple Factory Pattern）</title>
    <url>/2020/03/29/Simple-Factory-Pattern/</url>
    <content><![CDATA[<p>简单工厂模式的目的是：</p>
<blockquote>
<p>使用一个类来生产对象。</p>
</blockquote>
<span id="more"></span>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>以订购披萨为例。</p>
<p>首先我们需要一些披萨：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.SimpleFactoryPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 披萨抽象类</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">Pizza</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 准备 Pizza</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Prepare</span>()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 烘培 Pizza</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Bake</span>()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 切 Pizza</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Cut</span>()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 装箱 Pizza</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Box</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 芝士披萨</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">CheesePizza</span> : <span class="title">Pizza</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">CheesePizza</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;芝士披萨&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Prepare</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;准备芝士披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Bake</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;烘焙芝士披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Cut</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;切芝士披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Box</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;装箱芝士披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 蛤披萨</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ClamPizza</span> : <span class="title">Pizza</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ClamPizza</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;蛤披萨&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Prepare</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;准备蛤披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Bake</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;烘焙蛤披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Cut</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;切蛤披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Box</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;装箱蛤披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 意大利辣香肠披萨</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PepperoniPizza</span> : <span class="title">Pizza</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">PepperoniPizza</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;意大利辣香肠披萨&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Prepare</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;准备意大利辣香肠披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Bake</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;烘焙意大利辣香肠披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Cut</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;切意大利辣香肠披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Box</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;装箱意大利辣香肠披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 素食披萨</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">VeggiePizza</span> : <span class="title">Pizza</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">VeggiePizza</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;素食披萨&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Prepare</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;准备素食披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Bake</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;烘焙素食披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Cut</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;切素食披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Box</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;装箱素食披萨!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后我们需要一个工厂（Factory）来生产披萨：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.SimpleFactoryPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SimplePizzaFactory</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> Pizza <span class="title">CreatePizza</span>(<span class="params">String type</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Pizza pizza = <span class="literal">null</span>;</span><br><span class="line">            <span class="keyword">if</span> (type.Equals(<span class="string">&quot;cheese&quot;</span>))</span><br><span class="line">                pizza = <span class="keyword">new</span> CheesePizza();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (type.Equals(<span class="string">&quot;pepperoni&quot;</span>))</span><br><span class="line">                pizza = <span class="keyword">new</span> PepperoniPizza();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (type.Equals(<span class="string">&quot;clam&quot;</span>))</span><br><span class="line">                pizza = <span class="keyword">new</span> ClamPizza();</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (type.Equals(<span class="string">&quot;veggie&quot;</span>))</span><br><span class="line">                pizza = <span class="keyword">new</span> VeggiePizza();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> pizza;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样，我们就可以订购披萨啦：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.SimpleFactoryPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">PizzaStore</span></span><br><span class="line">    &#123;</span><br><span class="line">        SimplePizzaFactory factory;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">PizzaStore</span>(<span class="params">SimplePizzaFactory factory</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.factory = factory;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Pizza <span class="title">OrderPizza</span>(<span class="params"><span class="built_in">string</span> type</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Pizza pizza;</span><br><span class="line"></span><br><span class="line">            pizza = factory.CreatePizza(type);</span><br><span class="line"></span><br><span class="line">            pizza.Prepare();</span><br><span class="line">            pizza.Bake();</span><br><span class="line">            pizza.Cut();</span><br><span class="line">            pizza.Box();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> pizza;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到，在 <code>PizzaStore</code> 中，我们实例化了一个 <code>SimplePizzaFactory</code>。之后在 <code>OrderPizza</code> 中当我们需要一个 <code>Pizza</code> 的时候，我们是通过工厂的 <code>CreatePizza</code> 方法来创建传入 <code>type</code> 相对应的 <code>Pizza</code>。</p>
<p>这就是一个最简单的简单工厂模式的实现，我们可以看到，在 <code>PizzaStore</code> 中，并非是通过 <code>new</code> 来获取一个对象，而是将实例化的工作交给了 <code>SimplePizzaFactory</code>，而这就是工厂类的用途。</p>
<p>这样做有什么好处呢？</p>
<p>在这个例子里，我们只有一个 <code>PizzaStore</code> 使用了工厂来创建披萨。但是披萨店可不止有一家，当我们做大做强，拥有了更多的连锁店的时候，我们就能体会到 <code>SimplePizzaFactory</code> 的好处了，如果我们需要升级一下披萨的制作工艺，我们不必对每个门店进行改造，而是只对工厂进行升级，这样所有使用 <code>SimplePizzaFactory</code> 的披萨店都可以享受到最新的工艺做出来的披萨啦。</p>
<h2 id="注意的点"><a href="#注意的点" class="headerlink" title="注意的点"></a>注意的点</h2><ul>
<li>如果将工厂定义为静态方法，这么做的好处是不必再创建对象的方法来实例化对象，但是缺点是无法通过继承来改变创建方法的行为。</li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/AemonCao/DesignPattern/tree/master/DesignPattern/SimpleFactoryPattern">SimpleFactoryPattern</a></p>
<h2 id="PS"><a href="#PS" class="headerlink" title="PS"></a>PS</h2><p>这部分的代码来自《Head First 设计模式》。</p>
<p>话说好久没吃披萨了，写得我好饿。</p>
]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>设计模式</tag>
        <tag>简单工厂模式</tag>
        <tag>Simple Factory Pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>单例模式（Singleton Pattern）</title>
    <url>/2020/03/29/Singleton-Pattern/</url>
    <content><![CDATA[<p>单例模式的目的是：</p>
<blockquote>
<p>确保类只有一个实例并提供全局访问。</p>
</blockquote>
<span id="more"></span>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>首先是最简单的单例模式的代码：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.SingletonPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 单例</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Singleton</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 记录唯一实例的静态变量</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> Singleton uniqueInstance;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 私有的构造函数</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 获取实例</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>唯一的 Singleton 实例<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (uniqueInstance == <span class="literal">null</span>)</span><br><span class="line">                uniqueInstance = <span class="keyword">new</span> Singleton();</span><br><span class="line">            <span class="keyword">return</span> uniqueInstance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>Singleton</code> 的构造方法被定义成了 <code>private</code>，这代表无法在 <code>Singleton</code> 类的外部实例化 <code>Singleton</code> 类。</p>
<p><code>getInstance</code> 方法被设置为 <code>static</code>，这样在 <code>Singleton</code> 类外部即使不实例化 <code>Singleton</code> 类也可以通过 <code>Singleton.getInstance()</code> 调用此方法。</p>
<p>这样，只要在 <code>getInstance</code> 方法中进行简单的判断，就可以实现从始至终只有一个 <code>Singleton</code> 类的实例。</p>
<h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><p>然而，在多线程时就会出现问题：两个线程在运行时，可能会同时出现 <code>(uniqueInstance == null)</code> 返回为真的情况，这就导致会实例化一个以上的 <code>Singleton</code> 类的情况出现。</p>
<p>所以，我们需要将其变成同步方法，在 C# 中可以用以下两种方法实现：</p>
<p>第一是使用 <code>[MethodImpl(MethodImplOptions.Synchronized)]</code> 属性：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Runtime.CompilerServices;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.SingletonPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 单例</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Singleton</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 记录唯一实例的静态变量</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> Singleton uniqueInstance;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 私有的构造函数</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 获取实例</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>唯一的 Singleton 实例<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        [<span class="meta">MethodImpl(MethodImplOptions.Synchronized)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (uniqueInstance == <span class="literal">null</span>)</span><br><span class="line">                uniqueInstance = <span class="keyword">new</span> Singleton();</span><br><span class="line">            <span class="keyword">return</span> uniqueInstance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>第二种是使用 <code>lock</code> ：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.SingletonPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 单例</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Singleton</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 记录唯一实例的静态变量</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> Singleton uniqueInstance;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> lock 标识</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="built_in">object</span> locker = <span class="keyword">new</span> <span class="built_in">object</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 私有的构造函数</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 获取实例</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>唯一的 Singleton 实例<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">lock</span> (locker)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (uniqueInstance == <span class="literal">null</span>)</span><br><span class="line">                    uniqueInstance = <span class="keyword">new</span> Singleton();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> uniqueInstance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面两种方法都可以解决在单例模式下多线程的问题，但是如果你在程序中频繁用到 <code>Singleton.getInstance()</code> 将会大大的使性能降低，因为同步一个方法会使程序执行效率下降，所以我们可以在这种情况下使用如下方法：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">DesignPattern.SingletonPattern</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 单例</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Singleton</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 记录唯一实例的静态变量</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> Singleton uniqueInstance = <span class="keyword">new</span> Singleton();</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 私有的构造函数</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 获取实例</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>唯一的 Singleton 实例<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> uniqueInstance;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到，我们在声明 <code>uniqueInstance</code> 的时候直接实例化了 <code>Singleton</code> 类。</p>
<p>这样在程序开始的时候这个唯一实例就已经存在了。避免了同步方法，也就解决了多线程的问题。</p>
<h2 id="注意的点"><a href="#注意的点" class="headerlink" title="注意的点"></a>注意的点</h2><ul>
<li><p>在多线程问题的解决上，需要选择适合的方案来实现单例模式，如果单例实例在程序中并不是经常使用，而且实例化的时候开销很大的话，可以使用同步 <code>getInstance</code> 方法来解决多线程问题，如果单例实例需要在程序中频繁使用，那就可以在声明 <code>uniqueInstance</code> 变量的时间就进行实例化，这样就可以解决同步 <code>getInstance</code> 方法时带来的性能下降的问题。</p>
</li>
<li><p>如果你有多个构造函数（重载），就需要注意会产生多个实例导致单例失效。</p>
</li>
</ul>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p><a href="https://github.com/AemonCao/DesignPattern/tree/master/DesignPattern/SingletonPattern">SingletonPattern</a></p>
]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>设计模式</tag>
        <tag>单例模式</tag>
        <tag>Singleton Pattern</tag>
      </tags>
  </entry>
  <entry>
    <title>Symbol 是什么？</title>
    <url>/2020/04/25/Symbol-%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F/</url>
    <content><![CDATA[<p>前些天偶然发现了 Symbol，学习了一番，这里记录一下。</p>
<span id="more"></span>
<h2 id="Symbol-是什么"><a href="#Symbol-是什么" class="headerlink" title="Symbol 是什么"></a>Symbol 是什么</h2><p>symbol 是一种基本数据类型（primitive data type），它是在 ECMAScript 6 引入的一种新的基本数据类型，将 JavaScript 的基本数据类型扩展到了 7 种（分别是 string，number，bigint，boolean，null，undefined 和 symbol）。</p>
<h2 id="Symbol-有什么用"><a href="#Symbol-有什么用" class="headerlink" title="Symbol 有什么用"></a>Symbol 有什么用</h2><p>我们来看一个例子，现在要开发一个学校管理系统简单的权限功能，一共有三种权限：学生、老师和管理员：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> permissions = &#123;</span><br><span class="line">    <span class="attr">student</span>: <span class="string">&#x27;student&#x27;</span>,</span><br><span class="line">    <span class="attr">teacher</span>: <span class="string">&#x27;teacher&#x27;</span>,</span><br><span class="line">    <span class="attr">administrator</span>: <span class="string">&#x27;administrator&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样，当我们的功能对于不同权限的人有不同的实现的时候就可以通过以下方法来完成：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (user.<span class="property">permission</span> === permissions.<span class="property">student</span>) &#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (user.<span class="property">permission</span> === permissions.<span class="property">teacher</span>) &#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (user.<span class="property">permission</span> === permissions.<span class="property">administrator</span>) &#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>当然也可以用 <code>switch</code> 来实现：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span> (user.<span class="property">permission</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> permissions.<span class="property">student</span>:</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> permissions.<span class="property">teacher</span>:</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> permissions.<span class="property">administrator</span>:</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如此，就能根据不同的权限实现不能的功能。</p>
<p>这时，我们回过头来看 <code>permissions</code> 的时候会发现：<code>permissions.student</code>、<code>permissions.teacher</code> 和 <code>permissions.administrator</code> 具体取了什么值并不重要，换句话说只要三者的值各不相同即使我们写成下面这样也是无所谓的：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> permissions = &#123;</span><br><span class="line">    <span class="attr">student</span>: <span class="string">&#x27;mv@RR&amp;gr76!6YA&#x27;</span>,</span><br><span class="line">    <span class="attr">teacher</span>: <span class="string">&#x27;GF53@A$o4MWgE$&#x27;</span>,</span><br><span class="line">    <span class="attr">administrator</span>: <span class="string">&#x27;5ypSmN4prP#xAb&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>显然，程序也能正常运行。</p>
<p>而 Symbol 就能做到这一点：Symbol 的值都是独一无二的。</p>
<p>可以通过 <code>symbol()</code> 来生成一个 symbol 类型的数据：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> val = <span class="title class_">Symbol</span>()</span><br></pre></td></tr></table></figure>
<p>那我们的代码就可以改写成：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> permissions = &#123;</span><br><span class="line">    <span class="attr">student</span>: <span class="title class_">Symbol</span>(),</span><br><span class="line">    <span class="attr">teacher</span>: <span class="title class_">Symbol</span>(),</span><br><span class="line">    <span class="attr">administrator</span>: <span class="title class_">Symbol</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样就不用再定义一些无意义的字符串来作为判断的值了，代码中就会少很多魔术字符串。</p>
<h2 id="Symbol-还有什么用"><a href="#Symbol-还有什么用" class="headerlink" title="Symbol 还有什么用"></a>Symbol 还有什么用</h2><p>Symbol 还可以做为属性的键名：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> numKey = <span class="title class_">Symbol</span>(<span class="string">&#x27;Number&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> funKey = <span class="title class_">Symbol</span>(<span class="string">&#x27;Funtion&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    [numKey]: <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">obj[funKey] = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这样的话，我们就不用担心某一个键被不小心覆写或改写。</p>
<p>当我们需要调用的时候，只能通过 Symbol 实例来调用，又因为每一个 Symbol 实例都是独一无二的，所以就不存在被误写的可能啦。</p>
<p>需要注意的是，不能用 <code>.</code> 运算符来定义或调用，而是要将 Symbol 实例放在方括号中。</p>
<h3 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h3><p>当 Symbol 作为属性名的时候，如果我们对对象进行遍历，例如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> numKey = <span class="title class_">Symbol</span>(<span class="string">&#x27;Number&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> funKey = <span class="title class_">Symbol</span>(<span class="string">&#x27;Funtion&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    [numKey]: <span class="number">1</span>,</span><br><span class="line">    [funKey]: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">strKey</span>: <span class="string">&#x27;String&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (item <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    item</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// String</span></span><br></pre></td></tr></table></figure>
<p>那些使用 Symbol 作为属性名的属性是不会出现在遍历循环中的，包括一些常用的遍历方法：<code>for...in</code>、<code>for...of</code>、<code>Object.keys()</code>、<code>Object.getOwnPropertyNames()</code> 和 <code>JSON.stringify()</code>。</p>
<p>但是这不代表这些属性是私有属性，我们可以用 <code>Object.getOwnPropertySymbols()</code> 方法来获取所有的 Symbol 属性名：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> numKey = <span class="title class_">Symbol</span>(<span class="string">&#x27;Number&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> funKey = <span class="title class_">Symbol</span>(<span class="string">&#x27;Funtion&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    [numKey]: <span class="number">1</span>,</span><br><span class="line">    [funKey]: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">strKey</span>: <span class="string">&#x27;String&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">getOwnPropertySymbols</span>(obj)</span><br><span class="line"><span class="comment">// [Symbol(Number), Symbol(Funtion)]</span></span><br></pre></td></tr></table></figure>
<p>或者是使用一个新的 API：<code>Reflect.ownKeys()</code> 来返回所有的键名：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> numKey = <span class="title class_">Symbol</span>(<span class="string">&#x27;Number&#x27;</span>)</span><br><span class="line"><span class="keyword">var</span> funKey = <span class="title class_">Symbol</span>(<span class="string">&#x27;Funtion&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    [numKey]: <span class="number">1</span>,</span><br><span class="line">    [funKey]: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="comment">// do something</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">strKey</span>: <span class="string">&#x27;String&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Reflect</span>.<span class="title function_">ownKeys</span>(obj)</span><br><span class="line"><span class="comment">// [&quot;strKey&quot;, Symbol(Number), Symbol(Funtion)]</span></span><br></pre></td></tr></table></figure>
<h2 id="Symbol-怎么用"><a href="#Symbol-怎么用" class="headerlink" title="Symbol 怎么用"></a>Symbol 怎么用</h2><p>基本的用法之前已经说了，使用 <code>Symbol()</code> 就可以生成一个独一无二的 symbol。</p>
<h3 id="Symbol-参数"><a href="#Symbol-参数" class="headerlink" title="Symbol() 参数"></a>Symbol() 参数</h3><p><code>Symbol()</code> 可以传入一个字符串作为参数，表示对 Symbol 实例的描述。主要作用是为了调试和字符串打印输出的时候方便分辨：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> s1 = <span class="title class_">Symbol</span>(<span class="string">&#x27;student&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> s2 = <span class="title class_">Symbol</span>(<span class="string">&#x27;teacher&#x27;</span>)</span><br><span class="line"></span><br><span class="line">s1 <span class="comment">// Symbol(student)</span></span><br><span class="line">s2 <span class="comment">// Symbol(teacher)</span></span><br><span class="line"></span><br><span class="line">s1.<span class="title function_">toString</span>() <span class="comment">// &quot;Symbol(student)&quot;</span></span><br><span class="line">s2.<span class="title function_">toString</span>() <span class="comment">// &quot;Symbol(teacher)&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="Symbol-prototype-description"><a href="#Symbol-prototype-description" class="headerlink" title="Symbol.prototype.description"></a>Symbol.prototype.description</h3><p>上面提到在生成 Symbol 实例的时候可以添加一个字符串参数作为其描述，如果需要读取这个值就可以用：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> student = <span class="title class_">Symbol</span>(<span class="string">&#x27;student&#x27;</span>)</span><br><span class="line"></span><br><span class="line">student.<span class="property">description</span> <span class="comment">// &quot;student&quot;</span></span><br></pre></td></tr></table></figure>
<h3 id="Symbol-for"><a href="#Symbol-for" class="headerlink" title="Symbol.for()"></a>Symbol.for()</h3><p><code>Symbol.for()</code> 可以通过传入一个字符串来全局寻找我们已经定义过的 Symbol 实例，如果没有找到则返回一个新的 Symbol 实例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> s1 = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;foo&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> s2 = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;foo&#x27;</span>)</span><br><span class="line"></span><br><span class="line">s1 === s2 <span class="comment">// true</span></span><br></pre></td></tr></table></figure>
<p><code>Symbol.for()</code> 和 <code>Symbol()</code> 虽然都会返回一个 Symbol 类型，但是不同的是，如果分别多次调用这两个方法，前者只在第一次返回一个新的 Symbol 实例，之后如果参数不改变的话，不管调用多少次都是会返回第一次返回的 Symbol 实例。而后者，每次调用都会生成一个全新的 Symbol 实例，调用多少次就生成多少个，不论参数是否改变。</p>
<h3 id="Symbol-keyFor"><a href="#Symbol-keyFor" class="headerlink" title="Symbol.keyFor()"></a>Symbol.keyFor()</h3><p><code>Symbol.keyFor()</code> 可以通过传入一个 Symbol 实例来获取它的 <code>key</code>：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> s1 = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&quot;foo&quot;</span>)</span><br><span class="line"><span class="title class_">Symbol</span>.<span class="title function_">keyFor</span>(s1) <span class="comment">// &quot;foo&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> s2 = <span class="title class_">Symbol</span>(<span class="string">&quot;foo&quot;</span>);</span><br><span class="line"><span class="title class_">Symbol</span>.<span class="title function_">keyFor</span>(s2) <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure>
<p>需要注意的是，<code>Symbol.keyFor()</code> 只对通过 <code>Symbol.for()</code> 生成的 Symbol 实例有效。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Symbol">Symbol - JavaScript | MDN</a></p>
<p><a href="https://es6.ruanyifeng.com/#docs/symbol">https://es6.ruanyifeng.com/#docs/symbol</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/22652486">「每日一题」JS 中的 Symbol 是什么？</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>ECMAScript 6</tag>
      </tags>
  </entry>
  <entry>
    <title>A puzzle a day</title>
    <url>/2021/06/20/a-puzzle-a-day/</url>
    <content><![CDATA[<p>在<a href="http://jandan.net/">煎蛋</a>上看到了这个 puzzle，立马上淘宝买了一份。有点难度，希望可以坚持打卡一年！</p>
<p>正文内容通过以下代码生成：</p>
<script src="https://gist.github.com/AemonCao/1ff95182473cd262e20c91c8d39536d8.js"></script>

<h3 id="May"><a href="#May" class="headerlink" title="May"></a>May</h3><h4 id="18th-May"><a href="#18th-May" class="headerlink" title="18th May"></a>18th May</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0518.jpg" alt="18th May"></p>
<h4 id="28th-May"><a href="#28th-May" class="headerlink" title="28th May"></a>28th May</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0528.jpg" alt="28th May"></p>
<h3 id="June"><a href="#June" class="headerlink" title="June"></a>June</h3><h4 id="20th-June"><a href="#20th-June" class="headerlink" title="20th June"></a>20th June</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0620.jpg" alt="20th June"></p>
<h4 id="21st-June"><a href="#21st-June" class="headerlink" title="21st June"></a>21st June</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0621.jpeg" alt="21st June"></p>
<h4 id="22nd-June"><a href="#22nd-June" class="headerlink" title="22nd June"></a>22nd June</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0622.jpeg" alt="22nd June"></p>
<h4 id="23rd-June"><a href="#23rd-June" class="headerlink" title="23rd June"></a>23rd June</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0623.jpeg" alt="23rd June"></p>
<h4 id="24th-June"><a href="#24th-June" class="headerlink" title="24th June"></a>24th June</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0624.jpeg" alt="24th June"></p>
<h4 id="25th-June"><a href="#25th-June" class="headerlink" title="25th June"></a>25th June</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0625.jpeg" alt="25th June"></p>
<h4 id="26th-June"><a href="#26th-June" class="headerlink" title="26th June"></a>26th June</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0626.jpeg" alt="26th June"></p>
<h4 id="27th-June"><a href="#27th-June" class="headerlink" title="27th June"></a>27th June</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0627.jpeg" alt="27th June"></p>
<h4 id="28th-June"><a href="#28th-June" class="headerlink" title="28th June"></a>28th June</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0628.jpeg" alt="28th June"></p>
<h4 id="29th-June"><a href="#29th-June" class="headerlink" title="29th June"></a>29th June</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0629.jpeg" alt="29th June"></p>
<h4 id="30th-June"><a href="#30th-June" class="headerlink" title="30th June"></a>30th June</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0630.jpeg" alt="30th June"></p>
<h3 id="July"><a href="#July" class="headerlink" title="July"></a>July</h3><h4 id="1st-July"><a href="#1st-July" class="headerlink" title="1st July"></a>1st July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0701.jpeg" alt="1st July"></p>
<h4 id="2nd-July"><a href="#2nd-July" class="headerlink" title="2nd July"></a>2nd July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0702.jpeg" alt="2nd July"></p>
<h4 id="3rd-July"><a href="#3rd-July" class="headerlink" title="3rd July"></a>3rd July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0703.jpeg" alt="3rd July"></p>
<h4 id="4th-July"><a href="#4th-July" class="headerlink" title="4th July"></a>4th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0704.jpeg" alt="4th July"></p>
<h4 id="5th-July"><a href="#5th-July" class="headerlink" title="5th July"></a>5th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0705.jpeg" alt="5th July"></p>
<h4 id="6th-July"><a href="#6th-July" class="headerlink" title="6th July"></a>6th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0706.jpeg" alt="6th July"></p>
<h4 id="7th-July"><a href="#7th-July" class="headerlink" title="7th July"></a>7th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0707.jpeg" alt="7th July"></p>
<h4 id="8th-July"><a href="#8th-July" class="headerlink" title="8th July"></a>8th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0708.jpeg" alt="8th July"></p>
<h4 id="9th-July"><a href="#9th-July" class="headerlink" title="9th July"></a>9th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0709.jpeg" alt="9th July"></p>
<h4 id="10th-July"><a href="#10th-July" class="headerlink" title="10th July"></a>10th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0710.jpeg" alt="10th July"></p>
<h4 id="11th-July"><a href="#11th-July" class="headerlink" title="11th July"></a>11th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0711.jpeg" alt="11th July"></p>
<h4 id="12th-July"><a href="#12th-July" class="headerlink" title="12th July"></a>12th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0712.jpeg" alt="12th July"></p>
<h4 id="13th-July"><a href="#13th-July" class="headerlink" title="13th July"></a>13th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0713.jpeg" alt="13th July"></p>
<h4 id="14th-July"><a href="#14th-July" class="headerlink" title="14th July"></a>14th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0714.jpeg" alt="14th July"></p>
<h4 id="15th-July"><a href="#15th-July" class="headerlink" title="15th July"></a>15th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0715.jpeg" alt="15th July"></p>
<h4 id="16th-July"><a href="#16th-July" class="headerlink" title="16th July"></a>16th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0716.jpeg" alt="16th July"></p>
<h4 id="17th-July"><a href="#17th-July" class="headerlink" title="17th July"></a>17th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0717.jpeg" alt="17th July"></p>
<h4 id="18th-July"><a href="#18th-July" class="headerlink" title="18th July"></a>18th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0718.jpeg" alt="18th July"></p>
<h4 id="19th-July"><a href="#19th-July" class="headerlink" title="19th July"></a>19th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0719.jpeg" alt="19th July"></p>
<h4 id="20th-July"><a href="#20th-July" class="headerlink" title="20th July"></a>20th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0720.jpeg" alt="20th July"></p>
<h4 id="21st-July"><a href="#21st-July" class="headerlink" title="21st July"></a>21st July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0721.jpeg" alt="21st July"></p>
<h4 id="22nd-July"><a href="#22nd-July" class="headerlink" title="22nd July"></a>22nd July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0722.jpeg" alt="22nd July"></p>
<h4 id="23rd-July"><a href="#23rd-July" class="headerlink" title="23rd July"></a>23rd July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0723.jpeg" alt="23rd July"></p>
<h4 id="24th-July"><a href="#24th-July" class="headerlink" title="24th July"></a>24th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0724.jpeg" alt="24th July"></p>
<h4 id="25th-July"><a href="#25th-July" class="headerlink" title="25th July"></a>25th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0725.jpeg" alt="25th July"></p>
<h4 id="26th-July"><a href="#26th-July" class="headerlink" title="26th July"></a>26th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0726.jpeg" alt="26th July"></p>
<h4 id="27th-July"><a href="#27th-July" class="headerlink" title="27th July"></a>27th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0727.jpeg" alt="27th July"></p>
<h4 id="28th-July"><a href="#28th-July" class="headerlink" title="28th July"></a>28th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0728.jpeg" alt="28th July"></p>
<h4 id="29th-July"><a href="#29th-July" class="headerlink" title="29th July"></a>29th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0729.jpeg" alt="29th July"></p>
<h4 id="30th-July"><a href="#30th-July" class="headerlink" title="30th July"></a>30th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0730.jpeg" alt="30th July"></p>
<h4 id="31th-July"><a href="#31th-July" class="headerlink" title="31th July"></a>31th July</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0731.jpeg" alt="31th July"></p>
<h3 id="August"><a href="#August" class="headerlink" title="August"></a>August</h3><h4 id="1st-August"><a href="#1st-August" class="headerlink" title="1st August"></a>1st August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0801.jpeg" alt="1st August"></p>
<h4 id="2nd-August"><a href="#2nd-August" class="headerlink" title="2nd August"></a>2nd August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0802.jpeg" alt="2nd August"></p>
<h4 id="3rd-August"><a href="#3rd-August" class="headerlink" title="3rd August"></a>3rd August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0803.jpeg" alt="3rd August"></p>
<h4 id="4th-August"><a href="#4th-August" class="headerlink" title="4th August"></a>4th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0804.jpeg" alt="4th August"></p>
<h4 id="5th-August"><a href="#5th-August" class="headerlink" title="5th August"></a>5th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0805.jpeg" alt="5th August"></p>
<h4 id="6th-August"><a href="#6th-August" class="headerlink" title="6th August"></a>6th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0806.jpeg" alt="6th August"></p>
<h4 id="7th-August"><a href="#7th-August" class="headerlink" title="7th August"></a>7th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0807.jpeg" alt="7th August"></p>
<h4 id="8th-August"><a href="#8th-August" class="headerlink" title="8th August"></a>8th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0808.jpeg" alt="8th August"></p>
<h4 id="9th-August"><a href="#9th-August" class="headerlink" title="9th August"></a>9th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0809.jpeg" alt="9th August"></p>
<h4 id="10th-August"><a href="#10th-August" class="headerlink" title="10th August"></a>10th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0810.jpeg" alt="10th August"></p>
<h4 id="11th-August"><a href="#11th-August" class="headerlink" title="11th August"></a>11th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0811.jpeg" alt="11th August"></p>
<h4 id="12th-August"><a href="#12th-August" class="headerlink" title="12th August"></a>12th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0812.jpeg" alt="12th August"></p>
<h4 id="13th-August"><a href="#13th-August" class="headerlink" title="13th August"></a>13th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0813.jpeg" alt="13th August"></p>
<h4 id="14th-August"><a href="#14th-August" class="headerlink" title="14th August"></a>14th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0814.jpeg" alt="14th August"></p>
<h4 id="15th-August"><a href="#15th-August" class="headerlink" title="15th August"></a>15th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0815.jpeg" alt="15th August"></p>
<h4 id="16th-August"><a href="#16th-August" class="headerlink" title="16th August"></a>16th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0816.jpeg" alt="16th August"></p>
<h4 id="17th-August"><a href="#17th-August" class="headerlink" title="17th August"></a>17th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0817.jpeg" alt="17th August"></p>
<h4 id="18th-August"><a href="#18th-August" class="headerlink" title="18th August"></a>18th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0818.jpeg" alt="18th August"></p>
<h4 id="19th-August"><a href="#19th-August" class="headerlink" title="19th August"></a>19th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0819.jpeg" alt="19th August"></p>
<h4 id="20th-August"><a href="#20th-August" class="headerlink" title="20th August"></a>20th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0820.jpeg" alt="20th August"></p>
<h4 id="21st-August"><a href="#21st-August" class="headerlink" title="21st August"></a>21st August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0821.jpeg" alt="21st August"></p>
<h4 id="22nd-August"><a href="#22nd-August" class="headerlink" title="22nd August"></a>22nd August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0822.jpeg" alt="22nd August"></p>
<h4 id="23rd-August"><a href="#23rd-August" class="headerlink" title="23rd August"></a>23rd August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0823.jpeg" alt="23rd August"></p>
<h4 id="24th-August"><a href="#24th-August" class="headerlink" title="24th August"></a>24th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0824.jpeg" alt="24th August"></p>
<h4 id="25th-August"><a href="#25th-August" class="headerlink" title="25th August"></a>25th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0825.jpeg" alt="25th August"></p>
<h4 id="26th-August"><a href="#26th-August" class="headerlink" title="26th August"></a>26th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0826.jpeg" alt="26th August"></p>
<h4 id="27th-August"><a href="#27th-August" class="headerlink" title="27th August"></a>27th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0827.jpeg" alt="27th August"></p>
<h4 id="28th-August"><a href="#28th-August" class="headerlink" title="28th August"></a>28th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0828.jpeg" alt="28th August"></p>
<h4 id="29th-August"><a href="#29th-August" class="headerlink" title="29th August"></a>29th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0829.jpeg" alt="29th August"></p>
<h4 id="30th-August"><a href="#30th-August" class="headerlink" title="30th August"></a>30th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0830.jpeg" alt="30th August"></p>
<h4 id="31th-August"><a href="#31th-August" class="headerlink" title="31th August"></a>31th August</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0831.jpeg" alt="31th August"></p>
<h3 id="September"><a href="#September" class="headerlink" title="September"></a>September</h3><h4 id="1st-September"><a href="#1st-September" class="headerlink" title="1st September"></a>1st September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0901.jpeg" alt="1st September"></p>
<h4 id="2nd-September"><a href="#2nd-September" class="headerlink" title="2nd September"></a>2nd September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0902.jpeg" alt="2nd September"></p>
<h4 id="3rd-September"><a href="#3rd-September" class="headerlink" title="3rd September"></a>3rd September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0903.jpeg" alt="3rd September"></p>
<h4 id="4th-September"><a href="#4th-September" class="headerlink" title="4th September"></a>4th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0904.jpeg" alt="4th September"></p>
<h4 id="5th-September"><a href="#5th-September" class="headerlink" title="5th September"></a>5th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0905.jpeg" alt="5th September"></p>
<h4 id="6th-September"><a href="#6th-September" class="headerlink" title="6th September"></a>6th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0906.jpeg" alt="6th September"></p>
<h4 id="7th-September"><a href="#7th-September" class="headerlink" title="7th September"></a>7th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0907.jpeg" alt="7th September"></p>
<h4 id="8th-September"><a href="#8th-September" class="headerlink" title="8th September"></a>8th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0908.jpeg" alt="8th September"></p>
<h4 id="9th-September"><a href="#9th-September" class="headerlink" title="9th September"></a>9th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0909.jpeg" alt="9th September"></p>
<h4 id="10th-September"><a href="#10th-September" class="headerlink" title="10th September"></a>10th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0910.jpeg" alt="10th September"></p>
<h4 id="11th-September"><a href="#11th-September" class="headerlink" title="11th September"></a>11th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0911.jpeg" alt="11th September"></p>
<h4 id="12th-September"><a href="#12th-September" class="headerlink" title="12th September"></a>12th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0912.jpeg" alt="12th September"></p>
<h4 id="13th-September"><a href="#13th-September" class="headerlink" title="13th September"></a>13th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0913.jpeg" alt="13th September"></p>
<h4 id="14th-September"><a href="#14th-September" class="headerlink" title="14th September"></a>14th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0914.jpeg" alt="14th September"></p>
<h4 id="15th-September"><a href="#15th-September" class="headerlink" title="15th September"></a>15th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0915.jpeg" alt="15th September"></p>
<h4 id="16th-September"><a href="#16th-September" class="headerlink" title="16th September"></a>16th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0916.jpeg" alt="16th September"></p>
<h4 id="17th-September"><a href="#17th-September" class="headerlink" title="17th September"></a>17th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0917.jpeg" alt="17th September"></p>
<h4 id="18th-September"><a href="#18th-September" class="headerlink" title="18th September"></a>18th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0918.jpeg" alt="18th September"></p>
<h4 id="19th-September"><a href="#19th-September" class="headerlink" title="19th September"></a>19th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0919.jpeg" alt="19th September"></p>
<h4 id="20th-September"><a href="#20th-September" class="headerlink" title="20th September"></a>20th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0920.jpeg" alt="20th September"></p>
<h4 id="21st-September"><a href="#21st-September" class="headerlink" title="21st September"></a>21st September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0921.jpeg" alt="21st September"></p>
<h4 id="22nd-September"><a href="#22nd-September" class="headerlink" title="22nd September"></a>22nd September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0922.jpeg" alt="22nd September"></p>
<h4 id="23rd-September"><a href="#23rd-September" class="headerlink" title="23rd September"></a>23rd September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0923.jpeg" alt="23rd September"></p>
<h4 id="24th-September"><a href="#24th-September" class="headerlink" title="24th September"></a>24th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0924.jpeg" alt="24th September"></p>
<h4 id="25th-September"><a href="#25th-September" class="headerlink" title="25th September"></a>25th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0925.jpeg" alt="25th September"></p>
<h4 id="26th-September"><a href="#26th-September" class="headerlink" title="26th September"></a>26th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0926.jpeg" alt="26th September"></p>
<h4 id="27th-September"><a href="#27th-September" class="headerlink" title="27th September"></a>27th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0927.jpeg" alt="27th September"></p>
<h4 id="28th-September"><a href="#28th-September" class="headerlink" title="28th September"></a>28th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0928.jpeg" alt="28th September"></p>
<h4 id="29th-September"><a href="#29th-September" class="headerlink" title="29th September"></a>29th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0929.jpeg" alt="29th September"></p>
<h4 id="30th-September"><a href="#30th-September" class="headerlink" title="30th September"></a>30th September</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/0930.jpeg" alt="30th September"></p>
<h3 id="October"><a href="#October" class="headerlink" title="October"></a>October</h3><h4 id="1st-October"><a href="#1st-October" class="headerlink" title="1st October"></a>1st October</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/1001.jpeg" alt="1st October"></p>
<h4 id="2nd-October"><a href="#2nd-October" class="headerlink" title="2nd October"></a>2nd October</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/1002.jpeg" alt="2nd October"></p>
<h4 id="3rd-October"><a href="#3rd-October" class="headerlink" title="3rd October"></a>3rd October</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/1003.jpeg" alt="3rd October"></p>
<h4 id="4th-October"><a href="#4th-October" class="headerlink" title="4th October"></a>4th October</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/1004.jpeg" alt="4th October"></p>
<h4 id="5th-October"><a href="#5th-October" class="headerlink" title="5th October"></a>5th October</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/1005.jpeg" alt="5th October"></p>
<h4 id="6th-October"><a href="#6th-October" class="headerlink" title="6th October"></a>6th October</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/1006.jpeg" alt="6th October"></p>
<h4 id="7th-October"><a href="#7th-October" class="headerlink" title="7th October"></a>7th October</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/1007.jpeg" alt="7th October"></p>
<h4 id="8th-October"><a href="#8th-October" class="headerlink" title="8th October"></a>8th October</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/1008.jpeg" alt="8th October"></p>
<h4 id="9th-October"><a href="#9th-October" class="headerlink" title="9th October"></a>9th October</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/1009.jpeg" alt="9th October"></p>
<h4 id="10th-October"><a href="#10th-October" class="headerlink" title="10th October"></a>10th October</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/a-puzzle-a-day/1010.jpeg" alt="10th October"></p>
]]></content>
      <categories>
        <category>puzzle</category>
      </categories>
      <tags>
        <tag>puzzle</tag>
      </tags>
  </entry>
  <entry>
    <title>关于招聘，求职，面试。</title>
    <url>/2017/06/10/about-recruitment-job-search-interview/</url>
    <content><![CDATA[<p>这几天正要求职，和很多公司企业有交流，总结一点经验。</p>
<p>本来一周前应该完成的，因为要去参加毕业典礼的原因拖了一礼拜。</p>
<span id="more"></span>
<h2 id="注意培训公司"><a href="#注意培训公司" class="headerlink" title="注意培训公司"></a>注意培训公司</h2><blockquote>
<p>一切以岗前培训、工作介绍为名的，收取报名费、培训费的都是耍流氓。切记！——来自我的大学老师 ZYW</p>
</blockquote>
<p>当你在智联招聘、前程无忧等求职平台上填写简历后，迎接你的将是各种鱼目混杂的<strong>培训公司</strong>，如何识别这些公司呢？</p>
<ol>
<li><p>学历要求低，专业要求低，唯一的要求是对这个行业有兴趣；</p>
</li>
<li><p>不符合应届生的工资标准，这个要自行判断了；</p>
</li>
<li><p>广撒网，你可以在这个公司的简介中找到它所有的招聘信息，如果你发现他有超级多要招聘的岗位时（并且大多都是实习岗），基本上就是培训公司没跑了；</p>
</li>
<li><p>善用搜索引擎，当你不确定公司是否为培训公司时，你可以上网查询这家公司，类似于「<a href="http://www.tianyancha.com/">天眼查</a>」这一类。你可以在其中查到企业的子母公司，如果你发现企业本身没有什么培训公司的特征，但是它有一个类似于「互联网培训」的母公司的话，那很有可能也是一个培训公司。你也可以在百度贴吧等社交网站查询企业名称，大多时候已经有前人帮你探路了（但是要注意的是，贴吧鱼龙混杂，务必需要注意）；</p>
</li>
<li><p>最后一点就是培训公司会主动打电话给你，即使你没有往他们公司投放简历。导致出现这一情况的原因是，你在招聘网上设置了简历公开这一选项。这样的话，公司可以通过少许的付费来直接获得你的简历。当然这有好也有坏，因为同样的也有不少其他公司会注意到你。但是鉴于自己只是毕业生的缘故（并且不是特别优秀的那种），还是不要公开自己的简历了吧。还有就是当你找到工作后，记得也把简历设置为私有的。</p>
</li>
</ol>
<h2 id="面试-amp-笔试"><a href="#面试-amp-笔试" class="headerlink" title="面试&amp;笔试"></a>面试&amp;笔试</h2><ol>
<li><p>切记不要说谎，实事求是，会就是会，不会就是不会，这一点是最重要的；</p>
</li>
<li><p>对于应届毕业生来说，不会问太难的东西，多半是基础知识点。所以这时候临时抱佛脚通常是有奇效的（至于怎么抱，平时的积累很重要，然后就去找各种面试题咯）；</p>
</li>
<li><p>熟悉的自己写在简历上的项目，不要到时一问三不知；</p>
</li>
<li><p>着装方面，程序员的话我觉得并不需要西装革履，打扮得清爽一点就好啦。</p>
</li>
</ol>
<h2 id="简历"><a href="#简历" class="headerlink" title="简历"></a>简历</h2><!-- ![简历模板.jpg](https://ooo.0o0.ooo/2017/06/20/594916856b099.jpg) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/about-recruitment-job-search-interview/简历模板.jpg" alt="简历模版"></p>
<!-- <img data-src="/2017/06/10/about-recruitment-job-search-interview/%E7%AE%80%E5%8E%86%E6%A8%A1%E6%9D%BF.jpg" class="" title="简历模板.jpg"> -->
<p>简历方面，除了美术设计方面的职位，都不要太花哨，如果你是应聘前端，你完全可以做个网页，然后把你毕身所学都用上去。简历的样式只要看起来条理清晰就好了。</p>
<ol>
<li><p>照片不需要放上去；</p>
</li>
<li><p>和面试一样实事求是（具体见这里：<a href="https://www.zhihu.com/question/21660867">在简历上造假是可以接受的吗？</a>）；</p>
</li>
<li><p>控制简历长度，以及内容的分配。我个人是比较喜欢就一页纸。注意简洁明了，个人信息只要写：姓名、求职意向、出生年月、毕业学校专业是否为应届毕业生，比如说：「浙江大学计算机与科学专业应届毕业生」或者「浙江大学计算机与科学专业（2017）」，以及你的籍贯，为什么要写籍贯呢？如果你不是在本地求职，而是在外地，那么拼运气的时候就到了。如果你的 HR 是你的老乡的话，这肯定一个大大的加分项啊！最后就是联系方式。具体见下图：</p>
 <!-- ![snipaste_20170610_134835.png](https://ooo.0o0.ooo/2017/06/10/593b8a955e9d7.png) -->
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/about-recruitment-job-search-interview/简历抬头.png" alt="简历抬头"></p>
 <!-- <img data-src="/2017/06/10/about-recruitment-job-search-interview/%E7%AE%80%E5%8E%86%E6%8A%AC%E5%A4%B4.png" class="" title="简历抬头"> -->
</li>
<li><p>HR 最在意的还是你的项目经历，所以这一部分务必认真对待。如果你有多个项目，请不要按照时间来排序，而是按照你在项目中做出的实际贡献来排序。要写出你在此项目中担任的角色，以及负责哪些部分，这些方面才是 HR 真正看中的。你可以把一页纸的大部分就用来描写这些；</p>
</li>
<li><p>当然你也可以在招聘网上填写你的简历，那会更加规范。填写完后大部分网站都可以生成出 HTML 格式或是 Word 格式的简历文件，你可以稍加修改直接使用。</p>
</li>
</ol>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>祝大家都能找到称心的工作。</p>
]]></content>
      <categories>
        <category>面试</category>
      </categories>
      <tags>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title>将博客从阿里云迁移到老薛主机</title>
    <url>/2017/07/06/aliyun-to-laoxuehost/</url>
    <content><![CDATA[<p>将博客从阿里云迁移到老薛主机</p>
<span id="more"></span>
<h2 id="2017年6月23日-15-23"><a href="#2017年6月23日-15-23" class="headerlink" title="2017年6月23日 15:23"></a>2017年6月23日 15:23</h2><p>记录一下，等搬家之后开始动手。 还有 15 天到期，刚去问了一下老薛的客服，说是会有一次免费的网站搬家服务。具体到时候在说。</p>
<h2 id="2017年7月6日-08-43"><a href="#2017年7月6日-08-43" class="headerlink" title="2017年7月6日 08:43"></a>2017年7月6日 08:43</h2><p>然后昨天刚买了一年的香港主机，提供的免费搬家服务，然后就没自己什么事情了。感觉没学到什么东西呀，到时候自己再备份一下吧。</p>
<h2 id="2017年7月7日-14-33"><a href="#2017年7月7日-14-33" class="headerlink" title="2017年7月7日 14:33"></a>2017年7月7日 14:33</h2><p>有一点需要补充的是，换到老薛之后， <code>WordPress</code> 的更新以及插件的更新更加快了，之前在阿里云都是死活更新不了的。</p>
]]></content>
      <categories>
        <category>虚拟主机</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>虚拟主机</tag>
        <tag>阿里云</tag>
      </tags>
  </entry>
  <entry>
    <title>ASF（ArchiSteamFarm） 挂卡指南-入门篇</title>
    <url>/2018/09/20/archisteamfarm-guide-getting-started/</url>
    <content><![CDATA[<p>之前有写过 <em>Windows</em> 版本的 <em>ArchiSteamFarm</em> 在<strong>树莓派</strong>上的挂卡教程，那次过后到现在已经一年多了，<em>Steam</em> 库又新进了批货，所以又要挂一次啦。这次呢，发现 <em>ArchiSteamFarm</em> 已经更新到了 <strong>3.3.6.0</strong> 版本，所以就准备用最新的版本。还有就是由于众所周知的原因，国内很难正常的登录 <em>Steam</em> ，所以这次挂机的平台从自家的树莓派转移到了 <em>Google Cloud</em> 上。</p>
<span id="more"></span>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol>
<li><p>最新版本的 <em>ArchiSteamFarm</em> ，具体可以去<a href="https://github.com/JustArchi/ArchiSteamFarm/releases">这里</a>下载，我用的是 <strong>3.3.6.0</strong> 版本（这个作者更新得很勤快）；</p>
</li>
<li><p><em>Google Cloud</em> 的云服务器一台，这个的话只要你有国际信用卡，就能免费领取一台一年的云服务器，从开始到现在只装了一个梯子，其他什么都没用，现在终于可以发挥一下余热了。</p>
</li>
</ol>
<h2 id="下载以及配置"><a href="#下载以及配置" class="headerlink" title="下载以及配置"></a>下载以及配置</h2><ol>
<li><p>在最近的更新中，<em>ArchiSteamFarm</em> 开始支持多平台，所以我们不用像以前那样麻烦得再安装 <em>Mono</em> 了。首先先去下载对应的版本，可以去上面提到的<a href="https://github.com/JustArchi/ArchiSteamFarm/releases">地址</a>，然后通过 <em>FTP</em> 等方式放入云主机，也可以直接通过如下命令下载：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/JustArchi/ArchiSteamFarm/releases/download/3.3.0.6/ASF-linux-x64.zip</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后解压文件：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">unzip ASF-linux-x64.zip</span><br></pre></td></tr></table></figure>
</li>
<li><p>之后需要开始调整配置文件，总共需要调整的配置文件一共有三个，第一个是位于根目录下的 <code>ArchiSteamFarm.runtimeconfig.json</code>，默认值是这样的：</p>
 <figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;runtimeOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;configProperties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;System.GC.Concurrent&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;System.GC.Server&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p> 如果使用此配置来启动的话，在我的云服务器上会报如下错误</p>
<blockquote>
<p>FailFast: Couldn’t find a valid ICU package installed on the system. Set the configuration flag System.Globalization.Invariant to true if you want to run with no globalization support.</p>
</blockquote>
<p> 为此我们要加上这么一句：</p>
 <figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;runtimeOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;configProperties&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;System.GC.Concurrent&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;System.GC.Server&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="comment">// 防止运行报错</span></span><br><span class="line">            <span class="attr">&quot;System.Globalization.Invariant&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p> 这个错误只在我这台谷歌云的云服务器上出现过，在其他的上面都是使用默认配置也能成功启动。所以可以暂时先不加这一句，如果启动时报错，可以加上这一句试一试。 第二处需要更改的配置文件是位于 <code>config</code> 文件夹下的 <code>ASF.json</code>，这部分的配置也不是必须的，主要是为了修改运行时的语言，默认的话都是系统设置的语言，而在 <em>Linux</em> 系统上，基本上都是英语，所以要将其更改成中文的话，需要将其修改成如下配置：</p>
 <figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;AutoRestart&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Blacklist&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;CommandPrefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;!&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ConfirmationsLimiterDelay&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ConnectionTimeout&quot;</span><span class="punctuation">:</span> <span class="number">60</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;CurrentCulture&quot;</span><span class="punctuation">:</span> <span class="string">&quot;zh-CN&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Debug&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;FarmingDelay&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;GiftsLimiterDelay&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Headless&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;IdleFarmingPeriod&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;InventoryLimiterDelay&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;IPC&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;IPCPassword&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;IPCPrefixes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;http://127.0.0.1:1242/&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;LoginLimiterDelay&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;MaxFarmingTime&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;MaxTradeHoldDuration&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;OptimizationMode&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;Statistics&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;SteamMessagePrefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/me &quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;SteamOwnerID&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;SteamProtocols&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;UpdateChannel&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;UpdatePeriod&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;WebLimiterDelay&quot;</span><span class="punctuation">:</span> <span class="number">200</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;WebProxy&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;WebProxyPassword&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;WebProxyUsername&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p> 在第 <em>7</em> 行，将 <code>CurrentCulture</code> 的值改为 <code>zh-CN</code>，记得要加双引号。 第三处的话就是我们自己的账号配置文件了，如果你想以默认配置挂卡，你只需要复制一份 <code>config</code> 目录下的 <code>minimal.json</code>，使用最简配置就可以了：</p>
 <figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;SteamLogin&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;SteamPassword&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p> 填入你的用户名和密码，并将 <code>Enabled</code> 的值改为 <code>true</code>：</p>
 <figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;Enabled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;SteamLogin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Aemon&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;SteamPassword&quot;</span><span class="punctuation">:</span> <span class="string">&quot;QdXR@Fj%YEb#bA@du#$p7nYS6E1XemFY&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p> 就可以了。 如果你嫌这样麻烦，并且怕自己粗心的话，可以去这个官方提供的<a href="https://justarchi.github.io/ArchiSteamFarm/#/">配置文件生成网站</a>，来生成自己的配置文件。 如果想配置更多的功能，但又看不懂属性名称的话，你可以对着这份<a href="https://www.jianshu.com/p/a1459d1ca639">配置说明</a>，来进行配置。 当然，如果你英语足够好，也可以参阅<a href="https://github.com/JustArchiNET/ArchiSteamFarm/wiki/Configuration">官方的文档</a>。</p>
</li>
</ol>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><ol>
<li><p>在运行之前呢还需要一步，就是为 <em>ArchiSteamFarm</em> 增加可执行权限，只要执行一下命令即可：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">chmod +x ArchiSteamFarm</span><br></pre></td></tr></table></figure>
</li>
<li><p>由于我们需要长时间挂机，需要 <em>ArchiSteamFarm</em> 能在后台运行，所以我就开一个名为 <em>asf</em> 的 <em>screen</em> ：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -S asf</span><br></pre></td></tr></table></figure>
<p> 进入这个 <em>screen</em> ：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -r asf</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后我们运行 <em>ArchiSteamFarm</em> 即可：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo ./ArchiSteamFarm</span><br></pre></td></tr></table></figure>
<p> 根据你的设置不同，可能会提示你输入 <em>Steam 令牌</em> 的五位代码，检查一下你绑定的邮箱或者是手机 <em>APP</em> ，然后输入即可（不区分大小写）。 好了，现在就已经开始挂卡了，你可以按 <code>Ctrl</code> + <code>A</code> 和 <code>Ctrl</code> + <code>D</code> 来退出这个 <em>screen</em> ，并退出终端，程序会一直运行的。</p>
</li>
</ol>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>最后祝大家挂卡顺利，早日回本。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
        <tag>ArchiSteamFarm</tag>
        <tag>ASF</tag>
        <tag>Steam</tag>
        <tag>喜加一</tag>
        <tag>挂卡</tag>
      </tags>
  </entry>
  <entry>
    <title>《编码：隐匿在计算机软硬件背后的语言》</title>
    <url>/2017/05/25/codethe-hidden-language-of-computer-hardware-and-software/</url>
    <content><![CDATA[<p>《<a href="https://book.douban.com/subject/4822685/">编码：隐匿在计算机软硬件背后的语言</a>》（Code:The Hidden Language of Computer Hardware and Software）</p>
<span id="more"></span>
<ol>
<li><p>那时很可能有些人会认为「logic gates」（逻辑门）装置是以著名的微软公司创始人的名字来命名的。（Bill Gates 中的 Gates 在英文中有「门」的意思）——P108；</p>
</li>
<li><p>Meow：猫叫的声音——P111；</p>
</li>
<li><p>一般来说，对于涉及正数和负数的加法，如果两个操作数的符号位相同，但结果的符号位不同，则结果是无效的。——P159；</p>
</li>
</ol>
]]></content>
      <categories>
        <category>书摘</category>
      </categories>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>设计模式</title>
    <url>/2020/03/26/design-pattern/</url>
    <content><![CDATA[<p>说来惭愧，一直没有好好学这部分的内容，所以趁着这次机会把设计模式这块的知识好好学一下。</p>
<p>我会使用 C# 来写一些实例代码，并且会将代码放在 <a href="https://github.com/AemonCao/DesignPattern">GitHub</a> 上面，以供参考。</p>
<span id="more"></span>
<h2 id="什么是设计模式"><a href="#什么是设计模式" class="headerlink" title="什么是设计模式"></a>什么是设计模式</h2><blockquote>
<p>在软件工程中，设计模式（design pattern）是对软件设计中普遍存在（反复出现）的各种问题，所提出的解决方案。这个术语是由埃里希·伽玛（Erich Gamma）等人在1990年代从建筑设计领域引入到计算机科学的。</p>
</blockquote>
<p>先暂时将 wiki 上的说明拿过来用一下，我相信等我学完之后，可以根据自己的理解再来写一下这个问题：「什么是设计模式？」</p>
<p>本来是想放到一篇文章里的，但是这样篇幅好像太长了。虽说有目录，但是不太方便手机端的用户，所以还是拆分开来吧。</p>
<p>这里呢，之后会把设计模式的七大原则写一下，然后放个目录就好啦。</p>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul>
<li><a href="/2020/03/29/Singleton-Pattern/" title="单例模式（Singleton Pattern）">单例模式（Singleton Pattern）</a>
</li>
<li><a href="/2020/03/29/Simple-Factory-Pattern/" title="简单工厂模式（Simple Factory Pattern）">简单工厂模式（Simple Factory Pattern）</a>
</li>
<li><a href="/2020/03/31/Factory-Method-Pattern/" title="工厂方法模式（Factory Method Pattern）">工厂方法模式（Factory Method Pattern）</a>
</li>
<li><a href="/2020/04/18/Abstract-Factory-Pattern/" title="抽象工厂模式（Abstract Factory Pattern）">抽象工厂模式（Abstract Factory Pattern）</a>
</li>
</ul>
]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>设计模式</tag>
      </tags>
  </entry>
  <entry>
    <title>emoji 背后的故事</title>
    <url>/2021/06/30/emoji-%E8%83%8C%E5%90%8E%E7%9A%84%E6%95%85%E4%BA%8B/</url>
    <content><![CDATA[<p>偶然间看到的一篇文章，讲了三只🐒的故事，突发奇想想要写这么篇文章。</p>
<h3 id="🙈🙉🙊"><a href="#🙈🙉🙊" class="headerlink" title="🙈🙉🙊"></a>🙈🙉🙊</h3><p>这三只🐵，应该是常用的 emoji 表情，可是你知道他们背后的意思么？</p>
<p>首先这三个 emoji 表情分别叫做🙈（非礼勿视），🙉（非礼勿听），🙊（非礼勿言）。它们被叫做「三猿」，又叫做「三不猴」,是指三个分别用双手遮住眼睛、耳朵与嘴巴的猴子雕像，而在世界其他地方则被称为 <em>Three wise monkeys</em>，显示了名为「不见、不闻、不言」（日语：見ざる、聞かざる、言わざる）之睿智的三个秘密。</p>
<p>各个国家都有关于三猿的来源：</p>
<p>🇨🇳，出自《论语》：「非礼勿视、非礼勿听、非礼勿言、非礼勿动」；</p>
<p>🇰🇵，朝鲜半岛上对婚前女性告诫说：「见到了也当作没看到，听到了也要当作没听到，想要说也不能说。」；</p>
<p>🇮🇳：印度的圣雄甘地经常以三猿之像来传达「不见恶事，不听恶词，不说恶言」的教导；</p>
<p>🇺🇸：美国的教会学校等处也用三猿来教导学生不要看猥亵的事物，不要听与性相关的谣传，不要说虚假与下流的言词；</p>
<p>🇯🇵：日文「见ざる、闻かざる、言わざる」为日本8世纪的腔调，是用来翻译天台宗的“不见、不闻、不言”的传说。</p>
<p>下面是一些关于三猿的雕刻作品：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/emoji-背后的故事/三猿1.jpg" alt="三猿"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/emoji-背后的故事/三猿2.jpg" alt="三猿"></p>
<p>另外，游戏《只狼》中，在金刚山仙峰寺幻境中的见闻言三猿，也就是这三只猴子。一般的 Boss 需要用刀剑正面对决，而这一关的目的是为了抓到这三个猿猴。<strong>见猿</strong>的眼神很敏锐，远远看到到主角的存在就会迅速逃跑；<strong>闻猿</strong>的耳朵很灵敏，远远听到主角的脚步声就会迅速逃跑；<strong>言猿</strong>的脖子上挂着一个铜锣，发现玩家后会敲锣发出声响让周围的猴子都逃掉。</p>
<h3 id="🔰"><a href="#🔰" class="headerlink" title="🔰"></a>🔰</h3><p>这是个用得比较少的 emoji，🇨🇳基本上见不到，我唯一见到的一次是微商拿它做文字的点缀符号。</p>
<p>这其实是🇯🇵的新手上路标志。就和🇨🇳的黄色实习标志一样，在🇯🇵叫做<strong>初心運転者標識（しょしんうんてんしゃひょうしき）</strong>。</p>
<p>根据🇯🇵《道路交通法》第71条之五的第一项规定，驾驶人在初取得“第一类普通汽车”（普通自動車一種）的驾驶执照之后，必需在车辆前后高度40至120公分的范围内，贴上此标志，至少一年。未贴此标志者若遭查获，会遭违规记点的处分。此规定的目的在于保护道路驾驶经验尚不足的新手驾驶及其周围的车辆，降低交通事故。但并未明文规定一年后是否仍可贴此标志。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/emoji-背后的故事/Wakaba_mark.svg" alt="🔰"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/emoji-背后的故事/SUZUKI_ALTO_LAPIN_Chocolat_HE22S_rear.jpeg" alt="🔰"></p>
<h3 id="🕴"><a href="#🕴" class="headerlink" title="🕴"></a>🕴</h3><p>「浮在地面上的西装男」，一个西装革履，戴着帽子和墨镜，但是却浮在半空，在地面投射阴影，看似飘浮在空中的男士。他是谁？鬼怪？外星人？神秘来客？这其实是参考 The Specials 乐队 2014 年的歌曲 Ghost Town 封面上的人形惊叹号，一般用于表示人形幽灵或有特异功能的人。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/emoji-背后的故事/浮在地面上的西装男.png" alt="🕴"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/emoji-背后的故事/Ghost_Town.jpeg" alt="🕴"></p>
<h3 id="👨‍🎤"><a href="#👨‍🎤" class="headerlink" title="👨‍🎤"></a>👨‍🎤</h3><p>男歌手，在设计的 emoji 中，👨‍🎤的原型是「史上最伟大摇滚艺人」——英国 歌手大卫·鲍伊（David Bowie）。</p>
<p>这富有个性的面部彩绘造型来源于他的第六张专辑 《Aladdin Sane》。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/emoji-背后的故事/歌手男.png" alt="👨‍🎤"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/emoji-背后的故事/歌手男.jpg" alt="👨‍🎤"></p>
<h3 id="🌊"><a href="#🌊" class="headerlink" title="🌊"></a>🌊</h3><p>浪，这也是一个比较常见 emoji。它的来源就是日本浮世绘画家葛饰北斋的著名木刻版画——《神奈川冲浪里》。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/emoji-背后的故事/神奈川冲浪里.jpg" alt="🌊"></p>
]]></content>
      <categories>
        <category>趣闻</category>
      </categories>
      <tags>
        <tag>emoji</tag>
      </tags>
  </entry>
  <entry>
    <title>世界，您好！</title>
    <url>/2017/05/24/hello-world/</url>
    <content><![CDATA[<p>记录一下，希望以后能一直坚持下去。</p>
]]></content>
      <categories>
        <category>记事</category>
      </categories>
  </entry>
  <entry>
    <title>hexakosioihexekontahexaphobia</title>
    <url>/2017/07/11/hexa-koseeo-ee-hexe-konta-hexaphobia/</url>
    <content><![CDATA[<p>hexakosioihexekontahexaphobia 是指专门指害怕666这个数字，即666恐惧症。 还有一首同名歌曲。蛮好听的。 <a href="http://www.niubb.net/a/20160828/308224.html">来源</a></p>
]]></content>
      <categories>
        <category>趣闻</category>
      </categories>
      <tags>
        <tag>趣闻</tag>
      </tags>
  </entry>
  <entry>
    <title>如何删除数组中的 NaN 值</title>
    <url>/2017/06/28/how-to-delete-the-nan-in-the-array/</url>
    <content><![CDATA[<p>今天在刷 FCC <a href="http://(http://www.freecodecamp.cn">0</a> “| FreeCodeCamp中文社区”) 的时候遇到这么一题 <a href="http://(http://www.freecodecamp.cn/challenges/falsy-bouncer">1</a> “Falsy Bouncer | FreeCodeCamp中文社区”) ，记录一下。</p>
<span id="more"></span>
<h2 id="Falsy-Bouncer（真假美猴王）"><a href="#Falsy-Bouncer（真假美猴王）" class="headerlink" title="Falsy Bouncer（真假美猴王）"></a>Falsy Bouncer（真假美猴王）</h2><p>过滤数组假值 删除数组中的所有假值。 在 <code>JavaScript</code> 中，假值有 <code>false</code>、<code>null</code>、<code>0</code>、<code>&quot;&quot;</code>、<code>undefined</code> 和 <code>NaN</code>。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">bouncer</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">    <span class="keyword">return</span> arr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">bouncer</span>([<span class="number">7</span>, <span class="string">&quot;ate&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="literal">false</span>, <span class="number">9</span>, <span class="number">0</span>]);</span><br></pre></td></tr></table></figure>
<h2 id="解"><a href="#解" class="headerlink" title="解"></a>解</h2><p><code>false</code>、<code>null</code>、<code>0</code>、<code>&quot;&quot;</code>、<code>undefined</code> 这几个都很好处理，只要判断是不是等于这些值就好了。就像这样：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">bouncer</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="comment">// 请把你的代码写在这里</span></span><br><span class="line">    <span class="keyword">var</span> newArr = arr.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> value != <span class="literal">false</span>;</span><br><span class="line">    &#125;).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> value != <span class="string">&quot;0&quot;</span>;</span><br><span class="line">    &#125;).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> value != <span class="literal">undefined</span>;</span><br><span class="line">    &#125;).<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> value != <span class="literal">null</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> newArr;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">bouncer</span>([<span class="number">7</span>, <span class="string">&quot;ate&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="literal">false</span>, <span class="number">9</span>, <span class="number">0</span>]);</span><br></pre></td></tr></table></figure>
<h2 id="特别的"><a href="#特别的" class="headerlink" title="特别的"></a>特别的</h2><p>但是 <code>NaN</code> 则不能这么判断，因为 <code>NaN</code> 有个不同的地方，就是 <code>NaN</code> 不和任何值相等，包括他自己 <a href="http://(http://www.shaoqun.com/a/249082.aspx">3</a> “[Java教程]js删除数组中的NaN”)，也就是说：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// in</span></span><br><span class="line"><span class="title class_">NaN</span> == <span class="title class_">NaN</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// out</span></span><br><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure>
<p>所以如果使用和之前几个值一样使用 <code>filter()</code> <a href="http://(https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/filter">4</a> “Array.prototype.filter() - JavaScript | MDN”) 的话：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> value != <span class="title class_">NaN</span>; <span class="comment">// 这里永远会有返回。</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>所以，结合上面说的 <code>NaN</code> 的特点，这部分应该这么写：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (value == value)</span><br><span class="line">        <span class="keyword">return</span> value; <span class="comment">// 对于非 NaN 值来说，永远会有返回值。</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>关于题目，到这里就先结束了，发现自己了解的还是太少，等下去总结一下这些「假」值的特点。</p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>WEB前端</tag>
      </tags>
  </entry>
  <entry>
    <title>在树莓派3上使用 ASF（ArchiSteamFarm） 挂卡</title>
    <url>/2017/07/07/how-to-use-asf-archisteamfarm-on-the-raspberry-pi-3/</url>
    <content><![CDATA[<p>最近和室友沉迷 <em>CS:GO（Counter-Strike: Global Offensive）</em>  ，然后就需要钱来起枪了呀。但是又不想往 <em>Steam</em> 里充钱，所以就瞄上了我库里 60 来个游戏，想挂点卡来换点钱去买枪。</p>
<span id="more"></span>
<h2 id="什么是挂卡"><a href="#什么是挂卡" class="headerlink" title="什么是挂卡"></a>什么是挂卡</h2><blockquote>
<p>卡的全称是<strong>Steam 集换式卡牌</strong>，当我们在运行游戏的时候，Steam 平台会产生一些该游戏的卡牌进入库存中。但不是所有游戏都会掉落，我们在游戏商店页面中，如果看到「集换式卡牌」几个字才说明这个游戏会掉卡。 卡牌有什么用？集换式卡牌可不是拿来打牌的，首先就是收藏用，如果你觉得某张卡很好看的话，你就可以把它留着。但是卡牌最主要的作用是用来合徽章的。 我们进入 Steam 的徽章界面就能看到有一行行游戏徽章和卡牌，当我们收集齐一个游戏的徽章之后，就可以消耗它们制作徽章。制作徽章后会得到：徽章、Steam 等级经验、游戏相关背景（用于 Steam 个人资料页）、表情以及随机游戏打折券。 但是需要说明的是，每一个游戏最多只会掉落所有卡牌总量的一半，所以如果你想集齐合徽章，剩下的一半只能通过交易（交换）或是在市场购买获得。 既然卡牌有这样的作用和需求，那么就一定会形成市场，所以如果你对这些卡牌不感兴趣，那就完全可以把它们都卖掉。在市场中出售这些卡牌可以赚取货币，自动存入Steam钱包中，这些货币与当地货币是1：1的兑换率，不能提现，但是可以用来购买游戏或是市场中的别的东西。 <a href="http://soft.zol.com.cn/572/5727507.html">萌新教学 Steam挂卡回本是怎么一回事？</a></p>
</blockquote>
<p>有了钱之后，就可以去 <em>cs:go</em> 起枪了呀~</p>
<h2 id="游戏来源"><a href="#游戏来源" class="headerlink" title="游戏来源"></a>游戏来源</h2><p>通过上面的介绍我们可以知道，要想挂卡，首先得需要游戏，但是 steam 的大部分游戏都不是免费的，所以就陷入了一个死循环。 你想得没错，要是想挂卡，就必须要先花钱买游戏。但好消息是，有十分优惠的途径可以来获取这些游戏。 具体方式你可以在万能的某宝上面输入关键词「喜加一」即可。刚才去看了一下，最便宜可以到 0.3 元一个游戏。</p>
<h2 id="如何挂卡"><a href="#如何挂卡" class="headerlink" title="如何挂卡"></a>如何挂卡</h2><p>挂卡的方式有两种（我所知道的），最普通的就是自己人工挂卡，即自己开着游戏玩，然后等待掉卡。这种方法的对于挂卡来说没有什么优点，缺点倒是一大堆，首先是效率不高，你在挂卡的时候必须开着游戏，若是小游戏还好，可以后台运行。但要是什么 3A 大作，可能电脑就只能单纯用来打游戏了；其次就是功耗的问题，如果你是偶尔挂挂的话还好，但是要是你想全天 24 小时挂卡，那电费就是一个问题了。 所以就要轮到我们的挂卡工具出厂了，据我所知有两款分别是： <em>Idle Master</em> ： 前者只能在 <em>Windows</em> 平台下运行，并且是图形界面，使用起来很方便。但是作者已经不再更新和维护了。 下载地址：<a href="http://www.steamidlemaster.com/">Idle Master - Get your Steam Trading Cards the Easy Way</a> 然后呢，就是这次的主角 <em>Archi Steam Farm</em> （下文简称 <em>ASF</em> ）： <em>ASF</em> 是由 <em>C#</em> 编写，所以他可以通过 <em>mono</em> 从而可以在 <em>Linux</em> 系统上运行。既然是 <em>Linux</em> 那么也就能在树莓派上运行啦！至于为什么要在树莓派上运行，最主要的原因就是功耗，树莓派的功耗比起我的笔记本电脑来说小的不是一点两点，正常情况下，只要树莓派的散热能做好，运行 <em>ASF</em> 后就可以一直不关机。</p>
<h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><h3 id="ASF-配置"><a href="#ASF-配置" class="headerlink" title="ASF 配置"></a>ASF 配置</h3><p>首先我们需要在 <em>Windows</em> 系统下对 <em>ASF</em> 进行配置。 先去下载：<a href="https://github.com/JustArchi/ArchiSteamFarm/releases/tag/2.3.2.0">Archi Steam Farm</a> 选择下面的 <em>ASF.zip</em> 就可以了。 下载完成后解压，打开文件夹中的 <em>ASF-ConfigGenerator.exe</em> ，对 <em>ASF</em> 进行配置。配置其实很简单，按照提示一步步操作就好了，并是中文提示，所以不会有太大的问题；</p>
<h3 id="传输"><a href="#传输" class="headerlink" title="传输"></a>传输</h3><p>然后我们需要将这个文件夹传输到树莓派上面，你可以使用U盘，也可以用 <em>FTP</em> 来进行传输。放到任意目录下就可以了（只要你能找得到）；</p>
<h3 id="安装-mono"><a href="#安装-mono" class="headerlink" title="安装 mono"></a>安装 mono</h3><p>接下来我们需要安装 <em>mono</em> 。</p>
<p>可以树莓派直接连接输入输出设备，也可以在 <em>Windows</em> 上通过 <em>ssh</em> 来连接树莓派。</p>
<p>在终端依次输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo &quot;deb http://download.mono-project.com/repo/debian raspbianjessie main&quot; | sudo tee /etc/apt/sources.list.d/mono-official.list</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<p>耐心等待后，再输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install mono-devel</span><br></pre></td></tr></table></figure>
<p>这时候 <em>mono</em> 就开始下载并安装了。由于下载速度的原因，时间可以会比较长。请耐心等待，并且不要关闭终端或切断电源。 安装完成后输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mono -V</span><br></pre></td></tr></table></figure>
<p>（注意 <code>V</code> 要大写）查看 <em>mono</em> 版本。好像最新版的 <em>ASF</em> 需要 <em>mono 4.8</em> 及以上版本才可以正常运行，通过上述方法安装的 <em>mono</em> 是 <em>5.0.1 Stable (5.0.1.1)</em> ，符合 <em>ASF</em> 的要求。</p>
<h3 id="安装-Screen"><a href="#安装-Screen" class="headerlink" title="安装 Screen"></a>安装 Screen</h3><p>由于 <em>ASF</em> 需要全天启动，但是我们又不能一直开着 <em>ssh</em> 连接，所以我们就需要安装 <em>Screen</em> 来使 <em>ASF</em> 可以后台运行。 在终端分别输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install screen</span><br></pre></td></tr></table></figure>
<p>稍等片刻，<code>Screen</code> 就安装完成了。</p>
<h3 id="运行-ASF"><a href="#运行-ASF" class="headerlink" title="运行 ASF"></a>运行 ASF</h3><p>进入刚才复制到树莓派中的 <em>ASF</em> 目录，输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -S asf</span><br></pre></td></tr></table></figure>
<p><em>ASF</em> 可以为任意名称。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mono ASF.exe</span><br></pre></td></tr></table></figure>
<p>之后就是熟悉的 <em>ASF</em> 界面了，观察是否运行成功，如果成功了的话就按 Ctrl+a 和 Ctrl+d 就可以将 <em>ASF</em> 挂到后台啦，然后就可以关闭终端或切断 <code>ssh</code> 连接了。 如果想重新打开 <em>ASF</em> ，则可以通过：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">screen -r asf</span><br></pre></td></tr></table></figure>
<p>来重新进入。</p>
<h2 id="END"><a href="#END" class="headerlink" title="END"></a>END</h2><p>好啦，教程到这里就结束啦，祝大家挂卡顺利，多出闪卡，早日回本。</p>
<p>等以后有空了会配上图片哒~</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>在树莓派上安装 Chrome（Chromium） 浏览器</title>
    <url>/2017/09/23/install-chrome-chromium-browser-on-raspberry/</url>
    <content><![CDATA[<p>用习惯了谷歌浏览器，树莓派上面自带的浏览器有些不习惯，所以就想着弄一个 <em>Chrome</em> 在上边。其实是 <em>Chromium</em>，<em>Chromium</em> 是 <em>Google</em> 的 <em>Chrome</em> 浏览器背后的引擎。不过除了一些细小功能上的差别以及图标的样子，<em>Chromium</em> 和 <em>Chrome</em> 在绝大部分功能上还是一致的。</p>
<span id="more"></span>
<p>要安装的话，首先你需要一台树莓派。为了输入方便，你可能还需要一台 <em>PC</em> 通过 <em>SSH</em> 连接到这台树莓派上边。</p>
<p>搜索了很多资料，最后是安装这个<a href="http://video.tudou.com/v/XMTc4OTczNjEyMA==.html">视频</a>的方式来安装的。</p>
<p>接下来的安装方法都是视频中所讲的，如果懒得看我写的，也可以直接去看视频。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>先要去这个网站去下载三个文件</p>
<p><a href="http://ports.ubuntu.com/pool/universe/c/chromium-browser/">http://ports.ubuntu.com/pool/universe/c/chromium-browser/</a></p>
<p>下载地址分别是：</p>
<ol>
<li><p><a href="http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-codecs-ffmpeg-extra_48.0.2564.82-0ubuntu0.15.04.1.1193_armhf.deb">http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-codecs-ffmpeg-extra_48.0.2564.82-0ubuntu0.15.04.1.1193_armhf.deb</a></p>
</li>
<li><p><a href="http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-browser_48.0.2564.82-0ubuntu0.15.04.1.1193_armhf.deb">http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-browser_48.0.2564.82-0ubuntu0.15.04.1.1193_armhf.deb</a></p>
</li>
<li><p><a href="http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-browser-l10n_48.0.2564.82-0ubuntu0.15.04.1.1193_all.deb">http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-browser-l10n_48.0.2564.82-0ubuntu0.15.04.1.1193_all.deb</a></p>
</li>
</ol>
<p>可以使用如下命令来进行下载：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-codecs-ffmpeg-extra_48.0.2564.82-0ubuntu0.15.04.1.1193_armhf.deb</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-browser_48.0.2564.82-0ubuntu0.15.04.1.1193_armhf.deb</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget http://ports.ubuntu.com/pool/universe/c/chromium-browser/chromium-browser-l10n_48.0.2564.82-0ubuntu0.15.04.1.1193_all.deb</span><br></pre></td></tr></table></figure>
<p>顺序可以调换，没有关系。</p>
<p>速度可能并不稳定，下载的时候请耐心等待。</p>
<h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><p>下载完成后使用命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure>
<p>来查看是否下载成功。</p>
<p>检查三个文件名是否有误，确认无误后进行接下来的操作。</p>
<p>输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i chromium-codecs-ffmpeg-extra_48.0.2564.82-0ubuntu0.15.04.1.1193_armhf.deb</span><br></pre></td></tr></table></figure>
<p>等待安装完成后，再输入：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i  chromium-browser_48.0.2564.82-0ubuntu0.15.04.1.1193_armhf.deb chromium-browser-l10n_48.0.2564.82-0ubuntu0.15.04.1.1193_all.deb</span><br></pre></td></tr></table></figure>
<p>耐心等待安装完成。</p>
<p>当提示完成后，你就可以去树莓派使用 <em>Chromium</em> 浏览器啦。</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>nvm use 命令不生效问题以及解决方法</title>
    <url>/2021/06/17/nvm-use-not-working/</url>
    <content><![CDATA[<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>今天启动项目的时候发现报错了，提示说 <strong>node-sass</strong> 的版本不适用当前版本的 <strong>node</strong>。<strong>node-sass</strong> 官网有一张表格，记录着 <strong>node-sass</strong> 和 <strong>node</strong> 的对应版本：</p>
<div class="table-container">
<table>
<thead>
<tr>
<th>NodeJS</th>
<th>Supported node-sass version</th>
<th>Node Module</th>
</tr>
</thead>
<tbody>
<tr>
<td>Node 16</td>
<td>6.0+</td>
<td>93</td>
</tr>
<tr>
<td>Node 15</td>
<td>5.0+</td>
<td>88</td>
</tr>
<tr>
<td>Node 14</td>
<td>4.14+</td>
<td>83</td>
</tr>
<tr>
<td>Node 13</td>
<td>4.13+, &lt;5.0</td>
<td>79</td>
</tr>
<tr>
<td>Node 12</td>
<td>4.12+</td>
<td>72</td>
</tr>
<tr>
<td>Node 11</td>
<td>4.10+, &lt;5.0</td>
<td>67</td>
</tr>
<tr>
<td>Node 10</td>
<td>4.9+, &lt;6.0</td>
<td>64</td>
</tr>
<tr>
<td>Node 8</td>
<td>4.5.3+, &lt;5.0</td>
<td>57</td>
</tr>
<tr>
<td>Node &lt;8</td>
<td>&lt;5.0</td>
<td>&lt;57</td>
</tr>
</tbody>
</table>
</div>
<p>我使用的 <strong>node-sass</strong> 版本为：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;node-sass&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.12.0&quot;</span></span><br></pre></td></tr></table></figure>
<p>我记得我的 <strong>node</strong> 版本应该是 <code>v14.16.0</code>，应该不会有问题啊。</p>
<h2 id="解决？"><a href="#解决？" class="headerlink" title="解决？"></a>解决？</h2><p>但是试了几次 <code>npm run serve</code>，都是报错，于是我只好查看了一下我的 <strong>node</strong> 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; node --version</span><br><span class="line">v16.3.0</span><br></pre></td></tr></table></figure>
<p><code>v16.3.0</code>？？？</p>
<p>我明明是 <code>v14.16.0</code> 啊，怎么变成 <code>v16.3.0</code> 了？我想起前几天好像是用 <code>nvm</code> 安装了一个当前最新的版本，可能那时候安装好没切换回来吧，于是我：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; nvm use v14.16.0</span><br><span class="line">Now using node v14.16.0 (npm v7.15.1)</span><br></pre></td></tr></table></figure>
<h2 id="大问题"><a href="#大问题" class="headerlink" title="大问题"></a>大问题</h2><p>ok！easy，于是我愉快的 <code>npm run serve</code>，靠！怎么还是报错？</p>
<p>我再次查看了一下我的 <strong>node</strong> 版本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; node --version</span><br><span class="line">v16.3.0</span><br></pre></td></tr></table></figure>
<p>怎么没切过去？出了什么问题？</p>
<p>上网查了好多资料，大多数都让我卸载 <strong>nvm</strong> 和 <strong>node</strong> 重新安装的。但是我不想把我的环境搞得一团糟，所以我一直在搜索有没有其他的的解决方案。</p>
<p>终于我看到一个方案是：看看有没有安装除了 <strong>nvm</strong> 安装的其他 <strong>node</strong>。</p>
<p>于是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">which</span> -a node</span><br></pre></td></tr></table></figure>
<p>果然，除了 <strong>nvm</strong> 下的 <strong>node</strong>，还有 <strong>homebrew</strong> 也有个 <strong>node</strong>。之后我又确认了一下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew list</span><br></pre></td></tr></table></figure>
<p>确实，列表中有 node。之后我看了我的 <code>history</code>，因为我记得我没有用 <strong>homebrew</strong> 安装过 <strong>node</strong>，翻了一遍，确实没有，虽然很好奇，但是我还是准备动手删了它！</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew uninstall node</span><br></pre></td></tr></table></figure>
<p>但是却提示：</p>
<blockquote>
<p>Error: Refusing to uninstall /opt/homebrew/Cellar/node/16.3.0<br>because it is required by yarn, which is currently installed.</p>
</blockquote>
<p><strong>yarn</strong>？原来是你！我终于想到昨天下午为了搭建一个新项目的环境，我安装了 <strong>yarn</strong>，由于它是依赖于 <strong>node</strong> 的，所以 <strong>homebrew</strong> 顺便帮我安装了 <strong>node</strong>。知道了原因，接下来就好办了。</p>
<h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><p>首先卸载 <strong>yarn</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew uninstall yarn</span><br></pre></td></tr></table></figure>
<p>然后卸载 <strong>node</strong>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew uninstall node</span><br></pre></td></tr></table></figure>
<p>之后再重新安装 <strong>yarn</strong> 并加上忽略依赖项参数：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install yarn --ignore-dependencies</span><br></pre></td></tr></table></figure>
<p>至此，<strong>nvm</strong> 和 <strong>yarn</strong> 终于能和谐共处啦🎉！</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><p><a href="https://stackoverflow.com/questions/52174381/yarn-not-installing-in-nvm-version-node-version">https://stackoverflow.com/questions/52174381/yarn-not-installing-in-nvm-version-node-version</a></p>
</li>
<li><p><a href="https://classic.yarnpkg.com/en/docs/install#debian-stable">https://classic.yarnpkg.com/en/docs/install#debian-stable</a></p>
</li>
<li><p><a href="https://github.com/sass/node-sass/releases/tag/v4.14.1">https://github.com/sass/node-sass/releases/tag/v4.14.1</a></p>
</li>
<li><p><a href="https://stackoverflow.com/questions/52676244/node-version-not-updating-after-nvm-use-on-mac">https://stackoverflow.com/questions/52676244/node-version-not-updating-after-nvm-use-on-mac</a></p>
</li>
<li><p><a href="https://stackoverflow.com/questions/37415134/error-node-sass-does-not-yet-support-your-current-environment-windows-64-bit-w">https://stackoverflow.com/questions/37415134/error-node-sass-does-not-yet-support-your-current-environment-windows-64-bit-w</a></p>
</li>
<li><p><a href="https://github.com/sass/node-sass#node-version-support-policy">https://github.com/sass/node-sass#node-version-support-policy</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>WEB 前端</category>
      </categories>
      <tags>
        <tag>homebrew</tag>
        <tag>node</tag>
        <tag>nvm</tag>
        <tag>yarn</tag>
      </tags>
  </entry>
  <entry>
    <title>RESTful API 设计：13 个让你用户开心的最佳实践</title>
    <url>/2020/12/14/restful-api-design-13-best-practices-to-make-your-users-happy/</url>
    <content><![CDATA[<p>Web 服务在 HTTP 协议存在的时候就已经存在了。但是，特别是当云计算问世以来，它们已成为让客户与我们的数据进行交互的一种非常普遍的方式。</p>
<p>当在使用 SOAP API 的时候，我还没有足够幸运地成为一名开发者。因此，我对 <strong>REST</strong> 比较了解，这是一种用于构建 API 的基于资源的体系结构风格。</p>
<p><strong>我一直在从事涉及构建或使用 API 的项目</strong>，已经一两年了。</p>
<p>我见过的大多数 API 都声称是 <strong>RESTful</strong> ——即符合 REST 体系结构的原则和约束。</p>
<p>然而，<strong>他们中的一些人一直给 REST 带来非常、非常坏的名声。</strong></p>
<iframe src="//player.bilibili.com/player.html?aid=44368211&bvid=BV1zb411h7GM&cid=77689275&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<p>错误的使用状态码，纯文本的响应，模式（schemas）不一致……<strong>这些我都见过</strong>（或者说至少见过很多）。所以我决定写一些我认为在设计 REST API 时的一些好的实践。</p>
<h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>我没有权力说下面的做法 100% 符合神圣的 RESTful 原则（如果有的话！）。我从构建和使用各种 API 的经验中收集了这些信息。</p>
<p>同样，我也不假装已经掌握了 REST API 设计！这是一门<strong>手艺</strong>——你练习得越多，就做得越好。</p>
<p>我将公开一些代码片段作为「糟糕设计的例子」。如果它们看起来和你写的东西很像，那也没关系！唯一重要的是我们一起学习。我希望这篇简单的清单体文章能够帮助我们做到这一点。</p>
<p>接下来：<strong>这里有一些技巧、建议和建议来设计让你的用户开心的 REST API。</strong></p>
<h2 id="了解适用于-REST-的-HTTP-的基础知识"><a href="#了解适用于-REST-的-HTTP-的基础知识" class="headerlink" title="了解适用于 REST 的 HTTP 的基础知识"></a>了解适用于 REST 的 HTTP 的基础知识</h2><p>如果你要构建一个设计良好的 <strong>REST API</strong>，那么最好了解 <strong>HTTP 协议的基础知识</strong>。我坚信<strong>这将帮助你做出更好的设计决策</strong>。</p>
<p>我发现 MDN Web 文档上的 <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Overview">HTTP 概览</a>是一个非常好的阅读材料。然而这太长了，这里列出一个 HTTP 应用于 REST 的基础知识摘要：</p>
<ul>
<li>HTTP 有<strong>动词</strong>（或者说是请求方法）最常见的有：GET，POST，PUT，PATCH和DELETE。</li>
<li>REST 是<strong>面向资源</strong>的，资源由 <strong>URI</strong> 表示：<code>/newspapers/</code>。</li>
<li>一个<strong>端点</strong>（endpoints）是一个动词和一个 URI 的组合，例如：<code>GET: /articles/</code>。</li>
<li>一个端点可以解释为一个<strong>资源上的操作</strong>，例如：<code>POST: /articles/</code> 可能意味着「创建一篇新文章」。</li>
<li>在高层次，<strong>动词映射到 CRUD 操作</strong>：<code>GET</code> 代表<code>读取</code>，<code>POST</code> 代表<code>创建</code>，<code>PUT</code> 和 <code>PATCH</code> 代表<code>更新</code>，<code>DELETE</code> 代表……emm，<code>删除</code>。</li>
<li>相应的状态由其<strong>状态码</strong>指定：<code>1xx</code> 用于信息，<code>2xx</code> 用于成功，<code>3xx</code> 用于重定向，<code>4xx</code> 用于客户端错误，<code>5xx</code> 用于服务端错误。</li>
</ul>
<p>当然，你可以可使用 HTTP 协议为 REST API 设计提供任何内容，但是我相信这些是基本注意事项。</p>
<h2 id="不要返回纯文本"><a href="#不要返回纯文本" class="headerlink" title="不要返回纯文本"></a>不要返回纯文本</h2><p>大多数 REST APIs 都使用 JSON 作为数据格式，尽管它不是由 REST 风格强加的。</p>
<p>但是返回包含 JSON 格式字符串的主体（body）是不够的。你需要<strong>指定 <code>Content-Type</code> 头</strong>！它的值必须设置为 <strong><code>application/json</code></strong>。</p>
<p>这对于一些<strong>编程客户端</strong>（例如，某人或某服务通过 Python 中的 <code>requests</code> 库来与你的 API 进行交互）来说尤其重要——它们中的一些依赖于这个头来正确解码相应。</p>
<p><strong>重要提示</strong>：你可以用 Firefox 很容易的验证一个响应（reponse）的 <code>Content-Type</code>。它为响应内置了 <code>Content-Type: application/json</code> 的漂亮提示。🔥</p>
<!-- ![在Firefox中，「内容类型：文本/纯文本」看起来很普通。](restful-api-design-13-best-practices-to-make-your-users-happy/restapi-plain.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/restful-api-design-13-best-practices-to-make-your-users-happy/restapi-plain.png" alt="在Firefox中，「内容类型：文本/纯文本」看起来很普通。"></p>
<!-- <img data-src="/2020/12/14/restful-api-design-13-best-practices-to-make-your-users-happy/restapi-plain.png" class="" title="在Firefox中，「内容类型：文本&#x2F;纯文本」看起来很普通。"> -->
<!-- ![检测到「内容类型：application / json」！看这是多么的漂亮和实用。🕺](restful-api-design-13-best-practices-to-make-your-users-happy/restapi-json.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/restful-api-design-13-best-practices-to-make-your-users-happy/restapi-json.png" alt="检测到「内容类型：application / json」！看这是多么的漂亮和实用。🕺"></p>
<!-- <img data-src="/2020/12/14/restful-api-design-13-best-practices-to-make-your-users-happy/restapi-json.png" class="" title="检测到「内容类型：application &#x2F; json」！看这是多么的漂亮和实用。🕺"> -->
<h2 id="避免在-URI-中使用动词"><a href="#避免在-URI-中使用动词" class="headerlink" title="避免在 URI 中使用动词"></a>避免在 URI 中使用动词</h2><p>如果你已经了解了基础知识，那么你现在就会知道在 URI 中加入动词是<strong>不 RESTful</strong> 的。</p>
<p>这是因为 <strong>HTTP 的请求方法应该足以描述在资源上执行的操作</strong>。</p>
<p>假如你希望提供一个端点来生成和检索文章的 Banner，我会加上 <code>:param</code> 一个 URI 参数的占位符（例如 ID 或者 slug）。你可以会尝试着这么写：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">GET: /articles/:slug/generateBanner/</span><br></pre></td></tr></table></figure>
<p>但是这里 <code>GET</code> 方式在语义上已经足够说明我们正在检索（”GETting”）一个 Banner。那么，让我们使用：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">GET: /articles/:slug/banner/</span><br></pre></td></tr></table></figure>
<p>类似的，对于创建新文章的端点：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">不要这样</span></span><br><span class="line">POST: /articles/createNewArticle/</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">应该这样</span></span><br><span class="line">POST: /articles/</span><br></pre></td></tr></table></figure>
<p>HTTP 请求方法就是一切！</p>
<h2 id="使用复数名词"><a href="#使用复数名词" class="headerlink" title="使用复数名词"></a>使用复数名词</h2><p>对于资源名词，你可能很难决定应该使用复数还是单数形式。</p>
<p>你应该用 <code>/article/:id/</code> （单数）还是 <code>/articles/:id/</code> （复数）？</p>
<p><strong>我建议使用复数形式。</strong></p>
<p>为什么？因为它能更好的匹配所有类型的端点。</p>
<p>我同意 <code>GET /article/2/</code> 很好，但是 <code>GET /article/</code> 怎么样？我们得到的是系统中唯一的条目，还是全部？</p>
<p>为了避免这种模棱两可，让我们保持一致，在任何地方都使用复数：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">GET: /articles/2/</span><br><span class="line">POST: /articles/</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<h2 id="在响应体中返回错误详细信息"><a href="#在响应体中返回错误详细信息" class="headerlink" title="在响应体中返回错误详细信息"></a>在响应体中返回错误详细信息</h2><p>当 API 服务器处理错误时，在 JSON 正文中返回<strong>错误详细信息</strong>来帮助用户调试是很方便的（也是推荐的!）如果你包含了哪些字段受到了错误的影响，那么将获得特别的荣誉！</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;error&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Invalid payoad.&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;surname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;This field is required.&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="注意状态码"><a href="#注意状态码" class="headerlink" title="注意状态码"></a>注意状态码</h2><p>这一点非常重要，如果你在这篇文章只能记住一件事，那就可能是这个：</p>
<blockquote>
<p>你的 API 可能做的最糟糕的事情是返回一个错误响应 <code>200 OK</code> 状态代码。</p>
</blockquote>
<p>这只是糟糕的做法。应该<strong>返回有意义的状态代码</strong>，以正确的描述错误的类型。</p>
<p>当然，你可能会想：「但是，我正在按照你给的建议在响应正文中发送错误的详细信息，那么这有什么问题呢？」</p>
<p>让我给你讲个故事。</p>
<p>我曾经不得不使用一个 API，每一个响应都返回 <code>200 OK</code>，表明是否请求成功是通过一个 <code>status</code> 字段：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>因此，即使状态为200 OK，我也不能绝对确定它不会失败。</p>
<p>实际上，这个 API 还会返回如下响应：</p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>text/html</span><br><span class="line"></span><br><span class="line"><span class="language-smalltalk">&#123;</span></span><br><span class="line"><span class="language-smalltalk">    <span class="comment">&quot;status&quot;</span>: <span class="comment">&quot;failure&quot;</span>,</span></span><br><span class="line"><span class="language-smalltalk">    <span class="comment">&quot;data&quot;</span>: &#123;</span></span><br><span class="line"><span class="language-smalltalk">        <span class="comment">&quot;error&quot;</span>: <span class="comment">&quot;Expected at least two items in list.&quot;</span></span></span><br><span class="line"><span class="language-smalltalk">    &#125;</span></span><br><span class="line"><span class="language-smalltalk">&#125;</span></span><br></pre></td></tr></table></figure>
<p>（是的——它还返回 HTML 内容，为什么不呢？）</p>
<p>因此，在我读取 <code>data</code> 之前，我必须检查状态码和特别的 <code>status</code> 字段，以完全确保一切正常。</p>
<p><strong>这种设计是绝对不能的，因为它破坏了API和用户之间的信任。</strong> 开始担心API可能在欺骗你。</p>
<p>这一切都是 <em>非常</em> un-RESTful 的。那么你应该怎么做呢？</p>
<p><strong>使用状态代码，只使用响应体提供错误详细信息。</strong></p>
<figure class="highlight http"><table><tr><td class="code"><pre><span class="line"><span class="meta">HTTP/1.1</span> <span class="number">400</span> Bad Request</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json</span><br><span class="line"></span><br><span class="line"><span class="language-smalltalk">&#123;</span></span><br><span class="line"><span class="language-smalltalk">    <span class="comment">&quot;error&quot;</span>: <span class="comment">&quot;Expected at least two items in list.&quot;</span></span></span><br><span class="line"><span class="language-smalltalk">&#125;</span></span><br></pre></td></tr></table></figure>
<h2 id="一致使用状态码"><a href="#一致使用状态码" class="headerlink" title="一致使用状态码"></a>一致使用状态码</h2><p>一旦你掌握了状态码，你就应该努力一致地使用它们。</p>
<p>例如，如果你选择 <code>POST</code> 端点返回某个地方创建的 <code>201 Created</code>，那么对每个 <code>POST</code> 端点使用相同的状态码。</p>
<p>为什么？因为用户不必担心哪个端点上的 <em>which方法会在哪个环境中返回哪个状态码</em>。</p>
<p>因此，请保持<strong>一致</strong>，如果你偏离约定，请在有明显标志的地方进行<strong>记录</strong>。</p>
<p>通常，我坚持以下几点：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">GET: 200 OK</span><br><span class="line">POST: 201 Created</span><br><span class="line">PUT: 200 OK</span><br><span class="line">PATCH: 200 OK</span><br><span class="line">DELETE: 204 No Content</span><br></pre></td></tr></table></figure>
<h2 id="不要嵌套资源"><a href="#不要嵌套资源" class="headerlink" title="不要嵌套资源"></a>不要嵌套资源</h2><p>REST API 处理资源，并且检索资源的列表或单个实例很简单。但是，当你处理<strong>相关资源</strong>时会发生什么？</p>
<p>假设我们想要检索特定作者的文章列表——具有 <code>id = 12</code> 的作者。基本上有两种选择。</p>
<p>第一种方法是将 <code>articles</code> 资源<strong>嵌套</strong>在 <code>authors</code> 资源下，例如:</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">GET: /authors/12/articles/</span><br></pre></td></tr></table></figure>
<p>有些人推荐它，因为它确实代表了作者与其文章之间的一对多关系。</p>
<p>然而，<strong>现在已经不清楚</strong>你在请求什么类型的资源了。这是作者吗？这篇文章吗？</p>
<p>同样，<a href="https://www.python.org/dev/peps/pep-0020/#id3">扁平比嵌套更好</a>，因此必须有更好的方法……而且确实有！</p>
<p>我的建议是<strong>使用 querystring</strong> 直接过滤 <code>articles</code>资源：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">GET: /articles/?author_id=12</span><br></pre></td></tr></table></figure>
<p>这显然意味着：「获取作者#12的所有文章」，不是吗？👍</p>
<h2 id="优雅地处理拖尾斜杠"><a href="#优雅地处理拖尾斜杠" class="headerlink" title="优雅地处理拖尾斜杠"></a>优雅地处理拖尾斜杠</h2><p>URI 是否应该在后面加上 <code>/</code> 并不是一个真正的争论。简单地选择一种方法或另一种方法（即：带或不带尾斜杠），并且<strong>在用户错误使用的时候，优雅的进行重定向</strong>。</p>
<p>（我得说，我自己也犯过不止一次这样的错误。🙈）</p>
<p>又到了故事时间！有一天，当我将 REST API 集成到项目中时，每次调用我都收到了 <code>500 Internal Error</code>。我使用的端点看起来长这个样子：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">POST: /entities</span><br></pre></td></tr></table></figure>
<p>我很生气，不知道自己做错了什么。</p>
<p>最后，事实证明<strong>服务出了问题，因为我缺少了一个结尾斜杠！</strong>所以我开始使用：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">POST: /entities/</span><br></pre></td></tr></table></figure>
<p>在此之后，一切都很正常。🤦‍♂️</p>
<p>该 API 尚未修复这个问题，但是希望你可以为用户防止这种类型的问题。</p>
<p><strong>温馨提示</strong>：大多数 Web 框架都有一个选项来重定向到URL的尾随或未尾随版本，找到那个选项并激活它。</p>
<h2 id="使用-querystring-进行过滤和分页"><a href="#使用-querystring-进行过滤和分页" class="headerlink" title="使用 querystring 进行过滤和分页"></a>使用 querystring 进行过滤和分页</h2><p>很多时候，一个简单的端点不足以满足复杂的业务逻辑。</p>
<p>你的用户可能希望检索满足特定条件的选项，或者一次检索少量的选项以提高性能。</p>
<p>这正是<strong>过滤</strong>和<strong>分页</strong>的目的。</p>
<p>使用<strong>过滤</strong>，用户可以指定返回的项目应该具有的属性。</p>
<p><strong>分页</strong>允许用户检索数据集的一部分。最简单的分页就是<strong>页码分页</strong>，它由 <code>page</code> 和 <code>page_size</code> 决定。</p>
<p>现在的问题是：如何将这些功能集成到 <code>RESTful API</code> 中？</p>
<p>我的答案是：<strong>使用 querystring</strong>。</p>
<p>我想说，使用 querystring 进行分页的原因是非常明显的。它是这样的：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">GET: /articles/?page=1&amp;page_size=10</span><br></pre></td></tr></table></figure>
<p>但对于过滤来说，它可能不那么明显。刚开始，你可能会考虑这样做，只检索已发表文章的列表：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">GET: /articles/published/</span><br></pre></td></tr></table></figure>
<p>设计问题：<strong>published 不是资源</strong>！相反，它是你正在检索的数据的特征。这种事情应该放在 <strong>querystring</strong> 中。</p>
<p>因此最后，用户可以检索「包含 20 篇的已发布文章的第二页」，如下所示：</p>
<figure class="highlight console"><table><tr><td class="code"><pre><span class="line">GET: /articles/?published=true&amp;page=2&amp;page_size=20</span><br></pre></td></tr></table></figure>
<p>很漂亮，不是吗？</p>
<h2 id="学习-401-Unauthorized-和-403-Forbidden-之间的区别"><a href="#学习-401-Unauthorized-和-403-Forbidden-之间的区别" class="headerlink" title="学习 401 Unauthorized 和 403 Forbidden 之间的区别"></a>学习 <code>401 Unauthorized</code> 和 <code>403 Forbidden</code> 之间的区别</h2><p>在处理 API 中的安全性错误时，很容易混淆该错误是与<strong>authentication</strong>还是<strong>authorization</strong>（也称为permissions）有关——我经常遇到这种情况。</p>
<p>下面是我的备忘单，让你知道根据情况我该如何应对：</p>
<ul>
<li>用户是否未提供身份验证凭据？他们无效吗？👉 <code>401 Unauthorized</code>。</li>
<li>用户是否已正确验证身份，但没有访问资源所需的权限？👉 <code>403 Forbidden</code>。</li>
</ul>
<h2 id="充分利用-202-Accepted"><a href="#充分利用-202-Accepted" class="headerlink" title="充分利用 202 Accepted"></a>充分利用 <code>202 Accepted</code></h2><p>我发现 <code>202 Accepted</code> 被用来代替 <code>201 Created</code> 是非常方便的。它的意思是：</p>
<blockquote>
<p>我，服务器，已经理解了你的请求。我还没有创建资源，但这很好（指这不是一个错误）。</p>
</blockquote>
<p>我认为 <code>202 Accepted</code> 特别适用于以下两种情况：</p>
<ul>
<li>资源是否会用于将来的处理而创建——例如，在一个工作完成后。</li>
<li>如果资源已经以某种方式存在，但是不应将其解释为错误。</li>
</ul>
<h2 id="使用专门用于-REST-API-的-web-框架"><a href="#使用专门用于-REST-API-的-web-框架" class="headerlink" title="使用专门用于 REST API 的 web 框架"></a>使用专门用于 REST API 的 web 框架</h2><p>作为最后一个最佳实践，我们将讨论这个问题：<strong>你如何实际在 API 中实现最佳实践？</strong></p>
<p>通常，你想创建一个快速的 API，以便一些服务可以相互交互。</p>
<p>Python 开发人员将使用 Flask，JS 开发人员将使用 Express，他们将实现一些简单的路由来处理 HTTP 请求。</p>
<p>这种选择的问题在于，<strong>通常而言，该框架并非针对构建 REST API 服务</strong>。</p>
<p>例如，Flask 和 Express 都是两个非常通用的框架，但是它们并不是<em>专门</em>用来帮助你构建 REST API 的。</p>
<p>因此，你必须采取<strong>额外的步骤</strong>在你的 API 中实现最佳实践。大多数时候，「懒惰」或「缺乏时间」意味着你不会付出努力，从而留给你的用户一个古怪的 API。</p>
<p>解决方案很简单：<strong>使用合适的工具</strong>。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/restful-api-design-13-best-practices-to-make-your-users-happy/rest-apis-right-tool-for-job.jpg" alt="Holy sayings from good lad Scotty."></p>
<p>各种语言中出现了专门用于构建 REST API 的新框架。<strong>他们帮助你遵循最佳实现，不会很麻烦，也不牺牲生产力。</strong></p>
<p>在 Python 中，我发现的最好的 API 框架之一是 <a href="https://falconframework.org">Falcon</a>。它与 Flask 一样简单易用，非常快，并且非常适合在几分钟内构建 REST API。</p>
<!-- ![Falcon: Unburdening APIs for over 0.0564 centuries.](restful-api-design-13-best-practices-to-make-your-users-happy/Falcon.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/restful-api-design-13-best-practices-to-make-your-users-happy/Falcon.png" alt="Falcon: Unburdening APIs for over 0.0564 centuries."></p>
<!-- <img data-src="/2020/12/14/restful-api-design-13-best-practices-to-make-your-users-happy/Falcon.png" class="" title="Falcon: Unburdening APIs for over 0.0564 centuries."> -->
<p>如果你使用的是 Django，那么转到 <a href="http://www.django-rest-framework.org">Django REST Framework</a> 即可。它不是那么直观，但是功能强大。</p>
<p>在 NodeJS 中，尽管我尚未尝试过 <a href="http://restify.com">Restify</a>，但它似乎也是一个不错的选择。</p>
<p>我强烈建议你尝试一下这些框架！它们将帮助你构建美观，优雅且设计良好的 REST API。</p>
<h2 id="让我们给-REST-一个好名声"><a href="#让我们给-REST-一个好名声" class="headerlink" title="让我们给 REST 一个好名声"></a>让我们给 REST 一个好名声</h2><p>我们都应该努力使 API 成为一种使用乐趣。希望本文能够帮助你学习一些技巧和技术，以构建<strong>更好的 REST API</strong>。对我而言，它归结为<strong>良好的语义</strong>，<strong>简单性</strong>和常识。</p>
<p>REST API 设计是一门手艺。如果你对以上几点有不同的看法，我很乐意听听。</p>
<p>在此期间，请持续提供优质的API！💻</p>
<hr>
<p>原文地址：<a href="https://florimond.dev/blog/articles/2018/08/restful-api-design-13-best-practices-to-make-your-users-happy/">RESTful API Design: 13 Best Practices to Make Your Users Happy</a>, by Florimond Manca</p>
]]></content>
      <categories>
        <category>翻译</category>
      </categories>
      <tags>
        <tag>RESTful</tag>
        <tag>翻译</tag>
      </tags>
  </entry>
  <entry>
    <title>两种方法显示节点的层次结构</title>
    <url>/2017/06/15/the-two-methods-show-the-hierarchical-structure-of-the-nodes/</url>
    <content><![CDATA[<p>有时为了更好的看清网页的布局，仅仅通过看代码或者 <em>F12</em> 的调试是不够的。这时候我们就需要一些「黑科技」。这里介绍两种方法，一种是通过 <em>JavaScript</em> 来显示，另一种是通过 <em>CSS</em> 样式来显示。</p>
<span id="more"></span>
<h2 id="JavaScript-方法"><a href="#JavaScript-方法" class="headerlink" title="JavaScript 方法"></a>JavaScript 方法</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[].<span class="property">forEach</span>.<span class="title function_">call</span>($$(<span class="string">&quot;*&quot;</span>), <span class="keyword">function</span>(<span class="params">a</span>) &#123;</span><br><span class="line">    a.<span class="property">style</span>.<span class="property">outline</span> = <span class="string">&quot;1px solid #&quot;</span> + (~~(<span class="title class_">Math</span>.<span class="title function_">random</span>() * (<span class="number">1</span> &amp; lt; &amp; lt; <span class="number">24</span>))).<span class="title function_">toString</span>(<span class="number">16</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>在 <em>F12</em> 中输入此段 <em>JavaScript</em> 代码，就可以显示各个节点的外部框架。</p>
<p>效果如下：</p>
<!-- ![js](https://ooo.0o0.ooo/2017/06/15/594230a99e355.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/the-two-methods-show-the-hierarchical-structure-of-the-nodes/js.png" alt="js"></p>
<!-- <img data-src="/2017/06/15/the-two-methods-show-the-hierarchical-structure-of-the-nodes/js.png" class="" title="js"> -->
<p>原网站：</p>
<!-- ![原网站](https://ooo.0o0.ooo/2017/06/15/594230a9285a6.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/the-two-methods-show-the-hierarchical-structure-of-the-nodes/原网站.png" alt="原网站"></p>
<!-- <img data-src="/2017/06/15/the-two-methods-show-the-hierarchical-structure-of-the-nodes/%E5%8E%9F%E7%BD%91%E7%AB%99.png" class="" title="原网站"> -->
<h2 id="CSS-方法"><a href="#CSS-方法" class="headerlink" title="CSS 方法"></a>CSS 方法</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line">* &#123;<span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">2</span>);&#125;</span><br><span class="line">* * &#123;<span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>, .<span class="number">2</span>);&#125;</span><br><span class="line">* * * &#123;<span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>, .<span class="number">2</span>);&#125;</span><br><span class="line">* * * * &#123;<span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>, .<span class="number">2</span>);&#125;</span><br><span class="line">* * * * * &#123;<span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">2</span>);&#125;</span><br><span class="line">* * * * * * &#123;<span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>, .<span class="number">2</span>);&#125;</span><br></pre></td></tr></table></figure>
<p>只要在网站中使用这一段 <em>CSS</em> 样式，就能看到如下效果：</p>
<!-- ![css](https://ooo.0o0.ooo/2017/06/15/594230a9a0f03.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/the-two-methods-show-the-hierarchical-structure-of-the-nodes/css.png" alt="css"></p>
<!-- <img data-src="/2017/06/15/the-two-methods-show-the-hierarchical-structure-of-the-nodes/css.png" class="" title="css"> -->
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>两种方法都有自己的优缺点，<em>JavaScript</em> 的使用方便，但是只能适用于单个网站；而 <em>CSS</em> 样式适用于数量多的网站（只需要在公共 <em>CSS</em> 文件中加入这些代码就可以了）。</p>
<h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><ol>
<li><p><a href="https://www.zhihu.com/question/27432017/answer/40621923">代码来源-知乎</a></p>
</li>
<li><p><a href="https://www.quora.com/What-are-the-most-interesting-HTML-JS-DOM-CSS-hacks-that-most-web-developers-dont-know-about/answer/Gajus-Kuizinas">代码来源-Quora</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>WEB 前端</category>
      </categories>
      <tags>
        <tag>JavaScript</tag>
        <tag>WEB前端</tag>
        <tag>CSS</tag>
        <tag>奇技淫巧</tag>
      </tags>
  </entry>
  <entry>
    <title>使用枚举和按位运算来控制用户权限</title>
    <url>/2018/12/07/use-enumeration-and-bitwise-operations-to-control-user-permissions/</url>
    <content><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>公司重构系统，我被分配到了用户管理模块，在做到权限的时候发现之前的权限管理是用一个长的字符串来存储所有权限的，例如：</p>
<span id="more"></span>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">5101110</span><br><span class="line">ABCDEFG</span><br></pre></td></tr></table></figure>
<p>上面的 <code>7</code> 位数字分别对应下面的 <code>7</code> 个权限，除了第一位为权限等级（分为 1 至 5 档）外，其他的都是是否拥有该权限的状态（1 代表拥有该权限，0 代表没有该权限）。 这样的做法虽然看似简单，但在代码编写中会麻烦很多，特别是当权限种类数量很多的时候。所以，在查阅资料后，我决定<strong>使用枚举和按位运算来控制用户权限</strong>（点题），在向 leader 请示后，开始改造。</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>首先要把原有的权限拆分为两部分，一部分是第一位的权限等级，另一部分是各个权限状态，需要改造的主要是各个权限状态。 为了简化步骤，我把权限数量缩小为 <code>6</code> 个，实际有 <code>15</code> 个（并且未来还可能增加），具体是这样的： 一个六个权限，分别用 0 和 1 来表示<strong>有</strong>或<strong>没有</strong>对应的权限：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">17</span><br><span class="line"></span><br><span class="line">FEDCBA</span><br><span class="line">010001B</span><br></pre></td></tr></table></figure>
<p>如上，代表用户拥有 <code>A</code> 权限和 <code>E</code> 权限，同理可得如果有 一个用户拥有 <code>B</code> 权限、<code>C</code> 权限和 <code>D</code> 权限，那我们就可以这样计算：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">2 | 4 | 8 = 14</span><br><span class="line"></span><br><span class="line">  000010B</span><br><span class="line">  000100B</span><br><span class="line">| 001000B</span><br><span class="line">---------</span><br><span class="line">  001110B</span><br></pre></td></tr></table></figure>
<p>然后我们就可以用 <code>001110</code> 来代表用户所拥有的权限了。 当我们需要<strong>添加权限</strong>的时候，我们就可以用<strong>按位或</strong>（<code>|</code>）来计算，比如我们要为上面的 <code>001110B</code> 来添加一个 F 权限（<code>100000B</code>）：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">001110B | 100000B = 101110B</span><br><span class="line"></span><br><span class="line">14 | 32 = 45</span><br></pre></td></tr></table></figure>
<p>而且就算用户已经有了需要添加的权限，再进行<strong>按位或</strong>的运算也是没有问题的：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">45 | 32 = 45</span><br><span class="line"></span><br><span class="line">101110B | 100000B = 101110B</span><br></pre></td></tr></table></figure>
<p>当我们需要<strong>移除权限</strong>的时候，我们就要用到<strong>与非运算</strong>（<code>&amp;</code> 和 <code>~</code>）：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">45 &amp; ~32 = 14</span><br><span class="line"></span><br><span class="line">101110B &amp; ~100000B = 001110B</span><br></pre></td></tr></table></figure>
<p>同样的，就算用户本来没有这个权限，在移除权限时也不会有问题：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">14 &amp; ~32 = 14</span><br><span class="line"></span><br><span class="line">001110B &amp; ~100000B = 001110B</span><br></pre></td></tr></table></figure>
<p>当我们需要判断一个用户<strong>是否拥有权限</strong>的时候，可以用用户的权限来<strong>与</strong>（<code>&amp;</code>）要判断的权限，当结果还是判断的权限时，则代表用户有这个权限：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">45 &amp; 32 = 32</span><br><span class="line"></span><br><span class="line">101110B &amp; 100000B = 100000B</span><br></pre></td></tr></table></figure>
<h2 id="编码"><a href="#编码" class="headerlink" title="编码"></a>编码</h2><p>首先列出所有的权限的枚举：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 权限集枚举</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> RightsSet</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> A 权限</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    ARights = <span class="number">1</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> B 权限</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    BRights = <span class="number">2</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> C 权限</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    CRights = <span class="number">4</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> D 权限</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    DRights = <span class="number">8</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> E 权限</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    ERights = <span class="number">16</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> F 权限</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    FRights = <span class="number">32</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意，枚举的值一定要是 <code>2</code> 的 N 次幂形式。 然后是三个与权限相关个公共静态方法：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 判断是否拥有一个权限</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;userRights&quot;&gt;</span>用户原有的权限<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;newRights&quot;&gt;</span>需要判断的权限<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>是否拥有一个权限<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title">hasRights</span>(<span class="params">RightsSet userRights, RightsSet newRights</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (userRights &amp; newRights) == newRights;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 添加一个权限</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;userRights&quot;&gt;</span>用户原有的权限<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;newRights&quot;&gt;</span>需要添加的权限<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>用户的新权限<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RightsSet <span class="title">addRights</span>(<span class="params">RightsSet userRights, RightsSet newRights</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> userRights | newRights;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 删除一个权限</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;userRights&quot;&gt;</span>用户原有的权限<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;newRights&quot;&gt;</span>需要删除的权限<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>用户的新权限<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> RightsSet <span class="title">deleteRights</span>(<span class="params">RightsSet userRights, RightsSet newRights</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> userRights &amp; ~newRights;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>位运算是最基础的计算机运算，各个语言的用法不会有太大的变化，所以不管是什么语言应该都是可以实现的； 在数据库中我们只需要存储 <code>RightsSet</code> 的值就可以代表各种权限的组合结果了； 在数据库操作中，如果我们要对某一类的权限进行处理时，也不需要像以前一样进行复杂的字符串处理了； 并且位运算作为基础的计算机运算的速度是非常快的，各种数据库也都支持位运算； 而在代码编写中，我们只需要使用权限的名称（类似于上方代码中的枚举标志符 <code>ARights</code>、<code>BRights</code>）来进行操作，而不用记忆各个权限对应的数值； 当在前端进行权限更改等操作时，我们也可以直接在前端计算好 <code>RightsSet</code> 的值，再传给后台，反过来前台显示也是一样；</p>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
  </entry>
  <entry>
    <title>依赖注入那些事儿</title>
    <url>/2017/09/15/those-stories-of-dependency-injection/</url>
    <content><![CDATA[<p>为方便以后查阅，特地转载一下，整理为 <a href="/2017/09/15/those-stories-of-dependency-injection/md.txt" title="Markdown格式">Markdown格式</a>。</p>
<p>转载自：<a href="http://www.cnblogs.com/leoo2sk/archive/2009/06/17/1504693.html">依赖注入那些事儿 - T2噬菌体</a></p>
<span id="more"></span>
<h2 id="IGame-游戏公司的故事"><a href="#IGame-游戏公司的故事" class="headerlink" title="IGame 游戏公司的故事"></a>IGame 游戏公司的故事</h2><h3 id="讨论会"><a href="#讨论会" class="headerlink" title="讨论会"></a>讨论会</h3><p>话说有一个叫 IGame 的游戏公司，正在开发一款 ARPG 游戏（动作&amp;角色扮演类游戏，如魔兽世界、梦幻西游这一类的游戏）。一般这类游戏都有一个基本的功能，就是打怪（玩家攻击怪物，借此获得经验、虚拟货币和虚拟装备），并且根据玩家角色所装备的武器不同，攻击效果也不同。这天，IGame 公司的开发小组正在开会对打怪功能中的某一个功能点如何实现进行讨论，他们面前的大屏幕上是这样一份需求描述的 PPT：</p>
<!-- ![01_3.gif](https://i.loli.net/2017/09/15/59bb9d3e3a3c1.gif) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/those-stories-of-dependency-injection/1.webp" alt="PPT"></p>
<!-- <img data-src="/2017/09/15/those-stories-of-dependency-injection/1.webp" class="" title="PPT"> -->
<p>图1.1 需求描述ppt</p>
<p>各个开发人员，面对这份需求，展开了热烈的讨论，下面我们看看讨论会上都发生了什么。</p>
<h3 id="实习生小李的实现方式"><a href="#实习生小李的实现方式" class="headerlink" title="实习生小李的实现方式"></a>实习生小李的实现方式</h3><p>在经过一番讨论后，项目组长 Peter 觉得有必要整理一下各方的意见，他首先询问小李的看法。小李是某学校计算机系大三学生，对游戏开发特别感兴趣，目前是 IGame 公司的一名实习生。 经过短暂的思考，小李阐述了自己的意见： 「我认为，这个需求可以这么实现。HP当然是怪物的一个属性成员，而武器是角色的一个属性成员，类型可以使字符串，用于描述目前角色所装备的武器。角色类有一个攻击方法，以被攻击怪物为参数，当实施一次攻击时，攻击方法被调用，而这个方法首先判断当前角色装备了什么武器，然后据此对被攻击怪物的 <code>HP</code> 进行操作，以产生不同效果。」 而在阐述完后，小李也飞快的在自己的电脑上写了一个 Demo，来演示他的想法，Demo 代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">IGameLi</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 怪物</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">Monster</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 怪物的名字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> String Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 怪物的生命值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> Int32 HP &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Monster</span>(<span class="params">String name,Int32 hp</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Name = name;</span><br><span class="line">            <span class="keyword">this</span>.HP = hp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">IGameLi</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 角色</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">Role</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> Random _random = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 表示角色目前所持武器的字符串</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> String WeaponTag &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 攻击怪物</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;monster&quot;&gt;</span>被攻击的怪物<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Attack</span>(<span class="params">Monster monster</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (monster.HP &lt;= <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;此怪物已死&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;WoodSword&quot;</span> == <span class="keyword">this</span>.WeaponTag)</span><br><span class="line">            &#123;</span><br><span class="line">                monster.HP -= <span class="number">20</span>;</span><br><span class="line">                <span class="keyword">if</span> (monster.HP &lt;= <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;攻击成功！怪物&quot;</span> + monster.Name + <span class="string">&quot;已死亡&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;攻击成功！怪物&quot;</span> + monster.Name + <span class="string">&quot;损失20HP&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;IronSword&quot;</span> == <span class="keyword">this</span>.WeaponTag)</span><br><span class="line">            &#123;</span><br><span class="line">                monster.HP -= <span class="number">50</span>;</span><br><span class="line">                <span class="keyword">if</span> (monster.HP &lt;= <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;攻击成功！怪物&quot;</span> + monster.Name + <span class="string">&quot;已死亡&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;攻击成功！怪物&quot;</span> + monster.Name + <span class="string">&quot;损失50HP&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;MagicSword&quot;</span> == <span class="keyword">this</span>.WeaponTag)</span><br><span class="line">            &#123;</span><br><span class="line">                Int32 loss = (_random.NextDouble() &lt; <span class="number">0.5</span>) ? <span class="number">100</span> : <span class="number">200</span>;</span><br><span class="line">                monster.HP -= loss;</span><br><span class="line">                <span class="keyword">if</span> (<span class="number">200</span> == loss)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;出现暴击！！！&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (monster.HP &lt;= <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;攻击成功！怪物&quot;</span> + monster.Name + <span class="string">&quot;已死亡&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    Console.WriteLine(<span class="string">&quot;攻击成功！怪物&quot;</span> + monster.Name + <span class="string">&quot;损失&quot;</span> + loss + <span class="string">&quot;HP&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;角色手里没有武器，无法攻击！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">IGameLi</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//生成怪物</span></span><br><span class="line">            Monster monster1 = <span class="keyword">new</span> Monster(<span class="string">&quot;小怪A&quot;</span>, <span class="number">50</span>);</span><br><span class="line">            Monster monster2 = <span class="keyword">new</span> Monster(<span class="string">&quot;小怪B&quot;</span>, <span class="number">50</span>);</span><br><span class="line">            Monster monster3 = <span class="keyword">new</span> Monster(<span class="string">&quot;关主&quot;</span>, <span class="number">200</span>);</span><br><span class="line">            Monster monster4 = <span class="keyword">new</span> Monster(<span class="string">&quot;最终Boss&quot;</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//生成角色</span></span><br><span class="line">            Role role = <span class="keyword">new</span> Role();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//木剑攻击</span></span><br><span class="line">            role.WeaponTag = <span class="string">&quot;WoodSword&quot;</span>;</span><br><span class="line">            role.Attack(monster1);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//铁剑攻击</span></span><br><span class="line">            role.WeaponTag = <span class="string">&quot;IronSword&quot;</span>;</span><br><span class="line">            role.Attack(monster2);</span><br><span class="line">            role.Attack(monster3);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//魔剑攻击</span></span><br><span class="line">            role.WeaponTag = <span class="string">&quot;MagicSword&quot;</span>;</span><br><span class="line">            role.Attack(monster3);</span><br><span class="line">            role.Attack(monster4);</span><br><span class="line">            role.Attack(monster4);</span><br><span class="line">            role.Attack(monster4);</span><br><span class="line">            role.Attack(monster4);</span><br><span class="line">            role.Attack(monster4);</span><br><span class="line"></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>程序运行结果如下：</p>
<!-- ![02_3.gif](https://i.loli.net/2017/09/15/59bbae64f08ba.gif) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/those-stories-of-dependency-injection/2.webp" alt="结果023"></p>
<!-- <img data-src="/2017/09/15/those-stories-of-dependency-injection/2.webp" class="" title="结果023"> -->
<p>图1.2 小李程序的运行结果</p>
<h3 id="架构师的建议"><a href="#架构师的建议" class="headerlink" title="架构师的建议"></a>架构师的建议</h3><p>小李阐述完自己的想法并演示了 Demo 后，项目组长 Peter 首先肯定了小李的思考能力、编程能力以及初步的面向对象分析与设计的思想，并承认小李的程序正确完成了需求中的功能。但同时，Peter 也指出小李的设计存在一些问题，他请小于讲一下自己的看法。 小于是一名有五年软件架构经验的架构师，对软件架构、设计模式和面向对象思想有较深入的认识。他向 Peter 点了点头，发表了自己的看法： 「小李的思考能力是不错的，有着基本的面向对象分析设计能力，并且程序正确完成了所需要的功能。不过，这里我想从架构角度，简要说一下我认为这个设计中存在的问题。 首先，小李设计的 <code>Role</code> 类的 <code>Attack</code> 方法很长，并且方法中有一个冗长的 <code>if…else</code> 结构，且每个分支的代码的业务逻辑很相似，只是很少的地方不同。 再者，我认为这个设计比较大的一个问题是，违反了 OCP 原则。在这个设计中，如果以后我们增加一个新的武器，如倚天剑，每次攻击损失 500HP，那么，我们就要打开 <code>Role</code>，修改 <code>Attack</code> 方法。而我们的代码应该是对修改关闭的，当有新武器加入的时候，应该使用扩展完成，避免修改已有代码。 一般来说，当一个方法里面出现冗长的 <code>if…else</code> 或 <code>switch…case</code> 结构，且每个分支代码业务相似时，往往预示这里应该引入多态性来解决问题。而这里，如果把不同武器攻击看成一个策略，那么引入策略模式（ <em>Strategy Pattern</em> ）是明智的选择。 最后说一个小的问题，被攻击后，减HP、死亡判断等都是怪物的职责，这里放在 <code>Role</code> 中有些不当。」</p>
<blockquote>
<p>Tip：OCP 原则，即开放关闭原则，指设计应该对扩展开放，对修改关闭。 Tip：策略模式，英文名 <em>Strategy Pattern</em> ，指定义算法族，分别封装起来，让他们之间可以相互替换，此模式使得算法的变化独立于客户。</p>
</blockquote>
<p>小于边说，边画了一幅 UML 类图，用于直观表示他的思想：、</p>
<!-- ![03_3.jpg](https://i.loli.net/2017/09/15/59bbaf77f3db6.jpg) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/those-stories-of-dependency-injection/3.webp" alt="uml类图"></p>
<!-- <img data-src="/2017/09/15/those-stories-of-dependency-injection/3.webp" class="" title="uml类图"> -->
<p>图1.3 小于的设计</p>
<p>Peter 让小李按照小于的设计重构 Demo，小李看了看小于的设计图，很快完成。相关代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">IGameLiAdv</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">interface</span> <span class="title">IAttackStrategy</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">AttackTarget</span>(<span class="params">Monster monster</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">IGameLiAdv</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">WoodSword</span> : <span class="title">IAttackStrategy</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AttackTarget</span>(<span class="params">Monster monster</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            monster.Notify(<span class="number">20</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">IGameLiAdv</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">IronSword</span> : <span class="title">IAttackStrategy</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AttackTarget</span>(<span class="params">Monster monster</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            monster.Notify(<span class="number">50</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">IGameLiAdv</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">MagicSword</span> : <span class="title">IAttackStrategy</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> Random _random = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AttackTarget</span>(<span class="params">Monster monster</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            Int32 loss = (_random.NextDouble() &lt; <span class="number">0.5</span>) ? <span class="number">100</span> : <span class="number">200</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">200</span> == loss)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;出现暴击！！！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            monster.Notify(loss);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">IGameLiAdv</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 怪物</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">Monster</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 怪物的名字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> String Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 怪物的生命值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">private</span> Int32 HP &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Monster</span>(<span class="params">String name,Int32 hp</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Name = name;</span><br><span class="line">            <span class="keyword">this</span>.HP = hp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 怪物被攻击时，被调用的方法，用来处理被攻击后的状态更改</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;loss&quot;&gt;</span>此次攻击损失的HP<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Notify</span>(<span class="params">Int32 loss</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.HP &lt;= <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;此怪物已死&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">this</span>.HP -= loss;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.HP &lt;= <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;怪物&quot;</span> + <span class="keyword">this</span>.Name + <span class="string">&quot;被打死&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">&quot;怪物&quot;</span> + <span class="keyword">this</span>.Name + <span class="string">&quot;损失&quot;</span> + loss + <span class="string">&quot;HP&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">IGameLiAdv</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 角色</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">Role</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 表示角色目前所持武器</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> IAttackStrategy Weapon &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 攻击怪物</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name=&quot;monster&quot;&gt;</span>被攻击的怪物<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Attack</span>(<span class="params">Monster monster</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Weapon.AttackTarget(monster);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">IGameLiAdv</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//生成怪物</span></span><br><span class="line">            Monster monster1 = <span class="keyword">new</span> Monster(<span class="string">&quot;小怪A&quot;</span>, <span class="number">50</span>);</span><br><span class="line">            Monster monster2 = <span class="keyword">new</span> Monster(<span class="string">&quot;小怪B&quot;</span>, <span class="number">50</span>);</span><br><span class="line">            Monster monster3 = <span class="keyword">new</span> Monster(<span class="string">&quot;关主&quot;</span>, <span class="number">200</span>);</span><br><span class="line">            Monster monster4 = <span class="keyword">new</span> Monster(<span class="string">&quot;最终Boss&quot;</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//生成角色</span></span><br><span class="line">            Role role = <span class="keyword">new</span> Role();</span><br><span class="line"></span><br><span class="line">            <span class="comment">//木剑攻击</span></span><br><span class="line">            role.Weapon = <span class="keyword">new</span> WoodSword();</span><br><span class="line">            role.Attack(monster1);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//铁剑攻击</span></span><br><span class="line">            role.Weapon = <span class="keyword">new</span> IronSword();</span><br><span class="line">            role.Attack(monster2);</span><br><span class="line">            role.Attack(monster3);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//魔剑攻击</span></span><br><span class="line">            role.Weapon = <span class="keyword">new</span> MagicSword();</span><br><span class="line">            role.Attack(monster3);</span><br><span class="line">            role.Attack(monster4);</span><br><span class="line">            role.Attack(monster4);</span><br><span class="line">            role.Attack(monster4);</span><br><span class="line">            role.Attack(monster4);</span><br><span class="line">            role.Attack(monster4);</span><br><span class="line"></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译运行以上代码，得到的运行结果与上一版本代码基本一致。</p>
<h3 id="小李的小结"><a href="#小李的小结" class="headerlink" title="小李的小结"></a>小李的小结</h3><p>Peter 显然对改进后的代码比较满意，他让小李对照两份设计和代码，进行一个小结。小李简略思考了一下，并结合小于对一次设计指出的不足，说道： 「我认为，改进后的代码有如下优点： 第一，虽然类的数量增加了，但是每个类中方法的代码都非常短，没有了以前 <code>Attack</code> 方法那种很长的方法，也没有了冗长的 <code>if…else</code>，代码结构变得很清晰。 第二，类的职责更明确了。在第一个设计中，<code>Role</code> 不但负责攻击，还负责给怪物减少 <code>HP</code> 和判断怪物是否已死。这明显不应该是 <code>Role</code> 的职责，改进后的代码将这两个职责移入Monster内，使得职责明确，提高了类的内聚性。 第三，引入 Strategy 模式后，不但消除了重复性代码，更重要的是，使得设计符合了 OCP。如果以后要加一个新武器，只要新建一个类，实现 <code>IAttackStrategy</code> 接口，当角色需要装备这个新武器时，客户代码只要实例化一个新武器类，并赋给 <code>Role</code> 的 <code>Weapon</code> 成员就可以了，已有的 <code>Role</code> 和 <code>Monster</code> 代码都不用改动。这样就实现了对扩展开发，对修改关闭。」 Peter和小于听后都很满意，认为小李总结的非常出色。 IGame公司的讨论会还在进行着，内容是非常精彩，不过我们先听到这里，因为，接下来，我们要对其中某些问题进行一点探讨。别忘了，本文的主题可是依赖注入，这个主角还没登场呢！让主角等太久可不好。</p>
<h2 id="探究依赖注入"><a href="#探究依赖注入" class="headerlink" title="探究依赖注入"></a>探究依赖注入</h2><h3 id="故事的启迪"><a href="#故事的启迪" class="headerlink" title="故事的启迪"></a>故事的启迪</h3><p>我们现在静下心来，再回味一下刚才的故事。因为，这个故事里面隐藏着<strong>依赖注入</strong>的出现原因。我说过不只一次，想真正认清一个事物，不能只看「它是什么？什么样子？」，而应该先弄清楚「它是怎么来的？是什么样的需求和背景促使了它的诞生？它被创造出来是做什么用的？」。 回想上面的故事。刚开始，主要需求是一个打怪的功能。小李做了一个初步面向对象的设计：抽取领域场景中的实体（怪物、角色等），封装成类，并为各个类赋予属性与方法，最后通过类的交互完成打怪功能，这应该算是面向对象设计的初级阶段。 在小李的设计基础上，架构师小于指出了几点不足，如不符合 OCP，职责划分不明确等等，并根据情况引入策略模式。这是更高层次的面向对象设计。其实就核心来说，小于只做了一件事：利用多态性，隔离变化。它清楚认识到，这个打怪功能中，有些业务逻辑是不变的，如角色攻击怪物，怪物减少 HP，减到 0 怪物就会死；而变化的仅仅是不同的角色持有不同武器时，每次攻击的效用不一样。于是他的架构，本质就是把变化的部分和不变的部分隔离开，使得变化部分发生变化时，不变部分不受影响。 我们再仔细看看小于的设计图，这样设计后，有个基本的问题需要解决：现在 <code>Role</code> 不依赖具体武器，而仅仅依赖一个 <code>IAttackStrategy</code> 接口，接口是不能实例化的，虽然 <code>Role</code> 的 <code>Weapon</code> 成员类型定义为 <code>IAttackStrategy</code>，但最终还是会被赋予一个实现了 <code>IAttackStrategy</code> 接口的具体武器，并且随着程序进展，一个角色会装备不同的武器，从而产生不同的效用。赋予武器的职责，在 Demo 中是放在了测试代码里。 这里，测试代码实例化一个具体的武器，并赋给 <code>Role</code> 的 <code>Weapon</code> 成员的过程，就是<strong>依赖注入</strong>！这里要清楚，<strong>依赖注入</strong>其实是一个过程的称谓！</p>
<h3 id="正式定义依赖注入"><a href="#正式定义依赖注入" class="headerlink" title="正式定义依赖注入"></a>正式定义依赖注入</h3><p>下面，用稍微正式一点的语言，定义依赖注入产生的背景缘由和依赖注入的含义。在读的过程中，读者可以结合上面的例子进行理解。 依赖注入产生的背景： 随着面向对象分析与设计的发展，一个良好的设计，核心原则之一就是将变化隔离，使得变化部分发生变化时，不变部分不受影响（这也是 OCP 的目的）。为了做到这一点，要利用面向对象中的多态性，使用多态性后，客户类不再直接依赖服务类，而是依赖于一个抽象的接口，这样，客户类就不能在内部直接实例化具体的服务类。但是，客户类在运作中又客观需要具体的服务类提供服务，因为接口是不能实例化去提供服务的。就产生了「客户类不准实例化具体服务类」和「客户类需要具体服务类」这样一对矛盾。为了解决这个矛盾，开发人员提出了一种模式：客户类（如上例中的 <code>Role</code>）定义一个注入点（<code>Public</code> 成员 <code>Weapon</code>），用于服务类（实现 <code>IAttackStrategy</code> 的具体类，如 <code>WoodSword</code>、<code>IronSword</code> 和 <code>MagicSword</code>，也包括以后加进来的所有实现 <code>IAttackStrategy</code> 的新类）的注入，而客户类的客户类（<code>Program</code>，即测试代码）负责根据情况，实例化服务类，注入到客户类中，从而解决了这个矛盾。 依赖注入的正式定义： 依赖注入（ <em>Dependency Injection</em> ），是这样一个过程：由于某客户类只依赖于服务类的一个接口，而不依赖于具体服务类，所以客户类只定义一个注入点。在程序运行过程中，客户类不直接实例化具体服务类实例，而是客户类的运行上下文环境或专门组件负责实例化服务类，然后将其注入到客户类中，保证客户类的正常运行。</p>
<h2 id="依赖注入那些事儿"><a href="#依赖注入那些事儿" class="headerlink" title="依赖注入那些事儿"></a>依赖注入那些事儿</h2><p>上面我们从需求背景的角度，讲述了依赖注入的来源和定义。但是，如果依赖注入仅仅就只有这么点东西，那也没有什么值得讨论的了。但是，上面讨论的仅仅是依赖注入的内涵，其外延还是非常广泛的，从依赖注入衍生出了很多相关的概念与技术，下面我们讨论一下依赖注入的「那些事儿」。</p>
<h3 id="依赖注入的类别"><a href="#依赖注入的类别" class="headerlink" title="依赖注入的类别"></a>依赖注入的类别</h3><p>依赖注入有很多种方法，上面看到的例子中，只是其中的一种，下面分别讨论不同的依赖注入类型。</p>
<h4 id="Setter-注入"><a href="#Setter-注入" class="headerlink" title="Setter 注入"></a>Setter 注入</h4><p>第一种依赖注入的方式，就是 Setter 注入，上面的例子中，将武器注入 <code>Role</code> 就是 Setter 注入。正式点说： Setter 注入（ <em>Setter Injection</em> ）是指在客户类中，设置一个服务类接口类型的数据成员，并设置一个 <code>Set</code> 方法作为注入点，这个 <code>Set</code> 方法接受一个具体的服务类实例为参数，并将它赋给服务类接口类型的数据成员。</p>
<!-- ![04_6.jpg](https://i.loli.net/2017/09/15/59bbb21e689a0.jpg) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/those-stories-of-dependency-injection/4.webp" alt="img046"></p>
<!-- <img data-src="/2017/09/15/those-stories-of-dependency-injection/4.webp" class="" title="img046"> -->
<p>图3.1 Setter注入示意</p>
<p>上图展示了Setter注入的结构示意图，客户类 <code>ClientClass</code> 设置 <code>IServiceClass</code> 类型成员 <code>_serviceImpl</code>，并设置 <code>Set_ServiceImpl</code> 方法作为注入点。<code>Context</code> 会负责实例化一个具体的 <code>ServiceClass</code>，然后注入到 <code>ClientClass</code> 里。 下面给出 Setter 注入的示例代码：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SetterInjection</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">interface</span> <span class="title">IServiceClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">String <span class="title">ServiceInfo</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SetterInjection</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">ServiceClassA</span> : <span class="title">IServiceClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">ServiceInfo</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;我是ServceClassA&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SetterInjection</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">ServiceClassB</span> : <span class="title">IServiceClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">ServiceInfo</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;我是ServceClassB&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SetterInjection</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">ClientClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> IServiceClass _serviceImpl;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Set_ServiceImpl</span>(<span class="params">IServiceClass serviceImpl</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>._serviceImpl = serviceImpl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ShowInfo</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(_serviceImpl.ServiceInfo());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">SetterInjection</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            IServiceClass serviceA = <span class="keyword">new</span> ServiceClassA();</span><br><span class="line">            IServiceClass serviceB = <span class="keyword">new</span> ServiceClassB();</span><br><span class="line">            ClientClass client = <span class="keyword">new</span> ClientClass();</span><br><span class="line"></span><br><span class="line">            client.Set_ServiceImpl(serviceA);</span><br><span class="line">            client.ShowInfo();</span><br><span class="line">            client.Set_ServiceImpl(serviceB);</span><br><span class="line">            client.ShowInfo();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行结果如下：</p>
<!-- ![05_3.jpg](https://i.loli.net/2017/09/15/59bbb2c0e0be7.jpg) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/those-stories-of-dependency-injection/5.jpg" alt="结果053"></p>
<!-- <img data-src="/2017/09/15/those-stories-of-dependency-injection/5.jpg" class="" title="结果053"> -->
<p>图3.2 Setter注入运行结果</p>
<h4 id="构造注入"><a href="#构造注入" class="headerlink" title="构造注入"></a>构造注入</h4><p>另外一种依赖注入方式，是通过客户类的构造函数，向客户类注入服务类实例。 构造注入（ <em>Constructor Injection</em> ）是指在客户类中，设置一个服务类接口类型的数据成员，并以构造函数为注入点，这个构造函数接受一个具体的服务类实例为参数，并将它赋给服务类接口类型的数据成员。</p>
<!-- ![06_3.jpg](https://i.loli.net/2017/09/15/59bbb3267fef0.jpg) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/those-stories-of-dependency-injection/6.webp" alt="img063"></p>
<!-- <img data-src="/2017/09/15/those-stories-of-dependency-injection/6.webp" class="" title="img063"> -->
<p>图3.3 构造注入示意</p>
<p>图3.3是构造注入的示意图，可以看出，与 Setter 注入很类似，只是注入点由 Setter 方法变成了构造方法。这里要注意，由于构造注入只能在实例化客户类时注入一次，所以一点注入，程序运行期间是没法改变一个客户类对象内的服务类实例的。 由于构造注入和 Setter 注入的 <code>IServiceClass</code>，<code>ServiceClassA</code> 和 <code>ServiceClassB</code> 是一样的，所以这里给出另外 <code>ClientClass</code> 类的示例代码：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ConstructorInjection</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">class</span> <span class="title">ClientClass</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> IServiceClass _serviceImpl;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">ClientClass</span>(<span class="params">IServiceClass serviceImpl</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>._serviceImpl = serviceImpl;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ShowInfo</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(_serviceImpl.ServiceInfo());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以看到，唯一的变化就是构造函数取代了 <code>Set_ServiceImpl</code> 方法，成为了注入点。</p>
<h4 id="依赖获取"><a href="#依赖获取" class="headerlink" title="依赖获取"></a>依赖获取</h4><p>上面提到的注入方式，都是客户类被动接受所依赖的服务类，这也符合「注入」这个词。不过还有一种方法，可以和依赖注入达到相同的目的，就是依赖获取。 依赖获取（ <em>Dependency Locate</em> ）是指在系统中提供一个获取点，客户类仍然依赖服务类的接口。当客户类需要服务类时，从获取点主动取得指定的服务类，具体的服务类类型由获取点的配置决定。 可以看到，这种方法变被动为主动，使得客户类在需要时主动获取服务类，而将多态性的实现封装到获取点里面。获取点可以有很多种实现，也许最容易想到的就是建立一个Simple Factory作为获取点，客户类传入一个指定字符串，以获取相应服务类实例。如果所依赖的服务类是一系列类，那么依赖获取一般利用 Abstract Factory 模式构建获取点，然后，将服务类多态性转移到工厂的多态性上，而工厂的类型依赖一个外部配置，如XML文件。 不过，不论使用 Simple Factory 还是 Abstract Factory，都避免不了判断服务类类型或工厂类型，这样系统中总要有一个地方存在不符合 OCP 的 <code>if…else</code> 或 <code>switch…case</code> 结构，这种缺陷是 Simple Factory 和 Abstract Factory 以及依赖获取本身无法消除的，而在某些支持反射的语言中（如 C#），通过将反射机制的引入彻底解决了这个问题（后面讨论）。 下面给一个具体的例子，现在我们假设有个程序，既可以使用 Windows 风格外观，又可以使用 Mac 风格外观，而内部业务是一样的。</p>
<!-- ![07_3.jpg](https://i.loli.net/2017/09/15/59bbb3d9a6b9f.jpg) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/those-stories-of-dependency-injection/7.webp" alt="img073"></p>
<!-- <img data-src="/2017/09/15/those-stories-of-dependency-injection/7.webp" class="" title="img073"> -->
<p>图3.4 依赖获取示意</p>
<p>上图乍看有点复杂，不过如果读者熟悉 Abstract Factory 模式，应该能很容易看懂，这就是 Abstract Factory 在实际中的一个应用。这里的 Factory Container 作为获取点，是一个静态类，它的「<strong>Type 构造函数</strong>」依据外部的XML配置文件，决定实例化哪个工厂。下面还是来看示例代码。由于不同组件的代码是相似的，这里只给出 Button 组件的示例代码，完整代码请参考文末附上的完整源程序。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DependencyLocate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">interface</span> <span class="title">IButton</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">String <span class="title">ShowInfo</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DependencyLocate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">WindowsButton</span> : <span class="title">IButton</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> String Description &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">WindowsButton</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Description = <span class="string">&quot;Windows风格按钮&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">ShowInfo</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.Description;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DependencyLocate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">MacButton</span> : <span class="title">IButton</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> String Description &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MacButton</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">this</span>.Description = <span class="string">&quot; Mac风格按钮&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">ShowInfo</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.Description;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DependencyLocate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">interface</span> <span class="title">IFactory</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">IWindow <span class="title">MakeWindow</span>()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function">IButton <span class="title">MakeButton</span>()</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function">ITextBox <span class="title">MakeTextBox</span>()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DependencyLocate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">WindowsFactory</span> : <span class="title">IFactory</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IWindow <span class="title">MakeWindow</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> WindowsWindow();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> IButton <span class="title">MakeButton</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> WindowsButton();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ITextBox <span class="title">MakeTextBox</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> WindowsTextBox();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DependencyLocate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="title">MacFactory</span> : <span class="title">IFactory</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> IWindow <span class="title">MakeWindow</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MacWindow();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> IButton <span class="title">MakeButton</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MacButton();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ITextBox <span class="title">MakeTextBox</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> MacTextBox();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Xml;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DependencyLocate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">FactoryContainer</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> IFactory factory &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="title">FactoryContainer</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDoc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line">            xmlDoc.Load(<span class="string">&quot;http://www.cnblogs.com/Config.xml&quot;</span>);</span><br><span class="line">            XmlNode xmlNode = xmlDoc.ChildNodes[<span class="number">1</span>].ChildNodes[<span class="number">0</span>].ChildNodes[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;Windows&quot;</span> == xmlNode.Value)</span><br><span class="line">            &#123;</span><br><span class="line">                factory = <span class="keyword">new</span> WindowsFactory();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;Mac&quot;</span> == xmlNode.Value)</span><br><span class="line">            &#123;</span><br><span class="line">                factory = <span class="keyword">new</span> MacFactory();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">&quot;Factory Init Error&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DependencyLocate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="built_in">string</span>[] <span class="keyword">args</span></span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            IFactory factory = FactoryContainer.factory;</span><br><span class="line">            IWindow window = factory.MakeWindow();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;创建 &quot;</span> + window.ShowInfo());</span><br><span class="line">            IButton button = factory.MakeButton();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;创建 &quot;</span> + button.ShowInfo());</span><br><span class="line">            ITextBox textBox = factory.MakeTextBox();</span><br><span class="line">            Console.WriteLine(<span class="string">&quot;创建 &quot;</span> + textBox.ShowInfo());</span><br><span class="line"></span><br><span class="line">            Console.ReadLine();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里我们用XML作为配置文件。配置文件 <code>Config.xml</code> 如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">factory</span>&gt;</span>Mac<span class="tag">&lt;/<span class="name">factory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>可以看到，这里我们将配置设置为 Mac 风格，编译运行上述代码，运行结果如下：</p>
<!-- ![08_3.jpg](https://i.loli.net/2017/09/15/59bbb4ede424d.jpg) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/those-stories-of-dependency-injection/8.jpg" alt="结果083"></p>
<!-- <img data-src="/2017/09/15/those-stories-of-dependency-injection/8.jpg" class="" title="结果083"> -->
<p>图3.5 配置Mac风格后的运行结果</p>
<p>现在，我们不动程序，仅仅将配置文件中的「Mac」改为 Windows，运行后结果如下：</p>
<!-- ![09_3.jpg](https://i.loli.net/2017/09/15/59bbb4d5af22b.jpg) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/those-stories-of-dependency-injection/9.jpg" alt="结果093"></p>
<!-- <img data-src="/2017/09/15/those-stories-of-dependency-injection/9.jpg" class="" title="结果093"> -->
<p>图3.6 配置为Windows风格后的运行结果</p>
<p>从运行结果看出，我们仅仅通过修改配置文件，就改变了整个程序的行为（我们甚至没有重新编译程序），这就是多态性的威力，也是依赖注入效果。 本节共讨论了三种基本的依赖注入类别，有关更多依赖注入类别和不同类别对比的知识，可以参考 Martin Fowler 的《<a href="https://www.martinfowler.com/articles/injection.html"><em>Inversion of Control Containers and the Dependency Injection pattern</em></a>》。</p>
<h3 id="反射与依赖注入"><a href="#反射与依赖注入" class="headerlink" title="反射与依赖注入"></a>反射与依赖注入</h3><p>回想上面 <em>Dependency Locate</em> 的例子，我们虽然使用了多态性和 <em>Abstract Factory</em> ，但对 OCP 贯彻的不够彻底。在理解这点前，朋友们一定要注意潜在扩展在哪里，潜在会出现扩展的地方是「新的组件系列」而不是「组件种类」，也就是说，这里我们假设组件就三种，不会增加新的组件，但可能出现新的外观系列，如需要加一套 <em>Ubuntu</em> 风格的组件，我们可以新增 <em>UbuntuWindow</em> 、 <em>UbuntuButton</em> 、 <em>UbuntuTextBox</em> 和 <em>UbuntuFactory</em> ，并分别实现相应接口，这是符合 OCP 的，因为这是扩展。但我们除了修改配置文件，还要无可避免的修改 <em>FactoryContainer</em> ，需要加一个分支条件，这个地方破坏了 OCP。依赖注入本身是没有能力解决这个问题的，但如果语言支持反射机制（ <em>Reflection</em> ），则这个问题就迎刃而解。 我们想想，现在的难点是出在这里：对象最终还是要通过「new」来实例化，而「<code>new</code>」只能实例化当前已有的类，如果未来有新类添加进来，必须修改代码。如果，我们能有一种方法，不是通过「<code>new</code>」，而是通过类的名字来实例化对象，那么我们只要将类的名字作为配置项，就可以实现在不修改代码的情况下，加载未来才出现的类。所以，反射给了语言「预见未来」的能力，使得多态性和依赖注入的威力大增。 下面是引入反射机制后，对上面例子的改进：</p>
<!-- ![10_3.jpg](https://i.loli.net/2017/09/15/59bbb60a2b744.jpg) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/those-stories-of-dependency-injection/10.webp" alt="img103"></p>
<!-- <img data-src="/2017/09/15/those-stories-of-dependency-injection/10.webp" class="" title="img103"> -->
<p>图3.7 引入反射机制的Dependency Locate</p>
<p>可以看出，引入反射机制后，结构简单了很多，一个反射工厂代替了以前的一堆工厂，<code>Factory Container</code> 也不需要了。而且以后有新组件系列加入时，反射工厂是不用改变的，只需改变配置文件就可以完成。下面给出反射工厂和配置文件的代码。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Reflection;</span><br><span class="line"><span class="keyword">using</span> System.Xml;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">DependencyLocate</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">internal</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">ReflectionFactory</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> String _windowType;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> String _buttonType;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> String _textBoxType;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="title">ReflectionFactory</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            XmlDocument xmlDoc = <span class="keyword">new</span> XmlDocument();</span><br><span class="line">            xmlDoc.Load(<span class="string">&quot;http://www.cnblogs.com/Config.xml&quot;</span>);</span><br><span class="line">            XmlNode xmlNode = xmlDoc.ChildNodes[<span class="number">1</span>].ChildNodes[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">            _windowType = xmlNode.ChildNodes[<span class="number">0</span>].Value;</span><br><span class="line">            _buttonType = xmlNode.ChildNodes[<span class="number">1</span>].Value;</span><br><span class="line">            _textBoxType = xmlNode.ChildNodes[<span class="number">2</span>].Value;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IWindow <span class="title">MakeWindow</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> Assembly.Load(<span class="string">&quot;DependencyLocate&quot;</span>).CreateInstance(<span class="string">&quot;DependencyLocate.&quot;</span> + _windowType) <span class="keyword">as</span> IWindow;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> IButton <span class="title">MakeButton</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> Assembly.Load(<span class="string">&quot;DependencyLocate&quot;</span>).CreateInstance(<span class="string">&quot;DependencyLocate.&quot;</span> + _buttonType) <span class="keyword">as</span> IButton;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ITextBox <span class="title">MakeTextBox</span>()</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> Assembly.Load(<span class="string">&quot;DependencyLocate&quot;</span>).CreateInstance(<span class="string">&quot;DependencyLocate.&quot;</span> + _textBoxType) <span class="keyword">as</span> ITextBox;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>配置文件如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">window</span>&gt;</span>MacWindow<span class="tag">&lt;/<span class="name">window</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>MacButton<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textBox</span>&gt;</span>MacTextBox<span class="tag">&lt;/<span class="name">textBox</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">config</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>反射不仅可以与 <em>Dependency Locate</em> 结合，也可以与 <em>Setter Injection</em> 与 <em>Construtor Injection</em> 结合。反射机制的引入，降低了依赖注入结构的复杂度，使得依赖注入彻底符合 OCP，并为通用依赖注入框架（如 Spring.NET 中的 IoC 部分、Unity 等）的设计提供了可能性。</p>
<h3 id="多态的活性与依赖注入"><a href="#多态的活性与依赖注入" class="headerlink" title="多态的活性与依赖注入"></a>多态的活性与依赖注入</h3><h4 id="多态性的活性"><a href="#多态性的活性" class="headerlink" title="多态性的活性"></a>多态性的活性</h4><p>这一节我们讨论多态的活性及其与依赖注入类型选择间密切的关系。 首先说明，「多态的活性」这个术语是我个人定义的，因为我没有找到既有的概念名词可以表达我的意思，所以就自己造了一个词。这里，某多态的活性是指被此多态隔离的变化所发生变化的频繁程度，频繁程度越高，则活性越强，反之亦然。 上文说过，多态性可以隔离变化，但是，不同的变化，发生的频率是不一样的，这就使得多态的活性有所差别，这种差别影响了依赖注入的类型选择。 举例来说，本文最开始提到的武器多态性，其活性非常高，因为在那个程序中，<em>Role</em> 在一次运行中可能更换多次武器。而现在我们假设 <em>Role</em> 也实现了多态性，这是很可能的，因为在游戏中，不同类型的角色（如暗夜精 灵、牛头人、矮人等）很多属性和业务是想通的，所以很可能通过一个 <em>IRole</em> 或 <em>AbstractRole</em> 抽象类实现多态性，不过，<em>Role</em> 在实例化后（一般在用户登录成功后），是不会变化的，很少有游戏允许同一个玩家在运行中变换 <em>Role</em> 类型，所以 <em>Role</em> 应该是一但实例化，就不会变化，但如果再实例化一个（如另一个玩家登录），则可能就变化了。最后，还有一种多态性是活性非常低的，如我们熟悉的数据访问层多态性，即使我们实现了 SQL Server、Oracle 和 Access 等多种数据库的访问层，并实现了依赖注入，但几乎遇不到程序运行着就改数据库或短期内数据库频繁变动的情况。 以上不同的多态性，不但特征不同，其目的一般也不同，总结如下： 高活多态性——指在客户类实例运行期间，服务类可能会改变的多态性。 中活多态性——指在客户类实例化后，服务类不会改变，但同一时间内存在的不同实例可能拥有不同类型的服务类。 低活多态性——指在客户类实例化后，服务类不会改变，且同一时间内所有客户类都拥有相同类型的服务类。 以上三种多态性，比较好的例子就是上文提到的武器多态性（高活）、角色多态性（中活）和数据访问层多态性（低活）。另外，我们说一种多态性是空间稳定的，如果同一客户类在同一时间内的所有实例都依赖相同类型的服务类，反之则叫做空间不稳定多态性。我们说一种多态性是时间稳定的，如果一个客户类在实例化后，所以来的服务类不能再次更改，反之则叫做时间不稳定多态性。显然，高活多态性时间和空间均不稳定；中活多态性是时间稳定的，但空间不稳定；低活多态性时间空间均稳定。</p>
<h4 id="不同活性多态的依赖注入选择"><a href="#不同活性多态的依赖注入选择" class="headerlink" title="不同活性多态的依赖注入选择"></a>不同活性多态的依赖注入选择</h4><p>一般来说，高活多态性适合使用 Setter 注入。因为 Setter 注入最灵活，也是唯一允许在同一客户类实例运行期间更改服务类的注入方式。并且这种注入一般由上下文环境通过 Setter 的参数指定服务类类型，方便灵活，适合频繁变化的高活多态性。 对于中活多态性，则适合使用 Constructor 注入。因为 Constructor 注入也是由上下文环境通过 Construtor 的参数指定服务类类型，但一点客户类实例化后，就不能进行再次注入，保证了其时间稳定性。 而对于低活多态性，则适合使用 <em>Dependency Locate</em> 并配合文件配置进行依赖注入，或 Setter、Constructor 配合配置文件注入，因为依赖源来自文件，如果要更改服务类，则需要更改配置文件，一则确保了低活多态性的时间和空间稳定性，二是更改配置文件的方式方便于大规模服务类替换。（因为低活多态性一旦改变行为，往往规模很大，如替换整个数据访问层，如果使用 Setter 和 Construtor 传参，程序中需要改变的地方不计其数） 本质上，这种选择是因为不同的依赖注入类型有着不同的稳定性，大家可以细细体会「活性」、「稳定性」和「依赖注入类型」之间密切的关系。</p>
<h2 id="IoC-Container"><a href="#IoC-Container" class="headerlink" title="IoC Container"></a>IoC Container</h2><h3 id="IoC-Container-出现的必然性"><a href="#IoC-Container-出现的必然性" class="headerlink" title="IoC Container 出现的必然性"></a>IoC Container 出现的必然性</h3><p>上面讨论了诸多依赖注入的话题。说道依赖注入，就不能不说 <em>IoC Container</em> （IoC 容器），那么到底什么是 <em>IoC</em> 容器？我们还是先来看看它的出现背景。 我们知道，软件开发领域有句著名的论断：不要重复发明轮子！因为软件开发讲求复用，所以，对于应用频繁的需求，总是有人设计各种通用框架和类库以减轻人们的开发负担。例如，数据持久化是非常频繁的需求，于是各种 <em>ORM</em> 框架应运而生；再如，对 <em>MVC</em> 的需求催生了 <em>Struts</em> 等一批用来实现 <em>MVC</em> 的框架。 随着面向对象分析与设计的发展和成熟，<em>OOA&amp;D</em> 被越来越广泛应用于各种项目中，然而，我们知道，用 <em>OO</em> 就不可能不用多态性，用多态性就不可能不用依赖注入，所以，依赖注入变成了非常频繁的需求，而如果全部手工完成，不但负担太重，而且还容易出错。再加上反射机制的发明，于是，自然有人开始设计开发各种用于依赖注入的专用框架。这些专门用于实现依赖注入功能的组件或框架，就是 <em>IoC Container</em> 。 从这点看，<em>IoC Container</em> 的出现有其历史必然性。目前，最著名的 <em>IoC</em> 也许就是 <em>Java</em> 平台上的 <em>Spring</em> 框架的 <em>IoC</em> 组件，而 <em>.NET</em> 平台上也有 <em>Spring.NET</em> 和 <em>Unity</em> 等。</p>
<h3 id="IoC-Container-的分类"><a href="#IoC-Container-的分类" class="headerlink" title="IoC Container 的分类"></a>IoC Container 的分类</h3><p>前面曾经讨论了三种依赖注入方式，但是，想通过方式对 <em>IoC Container</em> 进行分类很困难，因为现在 <em>IoC Container</em> 都设计很完善，几乎支持所有依赖注入方式。不过，根据不同框架的特性和惯用法，还是可以讲 <em>IoC Container</em> 分为两个大类。</p>
<h4 id="重量级-IoC-Container"><a href="#重量级-IoC-Container" class="headerlink" title="重量级 IoC Container"></a>重量级 IoC Container</h4><p>所谓重量级 <em>IoC Container</em> ，是指一般用外部配置文件（一般是 <em>XML</em> ）作为依赖源，并托管整个系统各个类的实例化的 <em>IoC Container</em> 。这种 <em>IoC Container</em> ，一般是承接了整个系统几乎所有多态性的依赖注入工作，并承接了所有服务类的实例化工作，而且这些实例化依赖于一个外部配置文件，这种 <em>IoC Container</em> ，很像通过一个文件，定义整个系统多态结构，视野宏大，想要很好驾驭这种 <em>IoC Container</em> ，需要一定的架构设计能力和丰富的实践经验。 <em>Spring</em> 和 <em>Spring.NET</em> 是重量级 <em>IoC Container</em> 的例子。一般来说，这种 <em>IoC Container</em> 稳定性有余而活性不足，适合进行低活多态性的依赖注入。</p>
<h4 id="轻量级-IoC-Container"><a href="#轻量级-IoC-Container" class="headerlink" title="轻量级 IoC Container"></a>轻量级 IoC Container</h4><p>还有一种 <em>IoC Container</em> ，一般不依赖外部配置文件，而主要使用传参的 Setter 或 Construtor 注入，这种IoC Container叫做轻量级 <em>IoC Container</em> 。这种框架很灵活，使用方便，但往往不稳定，而且依赖点都是程序中的字符串参数，所以，不适合需要大规模替换和相对稳定的低活多态性，而对于高活多态性，有很好的效果。 <em>Unity</em> 是一个典型的轻量级 <em>IoC Container</em> 。</p>
<h3 id="NET平台上典型-IoC-Container-推介"><a href="#NET平台上典型-IoC-Container-推介" class="headerlink" title=".NET平台上典型 IoC Container 推介"></a>.NET平台上典型 IoC Container 推介</h3><h4 id="Spring-NET"><a href="#Spring-NET" class="headerlink" title="Spring.NET"></a>Spring.NET</h4><!-- ![11_3.png](https://i.loli.net/2017/09/15/59bbb86a93913.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/those-stories-of-dependency-injection/11.png" alt="img113"></p>
<!-- <img data-src="/2017/09/15/those-stories-of-dependency-injection/11.png" class="" title="img113"> -->
<p><em>Spring.NET</em> 是 <em>Java</em> 平台上 <em>Spring</em> 对 <em>.NET</em> 平台的移植，使用方法和 <em>Spring</em> 很像，并且功能强大，是 <em>.NET</em> 平台上大中型开发 <em>IoC Container</em> 的首选之一。除了 <em>DI</em> 外，<em>Spring.NET</em> 也包括 <em>AOP</em> 等诸多功能。 <em>Spring.NET</em> 的官方网站是：<a href="http://www.springframework.net/">http://www.springframework.net/</a></p>
<h4 id="Unity"><a href="#Unity" class="headerlink" title="Unity"></a>Unity</h4><!-- ![12_3.gif](https://i.loli.net/2017/09/15/59bbb8f4a6954.gif) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/those-stories-of-dependency-injection/12.webp" alt="img123"></p>
<!-- <img data-src="/2017/09/15/those-stories-of-dependency-injection/12.webp" class="" title="img123"> -->
<p>对于小型项目和讲求敏捷的团队，<em>Spring.NET</em> 可能有点太重量级，那么可以选择轻量级的 <em>Unity</em> 。<em>Unity</em> 是微软 <em>patterns &amp; practices</em> 团队推出的轻量级框架，非常好用，目前最新版本是 1.2。</p>
<p><em>Unity</em> 的官方网站是：<a href="http://unity.codeplex.com/">http://unity.codeplex.com/</a></p>
<h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><ol>
<li><p><a href="http://www.codeproject.com/KB/aspnet/IOCDI.aspx">Shivprasad koirala, Design pattern – Inversion of control and Dependency injection</a></p>
</li>
<li><p><a href="http://www.martinfowler.com/articles/injection.html">Martin Fowler, Inversion of Control Containers and the Dependency Injection pattern</a></p>
</li>
<li><p><a href="http://docs.codehaus.org/display/PICO/IoC+Types">Paul, IoC Types</a></p>
</li>
<li><p>Eric Freeman, Elisabeth Freeman. Head First Design Patterns. O’Reilly Media, 2004. ISBN 0596007142</p>
</li>
<li><p>Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides. Design Patterns: Elements of Reusable Object-Oriented Software. Addison-Wesley, 1995. ISBN 0201633612</p>
</li>
<li><p>Patrick Smacchia 著，施凡等 译，C#和.NET2.0 平台、语言与框架。2008.1，人民邮电出版</p>
</li>
<li><p>Jeffrey Rechter 著，CLR via C#（影印版）。2008.8，人民邮电出版</p>
</li>
</ol>
]]></content>
      <categories>
        <category>C#</category>
        <category>转载</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>依赖注入</tag>
        <tag>转载</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 raspberry 配合 frp 来进行远程开机</title>
    <url>/2018/07/19/use-raspberry-with-frp-for-remote-boot/</url>
    <content><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>一直有在外操作家里电脑的需求，远程控制这一步好解决，一般是通过 <em>TeamViewer</em> 来进行。但是前提之一是需要家中电脑时刻处于开机状态，但是由于电脑是台式即使待机也比平常笔记本的功率要高不少（可以看一下半个月的电费），而且如果 24 小时开机的话，散热器风扇一直处于运行状态，会使机箱的灰尘增多，这样的话清灰频率又要大大增加了。</p>
<span id="more"></span>
<!-- ![5.png](https://i.loli.net/2018/07/19/5b507b12be317.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/use-raspberry-with-frp-for-remote-boot/电费.webp" alt="电费"></p>
<!-- <img data-src="/2018/07/19/use-raspberry-with-frp-for-remote-boot/%E7%94%B5%E8%B4%B9.webp" class="" title="电费"> -->
<p>所以需要一种可以远程开机的办法。</p>
<h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>之前的方法是使用即时通讯软件让家中的室友帮忙开机，但是也只限于家中有室友的情况，如果室友去上班了，那就没办法了。 也想过训练猫来帮助我开机，但是奈何这猫实在太蠢，朽木不可雕也。而且就算是训练成功了，那当我需要开机时，我该怎么通知到猫呢？这也是一个问题。 在试验过各种方法后，最后我使用了树莓派（raspberry）结合 frp 的方式来完成我的需求。</p>
<h2 id="事先准备"><a href="#事先准备" class="headerlink" title="事先准备"></a>事先准备</h2><p>需要用到的设备有：</p>
<ol>
<li><p>用来进行远程开机以及远程控制的设备一台；</p>
</li>
<li><p>具有 <strong>IP/MAC绑定</strong> 功能的路由器一台；</p>
</li>
<li><p>树莓派一台；</p>
</li>
<li><p>支持 WOL 的 PC 一台；</p>
</li>
<li><p>带有公网 IP 的服务器一台。</p>
</li>
</ol>
<h2 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h2><h3 id="局域网设备配置"><a href="#局域网设备配置" class="headerlink" title="局域网设备配置"></a>局域网设备配置</h3><p>首先是家中局域网的配置，PC 和 树莓派要位于同一局域网，然后在路由器中把两者的 MAC 和 IP 进行绑定。这里需要注意的是 MAC 不是代表一台设备而是一个网卡，所以在设置树莓派的 MAC 地址的时候需要根据当前树莓派连接路由器的方式来设置。我使用的路由器可以直接查看设备的 MAC 地址。如下：</p>
<!-- ![Routerlist.png](https://i.loli.net/2018/07/19/5b507b1a3f9aa.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/use-raspberry-with-frp-for-remote-boot/Routerlist.webp" alt="Routerlist"></p>
<!-- <img data-src="/2018/07/19/use-raspberry-with-frp-for-remote-boot/Routerlist.webp" class="" title="Routerlist"> -->
<p>如果路由器无法查看 MAC 地址或者设备太多无法区分，那么在 <strong>Windows</strong> 系统下可以使用</p>
<figure class="highlight bat"><table><tr><td class="code"><pre><span class="line"><span class="built_in">ipconfig</span> -all</span><br></pre></td></tr></table></figure>
<p>来查看</p>
<!-- ![MACWindows.png](https://i.loli.net/2018/07/19/5b507b1a4128f.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/use-raspberry-with-frp-for-remote-boot/MACWindows.webp" alt="MACWindows"></p>
<!-- <img data-src="/2018/07/19/use-raspberry-with-frp-for-remote-boot/MACWindows.webp" class="" title="MACWindows"> -->
<p>在 <strong>raspberry</strong> 下可以使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure>
<p>来查看</p>
<!-- ![MACraspberry.png](https://i.loli.net/2018/07/19/5b507b1a4292a.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/use-raspberry-with-frp-for-remote-boot/MACraspberry.webp" alt="MACraspberry"></p>
<!--  -->
<p>可以看到树莓派有两个 MAC 地址，由于我是使用无线连接所以我选择的是第二个 <em>wlan0</em>。 然后使用 <strong>IP/MAC绑定</strong> 功能将两台设备与 IP 进行绑定，绑定的时候建议就选择当前使用的 IP 以免用了其他设备正在使用的 IP，造成 IP 冲突。 如果绑定了其他的 IP，请在绑定成功后重启设备。</p>
<h3 id="PC-WOL-配置"><a href="#PC-WOL-配置" class="headerlink" title="PC WOL 配置"></a>PC WOL 配置</h3><p>然后是要配置 PC 使其可以支持 WOL（wake-on-LAN）开机。WOL 是一种电源管理功能，中文译为 <strong>网络唤醒</strong>，以下是 Wiki 对其作出的解释：</p>
<blockquote>
<p>Wake-on-LAN 简称 WOL 或 WoL，中文多译为「网络唤醒」、「远程唤醒」技术。WOL是一种技术，同时也是该技术的规范标准，它的功效在于让已经进入休眠状态或关机状态的电脑，透过局域网（多半为以太网）的另一端对其发令，使其从休眠状态唤醒、恢复成运作状态，或从关机状态转成引导状态。此外，与WOL相关的技术也包括远程下令关机、远程下令重启等相关的遥控机制。</p>
</blockquote>
<p>它的具体方法就是向要启动的设备发送一个魔法数据包（Magic Packet）：</p>
<blockquote>
<p>魔法数据包（Magic Packet）是一个广播性的帧（frame），透过端口7或端口9进行发送，且可以用无连接（Connectionless protocol）的通信协议（如UDP、IPX）来传递，不过一般而言多是用UDP，原因是Novell公司的Netware网络操作系统的IPX协议已经愈来愈少机会被使用。 在魔法数据包内，每次都会先有连续6个”FF”（十六进制，换算成二进制即：11111111）的数据，即：FF FF FF FF FF FF，在连续6个”FF”后则开始带出MAC地址信息，有时还会带出4字节或6字节的密码，一旦经由网卡侦测、解读、研判（广播）魔法数据包的内容，内容中的MAC地址、密码若与电脑自身的地址、密码吻合，就会启动唤醒、引导的程序。</p>
</blockquote>
<p>所以我们要先设置 BIOS 打开「<strong>网卡唤醒</strong>」这一功能，由于各个品牌主板的 BIOS 各不相同，所以设置的方法也各式各样，大家可以自行搜索「<strong>wake on lan 设置</strong>」，来寻找正确的方式。不过大多是在 <strong>电源管理</strong>（Power Management Setup）中。 然后是系统上的设置，这里我以 <em>Windows 10 17134.165</em> 版本为例。 首先右键「<strong>网络</strong>」-「<strong>属性</strong>」来打开「<strong>网络和共享中心</strong>」面板：</p>
<!-- ![4.png](https://i.loli.net/2018/07/19/5b507b129fdee.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/use-raspberry-with-frp-for-remote-boot/4.webp" alt="网络和共享中心"></p>
<!-- <img data-src="/2018/07/19/use-raspberry-with-frp-for-remote-boot/4.webp" class="" title="网络和共享中心"> -->
<p>在左侧单击「<strong>更改适配器设置</strong>」-右键你现在正在使用的网卡-「<strong>属性</strong>」来打开「<strong>属性</strong>」面板：</p>
<!-- ![1.png](https://i.loli.net/2018/07/19/5b507b12983ac.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/use-raspberry-with-frp-for-remote-boot/1.png" alt="更改适配器设置"></p>
<!-- <img data-src="/2018/07/19/use-raspberry-with-frp-for-remote-boot/1.png" class="" title="更改适配器设置"> -->
<p>单击上方的「<strong>配置</strong>」-选择「<strong>高级</strong>」选项卡-在属性类别中将「<strong>关机 网络唤醒</strong>」和「<strong>魔术封包唤醒</strong>」的值设置为「<strong>开启</strong>」：</p>
<!-- ![3.png](https://i.loli.net/2018/07/19/5b507b129f1e7.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/use-raspberry-with-frp-for-remote-boot/3.webp" alt="高级"></p>
<!-- <img data-src="/2018/07/19/use-raspberry-with-frp-for-remote-boot/3.webp" class="" title="高级"> -->
<p>选择「<strong>电源管理</strong>」选项卡-勾选「<strong>允许计算机关闭此设备以节约电源</strong>」和「<strong>允许此设备唤醒计算机</strong>」选项：</p>
<!-- ![2.png](https://i.loli.net/2018/07/19/5b507b1298186.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/use-raspberry-with-frp-for-remote-boot/2.webp" alt="电源管理"></p>
<!-- <img data-src="/2018/07/19/use-raspberry-with-frp-for-remote-boot/2.webp" class="" title="电源管理"> -->
<p>就此，PC 端的设置已经完成了。</p>
<h3 id="带公网-IP-的服务器配置"><a href="#带公网-IP-的服务器配置" class="headerlink" title="带公网 IP 的服务器配置"></a>带公网 IP 的服务器配置</h3><p>带公网 IP 的服务器，大家可以去阿里云或者腾讯云买一台最低配的就可以了，我的这台是之前在腾讯云薅羊毛薅的。 这个服务器的作用主要是运行 <em>frp</em> 的服务端来使局域网内的树莓派可以内网穿透。 <em>frp</em> 是一个免费的开源的内网穿透软件，而且部署简单方便。具体方式如下：</p>
<p>我们可以在 <a href="https://github.com/fatedier/frp/releases">https://github.com/fatedier/frp/releases</a> 下载指定架构下的版本，我在腾讯云服务器上使用的 <em>Ubuntu</em> 系统，所以选择的是 <code>frp_0.20.0_linux_amd64.tar.gz</code> 这个版本。可以下载下来使用 <em>FTP</em> 来放到服务器上，也可以在服务器上使用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.20.0/frp_0.20.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure>
<p>来直接下载到服务器上。</p>
<h4 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h4><p>下载完成后使用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf frp_0.20.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure>
<p>解压文件。</p>
<h4 id="进入目录"><a href="#进入目录" class="headerlink" title="进入目录"></a>进入目录</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd frp_2.20.0_linux_amd64</span><br></pre></td></tr></table></figure>
<h4 id="通过-rm-命令来删除-frpc-和-frpc-ini-两个文件"><a href="#通过-rm-命令来删除-frpc-和-frpc-ini-两个文件" class="headerlink" title="通过 rm 命令来删除 frpc 和 frpc.ini 两个文件"></a>通过 <code>rm</code> 命令来删除 <code>frpc</code> 和 <code>frpc.ini</code> 两个文件</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm frpc frpc.ini</span><br></pre></td></tr></table></figure>
<h4 id="打开配置文件-frps-ini"><a href="#打开配置文件-frps-ini" class="headerlink" title="打开配置文件 frps.ini"></a>打开配置文件 <code>frps.ini</code></h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim frps.ini</span><br></pre></td></tr></table></figure>
<h4 id="更改服务端配置"><a href="#更改服务端配置" class="headerlink" title="更改服务端配置"></a>更改服务端配置</h4><p>更改配置如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span>           <span class="comment">#与客户端绑定的进行通信的端口</span></span><br><span class="line"><span class="attr">vhost_http_port</span> = <span class="number">6081</span>     <span class="comment">#访问客户端web服务自定义的端口号</span></span><br></pre></td></tr></table></figure>
<p>注：</p>
<ol>
<li><p>「#」 后面的是注释，可以不写；</p>
</li>
<li><p>这边 <em>Vim</em> 的用法可以上搜索引擎查一下，这里不多赘述。</p>
</li>
</ol>
<h4 id="启动服务端服务"><a href="#启动服务端服务" class="headerlink" title="启动服务端服务"></a>启动服务端服务</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure>
<p>这个是前台启动服务，会输出日志信息，是用来调试的用的，到时调试成功了就可以使用后台服务启动：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nohup ./frps -c ./frps.ini &amp;</span><br></pre></td></tr></table></figure>
<p>至此，服务器也设置完成。</p>
<h3 id="树莓派配置"><a href="#树莓派配置" class="headerlink" title="树莓派配置"></a>树莓派配置</h3><p>我现在使用的是 <em>Raspberry 3B</em>，当时是在淘宝 <em>￥195</em> 的价格买的，如果配上电源以及 <em>SD</em> 卡的等配件一共是 <em>￥278.9</em>。清单如下：</p>
<!-- ![list.png](https://i.loli.net/2018/07/19/5b507b12b3fed.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/use-raspberry-with-frp-for-remote-boot/list.webp" alt="list"></p>
<!-- <img data-src="/2018/07/19/use-raspberry-with-frp-for-remote-boot/list.webp" class="" title="list"> -->
<p>之后的系统安装我就不在这详细说明了，网上有很多详细的教程。 树莓派的配置和服务器配置其实是差不多的，不同的是服务器上的部署的是 <em>frp</em> 的服务端，而树莓派上的部署的是客户端。 从下载到解压的步骤和服务器端是一模一样的，只要照着之前的步骤做就可以了。 从第三步删除文件开始有所不同：</p>
<h4 id="删除不必要的文件"><a href="#删除不必要的文件" class="headerlink" title="删除不必要的文件"></a>删除不必要的文件</h4><p>在服务器上我们删除的是 <code>frpc</code> 和 <code>frpc.ini</code>，这两个是 <em>frp</em> 的客户端程序和客户端配置文件，同理我们在树莓派也就是服务器端上就要删除 <code>frps</code> 和 <code>frps.ini</code> 这两个文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">rm frps frps.ini</span><br></pre></td></tr></table></figure>
<h4 id="打开配置文件-frpc-ini"><a href="#打开配置文件-frpc-ini" class="headerlink" title="打开配置文件 frpc.ini"></a>打开配置文件 <code>frpc.ini</code></h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim frpc.ini</span><br></pre></td></tr></table></figure>
<h4 id="更改客户端配置"><a href="#更改客户端配置" class="headerlink" title="更改客户端配置"></a>更改客户端配置</h4><p>更改配置如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="number">118.126</span>.***.***</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.100</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">6022</span></span><br><span class="line"></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">3306</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">3306</span></span><br></pre></td></tr></table></figure>
<p><code>server_addr</code> 即为服务器的公网 IP 的地址，<code>server_port</code> 为之前在服务端配置时的 <code>bind_port</code>，这里我用的是 <code>7000</code>。 然后是需要内网穿透的服务的配置，我这里写了两个，一个是 <em>SSH</em>，一个是 <em>MySQL</em>。如果只要能进行远程连接的话我们只需要 <em>SSH</em> 的配置就好了，这里要注意的就是 <code>remote_port</code>，自定义的端口号，不要填 <code>22</code>，因为在服务器上已经被占用了（被用于服务器的 <em>SSH</em>），所以你要选一个没被占用的端口来使用，这里我用的是 <code>6022</code>。</p>
<h4 id="启动客户端服务"><a href="#启动客户端服务" class="headerlink" title="启动客户端服务"></a>启动客户端服务</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./frpc -c ./frpc.ini</span><br></pre></td></tr></table></figure>
<p>同样的，后台服务启动是：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nohup ./frpc -c ./frpc.ini &amp;</span><br></pre></td></tr></table></figure>
<h3 id="测试-frp"><a href="#测试-frp" class="headerlink" title="测试 frp"></a>测试 frp</h3><p>现在我们可以在自己的 PC 上使用以下命令来访问树莓派了：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">ssh <span class="literal">-p</span> <span class="number">6022</span> <span class="number">118.126</span>.***.***</span><br></pre></td></tr></table></figure>
<p>然后键入树莓派的密码就可以了：</p>
<!-- ![SSHraspberryPC.png](https://i.loli.net/2018/07/19/5b507b1a44208.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/use-raspberry-with-frp-for-remote-boot/SSHraspberryPC.png" alt="SSHraspberryPC"></p>
<!-- <img data-src="/2018/07/19/use-raspberry-with-frp-for-remote-boot/SSHraspberryPC.png" class="" title="SSHraspberryPC"> -->
<p>当然也可以用手机的移动网络来访问：</p>
<!-- ![SSHPhone.png](https://i.loli.net/2018/07/19/5b507b1a5450c.png) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/use-raspberry-with-frp-for-remote-boot/SSHPhone.webp" alt="SSHPhone"></p>
<!-- <img data-src="/2018/07/19/use-raspberry-with-frp-for-remote-boot/SSHPhone.webp" class="" title="SSHPhone"> -->
<p>至此我们已经成功的内网内网穿透了，即可以从外网访问内网设备了，接下来我们就要通过树莓派来使家中的 PC 开机了。</p>
<h3 id="在树莓派上使用-WOL-控制-PC-开机"><a href="#在树莓派上使用-WOL-控制-PC-开机" class="headerlink" title="在树莓派上使用 WOL 控制 PC 开机"></a>在树莓派上使用 <em>WOL</em> 控制 PC 开机</h3><p>这里我找了好多软件，测试了好久，不是没有 <em>Linux</em> 平台的，就是不能用。所以最后还是用 <em>Python</em> 了，具体代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> absolute_import</span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> unicode_literals</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">BROADCAST_IP = <span class="string">&#x27;255.255.255.255&#x27;</span></span><br><span class="line">DEFAULT_PORT = <span class="number">9</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_magic_packet</span>(<span class="params">macaddress</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(macaddress) == <span class="number">12</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">len</span>(macaddress) == <span class="number">17</span>:</span><br><span class="line">        sep = macaddress[<span class="number">2</span>]</span><br><span class="line">        macaddress = macaddress.replace(sep, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">&#x27;Incorrect MAC address format&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Pad the synchronization stream</span></span><br><span class="line">    data = <span class="string">b&#x27;FFFFFFFFFFFF&#x27;</span> + (macaddress * <span class="number">16</span>).encode()</span><br><span class="line">    send_data = <span class="string">b&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Split up the hex values in pack</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data), <span class="number">2</span>):</span><br><span class="line">        send_data += struct.pack(<span class="string">b&#x27;B&#x27;</span>, <span class="built_in">int</span>(data[i: i + <span class="number">2</span>], <span class="number">16</span>))</span><br><span class="line">    <span class="keyword">return</span> send_data</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_magic_packet</span>(<span class="params">*macs, **kwargs</span>):</span><br><span class="line">    packets = []</span><br><span class="line">    ip = kwargs.pop(<span class="string">&#x27;ip_address&#x27;</span>, BROADCAST_IP)</span><br><span class="line">    port = kwargs.pop(<span class="string">&#x27;port&#x27;</span>, DEFAULT_PORT)</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> kwargs:</span><br><span class="line">        <span class="keyword">raise</span> TypeError(<span class="string">&#x27;send_magic_packet() got an unexpected keyword &#x27;</span></span><br><span class="line">                        <span class="string">&#x27;argument &#123;!r&#125;&#x27;</span>.<span class="built_in">format</span>(k))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> mac <span class="keyword">in</span> macs:</span><br><span class="line">        packet = create_magic_packet(mac)</span><br><span class="line">        packets.append(packet)</span><br><span class="line"></span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)</span><br><span class="line">    sock.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, <span class="number">1</span>)</span><br><span class="line">    sock.connect((ip, port))</span><br><span class="line">    <span class="keyword">for</span> packet <span class="keyword">in</span> packets:</span><br><span class="line">        sock.send(packet)</span><br><span class="line">    sock.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">argv=<span class="literal">None</span></span>):</span><br><span class="line">    parser = argparse.ArgumentParser(</span><br><span class="line">        description=<span class="string">&#x27;Wake one or more computers using the wake on lan&#x27;</span></span><br><span class="line">                    <span class="string">&#x27; protocol.&#x27;</span>)</span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">&#x27;macs&#x27;</span>,</span><br><span class="line">        metavar=<span class="string">&#x27;mac address&#x27;</span>,</span><br><span class="line">        nargs=<span class="string">&#x27;+&#x27;</span>,</span><br><span class="line">        <span class="built_in">help</span>=<span class="string">&#x27;The mac addresses or of the computers you are trying to wake.&#x27;</span>)</span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">&#x27;-i&#x27;</span>,</span><br><span class="line">        metavar=<span class="string">&#x27;ip&#x27;</span>,</span><br><span class="line">        default=BROADCAST_IP,</span><br><span class="line">        <span class="built_in">help</span>=<span class="string">&#x27;The ip address of the host to send the magic packet to.&#x27;</span></span><br><span class="line">                <span class="string">&#x27; (default &#123;&#125;)&#x27;</span>.<span class="built_in">format</span>(BROADCAST_IP))</span><br><span class="line">    parser.add_argument(</span><br><span class="line">        <span class="string">&#x27;-p&#x27;</span>,</span><br><span class="line">        metavar=<span class="string">&#x27;port&#x27;</span>,</span><br><span class="line">        <span class="built_in">type</span>=<span class="built_in">int</span>,</span><br><span class="line">        default=DEFAULT_PORT,</span><br><span class="line">        <span class="built_in">help</span>=<span class="string">&#x27;The port of the host to send the magic packet to (default 9)&#x27;</span>)</span><br><span class="line">    args = parser.parse_args(argv)</span><br><span class="line">    send_magic_packet(*args.macs, ip_address=args.i, port=args.p)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:  <span class="comment"># pragma: nocover</span></span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<p>我们把上面的代码保存为 <code>*.py</code> 格式，例如 <code>wol.py</code> 然后通过 <em>ftp</em> 传输到树莓派上去。 然后在存有这个 <code>wol.py</code> 的文件夹下使用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python wol.py E0:D5:5E:88:88:88</span><br></pre></td></tr></table></figure>
<p><code>E0:D5:5E:88:88:88</code> 就是你需要启动的 PC 的 MAC 地址了。 回车后发现没有任何提示，这是正常了，因为在 <em>Linux</em> 中，<em>没有消息就是好消息</em>。 如果你只需要启动一台 PC，而且你不想记录这么长的 MAC 地址（通常也不需要你记录，因为你可以在终端通过上下键来显示历史使用过的命令），你可以将你的 MAC 地址写入到代码中去，这样就可以一劳永逸了。 至此，你已经可以通过树莓派来启动你的 PC 了，快关闭你的电脑试一试吧。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li><p>事后，我用 <em>Wireshark</em> 抓了包，找到了这个 <em>Magic Packet</em>：</p>
 <!-- ![6.png](https://i.loli.net/2018/07/19/5b507b12b69cb.png) -->
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/use-raspberry-with-frp-for-remote-boot/6.webp" alt="MagicPacket"></p>
 <!-- <img data-src="/2018/07/19/use-raspberry-with-frp-for-remote-boot/6.webp" class="" title="MagicPacket"> -->
<p> 发现和 <em>Wiki</em> 上说的一样：以 <code>6</code> 个 <code>FF</code> 开始，并且重复 <code>16</code> 遍 MAC 地址。</p>
</li>
<li><p>可以看到，我在树莓派上的 <em>frp</em> 配置文件中有一个 <em>MySQL</em> 的条目：</p>
 <figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_port</span> = <span class="number">3306</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">3306</span></span><br></pre></td></tr></table></figure>
<p> 当如此设置后，并且在树莓派上安装 <em>MySQL</em>，就可以在外网用类似的方法来访问内网的数据库了。 同样的，我们知道，网站（HTTP）是通过 <code>80</code> 端口来传输的，由此如果我们在树莓派上有部署网站的话，那么就可以通过 <em>frp</em> 进行类似的配置（这部分可能会有一些不同），我们就可以在外网访问该网站了。</p>
</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>没有总结。</p>
]]></content>
      <categories>
        <category>Linux</category>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>Green 和 Lime</title>
    <url>/2019/01/03/web-colors/</url>
    <content><![CDATA[<p>在 HTML 中，部分颜色可以使用颜色名来代替，比起代码会更好理解，例如 Aqua（<code>#00FFFF</code>）、Maroon（<code>#800000</code>）、Pink（<code>#FFC0CB</code>）等等。</p>
<span id="more"></span>
<p>比较的特殊的就是三原色了：Red、Green、Blue。</p>
<p>当你在代码中使用这三个颜色的时候，你会发现 Red 和 Blue 都是很理所当然的 <code>#FF0000</code> 和 <code>#0000FF</code>，但 Green 却不是 <code>#00FF00</code> 而是奇怪的 <code>#008000</code>。</p>
<p>事实上，真正的正绿色（<code>#00FF00</code>）的颜色名则是 Lime，Green 所代表的绿色看起来更加符合视觉效果里的绿色，而 Lime 则是计算机所认为的正绿色。</p>
]]></content>
      <categories>
        <category>趣闻</category>
      </categories>
  </entry>
  <entry>
    <title>What is this thing 10</title>
    <url>/2021/04/22/whatisthisthing-10/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="奇怪的戒指"><a href="#奇怪的戒指" class="headerlink" title="奇怪的戒指"></a>奇怪的戒指</h3><blockquote>
<p>Q: What is this ring my Uber driver would randomly click?</p>
</blockquote>
<p>我的优步司机会随机按的戒指是个什么东西？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/ring.jpg" alt="ring"></p>
<blockquote>
<p>A: Hes praying, thats a counter</p>
</blockquote>
<p>他在祷告，那是个计数器。</p>
<p>（译者注：应该是叫电子念珠吧，我爸有一个。）</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/mmnsxw/what_is_this_ring_my_uber_driver_would_randomly/">https://www.reddit.com/r/whatisthisthing/comments/mmnsxw/what_is_this_ring_my_uber_driver_would_randomly/</a></p>
<h3 id="信号枪"><a href="#信号枪" class="headerlink" title="信号枪"></a>信号枪</h3><blockquote>
<p>Q: strange weapon i found in a german news clip about the turkish coup.</p>
</blockquote>
<p>我在一则关于土耳其政变的德国新闻里发现了奇怪的武器。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/信号枪.jpg" alt="信号枪"></p>
<blockquote>
<p>A: Drone killer. It sends a strong and very directional radio frequency signal to jam the receíver on the drone to cause it to crash.</p>
</blockquote>
<p>无人机的杀手。它会发送一个很强的定向无线电频率信号干扰无人机上的接收器使其坠毁。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/mm11we/strange_weapon_i_found_in_a_german_news_clip/">https://www.reddit.com/r/whatisthisthing/comments/mm11we/strange_weapon_i_found_in_a_german_news_clip/</a></p>
<h3 id="金属盒子"><a href="#金属盒子" class="headerlink" title="金属盒子"></a>金属盒子</h3><blockquote>
<p>Q: Found in a garden. Metallic object that closes in on itself</p>
</blockquote>
<p>在花园里发现的可以合上的金属物件。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/盒子1.jpg" alt="盒子"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/盒子2.jpg" alt="盒子"></p>
<blockquote>
<p>A: Looks like a Hindu ritual box. It is missing the middle piece that would sit in that central hole.<br>See some for sale here:<br><a href="https://www.exoticindiaart.com/sculptures/Ritual/box/">https://www.exoticindiaart.com/sculptures/Ritual/box/</a></p>
</blockquote>
<p>看起来像印度教的礼盒。它缺少了位于中间洞的部分。</p>
<p>这里有卖：</p>
<p><a href="https://www.exoticindiaart.com/sculptures/Ritual/box/">https://www.exoticindiaart.com/sculptures/Ritual/box/</a></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/盒子3.jpg" alt="盒子"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/盒子4.jpg" alt="盒子"></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/mjvmfa/found_in_a_garden_metallic_object_that_closes_in/">https://www.reddit.com/r/whatisthisthing/comments/mjvmfa/found_in_a_garden_metallic_object_that_closes_in/</a></p>
<h3 id="痕迹"><a href="#痕迹" class="headerlink" title="痕迹"></a>痕迹</h3><blockquote>
<p>Q: What’s the long-lasting trail behind this boat?</p>
</blockquote>
<p>这艘船后面长长的痕迹是什么?</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/痕迹.jpg" alt="痕迹"></p>
<blockquote>
<p>A: The disturbed water hasn’t mixed back into surrounding water very quick and the sun is reflecting off the different surface waves amplifying the difference.</p>
</blockquote>
<p>被搅乱的水并没有很快地混入周围的水中，太阳从不同的表面波反射回来，放大了这种差异。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/mfwpcd/whats_the_longlasting_trail_behind_this_boat/">https://www.reddit.com/r/whatisthisthing/comments/mfwpcd/whats_the_longlasting_trail_behind_this_boat/</a></p>
<h3 id="绿光"><a href="#绿光" class="headerlink" title="绿光"></a>绿光</h3><blockquote>
<p>Q: staying at an air b&amp;b, why does the vent have a green light inside it?</p>
</blockquote>
<p>住在爱彼迎的旅馆里，为什么通风口会发出绿色的光？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/绿光.jpg" alt="绿光"></p>
<blockquote>
<p>A: It’s likely could be a UV-C sterilization lamp. Kills germs/viruses as they pass by. Also can help prevent mold and whatnot building up on the coil.</p>
</blockquote>
<p>可能是紫外线消毒灯。杀死照射到的细菌或病毒。也可以防止霉菌和其他的些什么不在管道中生成。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/mdnovh/staying_at_an_air_bb_why_does_the_vent_have_a/">https://www.reddit.com/r/whatisthisthing/comments/mdnovh/staying_at_an_air_bb_why_does_the_vent_have_a/</a></p>
<h3 id="模具"><a href="#模具" class="headerlink" title="模具"></a>模具</h3><blockquote>
<p>Q: Found metal detecting in a Minnesota park where other objects around 1860s have been pulled.</p>
</blockquote>
<p>在明尼苏达公园发现的金属物件，一同被发现的还有一些十九世纪六十年代的物体。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/模具.jpg" alt="模具"></p>
<blockquote>
<p>A: Mold for casting lead soldiers?</p>
</blockquote>
<p>铸造铅士兵的模具？</p>
<blockquote>
<p>A: Exactly. It’s half the mold. I had the same set as a kid.</p>
</blockquote>
<p>楼上说的完全正确，这只是模具的一半，我小时候有一套和这一样的。</p>
<blockquote>
<p>A: Man how times have changed. You were playing with molten lead now kids are Tik toking or whatever it is</p>
</blockquote>
<p>大人，时代变了，你小时候在玩铅铸模型，现在的小孩都在玩抖音什么的。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/mv5m0i/found_metal_detecting_in_a_minnesota_park_where/">https://www.reddit.com/r/whatisthisthing/comments/mv5m0i/found_metal_detecting_in_a_minnesota_park_where/</a></p>
<h3 id="披萨机"><a href="#披萨机" class="headerlink" title="披萨机"></a>披萨机</h3><blockquote>
<p>Q: What is this spur on the back of my pizza slicer?</p>
</blockquote>
<p>我披萨切片机后面的刺是什么?</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/披萨切片机.jpg" alt="披萨切片机"></p>
<blockquote>
<p>A: Ravioli maybe? Like pizza cutters are also used to cut pasta.</p>
</blockquote>
<p>也许是用来切意大利饺的？ 像这样的披萨切片机也会用来切意大利面。</p>
<p>（译者注：意大利饺长这样。）</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/意大利饺.webp" alt="意大利饺"></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/mjcyrb/what_is_this_spur_on_the_back_of_my_pizza_slicer/">https://www.reddit.com/r/whatisthisthing/comments/mjcyrb/what_is_this_spur_on_the_back_of_my_pizza_slicer/</a></p>
<h3 id="一大堆试管"><a href="#一大堆试管" class="headerlink" title="一大堆试管"></a>一大堆试管</h3><blockquote>
<p>Q: Old school chem set maybe? Found in Abandoned building with no info on it.</p>
</blockquote>
<p>也许是旧学校的化学教具？在废弃的建筑里发现的，没有任何信息。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/试管.jpg" alt="试管"></p>
<blockquote>
<p>A: Googling some of the names seems to point to a collection of homeopathic garbage.</p>
</blockquote>
<p>谷歌了一些名字之后似乎指向了一堆号称顺势疗法的垃圾。</p>
<p>（译者注：这一块专业知识不太懂，如果有大佬麻烦科普一下！）</p>
<p>（译者再注：多谢 <strong><a href="http://jandan.net/t/4892172#tucao-8596808">淡乱君</a></strong> 、 <strong><a href="http://jandan.net/t/4892172#tucao-8596767">ooooo</a></strong> 、 <strong><a href="http://jandan.net/t/4892172#tucao-8596759">大海里的一粒阿莫西林</a></strong> 科普！）</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/mn9aqi/old_school_chem_set_maybe_found_in_abandoned/">https://www.reddit.com/r/whatisthisthing/comments/mn9aqi/old_school_chem_set_maybe_found_in_abandoned/</a></p>
<h3 id="奇怪的容器"><a href="#奇怪的容器" class="headerlink" title="奇怪的容器"></a>奇怪的容器</h3><blockquote>
<p>Q: What would be shipped in this strange shaped container?</p>
</blockquote>
<p>这个奇怪的容器里面装的是什么？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-10/奇怪的容器.jpg" alt="奇怪的容器"></p>
<blockquote>
<p>A: Had a hunch, and it’s a ( human or equine) sperm shipping container. We’ve had one of these on here before, which are used to ship bull sperm.</p>
</blockquote>
<p>我有预感，它是一个（人类或马）精子运输容器。我们之前在这上面有一个，用来运送公牛精子的。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/mt7gx3/what_would_be_shipped_in_this_strange_shaped/">https://www.reddit.com/r/whatisthisthing/comments/mt7gx3/what_would_be_shipped_in_this_strange_shaped/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序——RushA</title>
    <url>/2017/08/16/wechat-mini-programs-rusha/</url>
    <content><![CDATA[<p>因为现在是三个人合租，所以免不了 AA，但是在付钱的时候 AA，未免也太麻烦了。所以就要等到事后再去算账，然后分别转账，数量少还好，如果数量多的话，计算起来就会特别繁琐，尤其是有些东西不是完全公平的 AA，每个人所占的比例不同。 由此，想要借助<strong>微信小程序</strong>平台来进行一款记账小程序的开发，也可以借此学习一下小程序。</p>
<span id="more"></span>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h3 id="名字"><a href="#名字" class="headerlink" title="名字"></a>名字</h3><p>首先是名字，叫做 <em>RushA</em> ，本来是想取名叫 <em>RushB</em> 的，但是被已经有这个名字了，所以只能退而求其次。名字的来源是 <code>CS:GO</code> 中一个「战术」，意思就是 5 人快速去 B 点，从而达到出其不意的效果。通常这么使用：</p>
<blockquote>
<p>Rush B, dont stop.</p>
</blockquote>
<p>其他的话没有什么别的意思，纯粹是应景。</p>
<h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><p>然后是需要实现的功能：</p>
<ol>
<li><p>实现两人以上的 <code>AA</code> 账单分配；</p>
</li>
<li><p>能够动态的添加人数，并且添加要方便，每添加一个人就要分配一个颜色，这样会比较容易辨别，最好添加几个快捷选项；</p>
</li>
<li><p>在添加人员之后，则进入记账页面，可以一条一条的添加项目。</p>
</li>
</ol>
<h3 id="待续"><a href="#待续" class="headerlink" title="待续"></a>待续</h3>]]></content>
      <categories>
        <category>小程序</category>
      </categories>
  </entry>
  <entry>
    <title>What is this thing 11</title>
    <url>/2021/05/22/whatisthisthing-11/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="白色的大脑"><a href="#白色的大脑" class="headerlink" title="白色的大脑"></a>白色的大脑</h3><blockquote>
<p>Q: Found this on the side of the road in my neighborhood. Thought it was a brain, then dissected it and now I have no idea. Lots of small lobes, fuzzy inside, rubbery? My shoe for size reference.</p>
</blockquote>
<p>在我家附近的路边发现了这个。我以为它是一个大脑，然后解剖了它，现在我不知道了。有很多小叶子，里面是模糊的，是橡胶的？我的鞋子是用来参考尺寸的。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/白色的大脑1.jpg" alt="白色的大脑"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/白色的大脑2.jpg" alt="白色的大脑"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/白色的大脑3.jpg" alt="白色的大脑"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/白色的大脑4.jpg" alt="白色的大脑"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/白色的大脑5.jpg" alt="白色的大脑"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/白色的大脑6.jpg" alt="白色的大脑"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/白色的大脑7.jpg" alt="白色的大脑"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/白色的大脑8.jpg" alt="白色的大脑"></p>
<blockquote>
<p>A: Is that a shit?!</p>
</blockquote>
<p>那是坨屎吗？</p>
<blockquote>
<p>Q: Solved. I’m an idiot who dissected dog poop</p>
</blockquote>
<p>（题主）：解决了。我是一个解剖狗屎的白痴。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/nb4z70/found_this_on_the_side_of_the_road_in_my/">https://www.reddit.com/r/whatisthisthing/comments/nb4z70/found_this_on_the_side_of_the_road_in_my/</a></p>
<h3 id="好多锁"><a href="#好多锁" class="headerlink" title="好多锁"></a>好多锁</h3><blockquote>
<p>Q: This is a on gate blocking road access to some cell towers. Why so many locks, and how would someone even open it?</p>
</blockquote>
<p>这是一扇大门，挡住了通往一些手机塔的道路。为什么有这么多的锁，他们该怎么打开它？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/锁.jpg" alt="锁"></p>
<blockquote>
<p>Q: You can open the gate by unlocking only one padlock. The way it’s designed means that multiple people can use the gate, and if one person loses their keys, only their padlock needs replaced. As opposed to one padlock with many keys, you’d need to give tons of people the new key.</p>
</blockquote>
<p>你只需解开一个挂锁就可以打开大门。它的设计方式意味着多人可以使用这扇门，如果一个人丢了钥匙，只有他的挂锁需要更换。相对于一个挂锁有很多钥匙，你需要给所有人新的钥匙。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/n0s3ym/this_is_a_on_gate_blocking_road_access_to_some/">https://www.reddit.com/r/whatisthisthing/comments/n0s3ym/this_is_a_on_gate_blocking_road_access_to_some/</a></p>
<h3 id="马其顿的亚历山大三世"><a href="#马其顿的亚历山大三世" class="headerlink" title="马其顿的亚历山大三世"></a>马其顿的亚历山大三世</h3><blockquote>
<p>Q: Im waiting for the bank to open and they have this card facing the street. What is it used for?</p>
</blockquote>
<p>我在等待银行开门，他们把这张卡面向街道。它是用来做什么的？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/银行扑克.jpg" alt="银行扑克"></p>
<blockquote>
<p>A: Former bank employee here. It’s definitely a safety signal. We switched ours quarterly and it is to let other employees know that it is all clear to open. Typically we had 2 employees “open” the branch while the rest waited in the parking lot or across the street for “all clear.” The openers go in, turn off alarm, search the building and check everything then set the signal.</p>
</blockquote>
<p>我是前银行雇员。这绝对是一个安全信号。我们每季度更换一次信号，是为了让其他员工知道可以开门了。通常情况下，我们有两名员工”打开“分行，而其他员工在停车场或街对面等待“一切正常”。开门人进去，关闭警报，搜索大楼并检查一切，然后设置信号。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/nbk05j/im_waiting_for_the_bank_to_open_and_they_have/">https://www.reddit.com/r/whatisthisthing/comments/nbk05j/im_waiting_for_the_bank_to_open_and_they_have/</a></p>
<h3 id="水龙头"><a href="#水龙头" class="headerlink" title="水龙头"></a>水龙头</h3><blockquote>
<p>Q: Found this in my bathroom in Germany…</p>
</blockquote>
<p>在我德国的浴室里发现了这个……</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/水龙头.jpg" alt="水龙头"></p>
<blockquote>
<p>A: It looks like they are meters that show how much hot and cold water has been used. I don’t know why your meter it that way.</p>
</blockquote>
<p>看起来它们是显示已使用多少热水和冷水的仪表,我不知道为什么你的水表是这样的。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/my6wyq/found_this_in_my_bathroom_in_germany/">https://www.reddit.com/r/whatisthisthing/comments/my6wyq/found_this_in_my_bathroom_in_germany/</a></p>
<h3 id="小水槽"><a href="#小水槽" class="headerlink" title="小水槽"></a>小水槽</h3><blockquote>
<p>Q: WITT? An unusually shaped sink possibly in a corridoor, spotted in a property listing on an older house. Looks quite narrow, probably too small for washing boots.</p>
</blockquote>
<p>这是个嘛？在一栋老房子的房产清单中，发现了一个可能位于走廊的形状异常的水槽。看起来很窄，对于洗靴子来说可能太小了。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/水槽.jpg" alt="水槽"></p>
<blockquote>
<p>A: It’s called a butlers sink, or cleaners sink. It’s used for cleaning, filling buckets, emptying out waste so housekeeping can wash down surfaces without wandering through the house.</p>
</blockquote>
<p>它被称为管家水槽，或清洁工水槽。它用于清洁，装水桶，倒掉废物，这样家政人员就可以清理外部，而不用在房子里乱转。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/mzlaua/witt_an_unusually_shaped_sink_possibly_in_a/">https://www.reddit.com/r/whatisthisthing/comments/mzlaua/witt_an_unusually_shaped_sink_possibly_in_a/</a></p>
<h3 id="针头"><a href="#针头" class="headerlink" title="针头"></a>针头</h3><blockquote>
<p>Q: Found on my driveway. The RCMP arrested my neighbour last night; could it be related to that?</p>
</blockquote>
<p>在我的车道上发现的。加拿大皇家骑警昨晚逮捕了我的邻居，这可能与此有关吗？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/针头.jpg" alt="针头"></p>
<blockquote>
<p>A: Yup, a taser dart</p>
</blockquote>
<p>是的，一个泰瑟枪的飞镖。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/泰瑟枪飞镖.jpg" alt="泰瑟枪飞镖"></p>
<p>（译者注：说起泰瑟枪突然想到之前有看过 <a href="https://www.youtube.com/user/theslowmoguys">The Slow Mo Guys</a> 的一期被<a href="https://www.youtube.com/watch?v=576HwhU6PMM">泰瑟枪击中的慢镜头视频</a>，还蛮有意思的。）</p>
<iframe src="//player.bilibili.com/player.html?aid=2897330&bvid=BV1Cs41117Fe&cid=4528688&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<p><a href="https://www.reddit.com/r/whatisthisthing/comments/n166j5/found_on_my_driveway_the_rcmp_arrested_my/">https://www.reddit.com/r/whatisthisthing/comments/n166j5/found_on_my_driveway_the_rcmp_arrested_my/</a></p>
<h3 id="勺子"><a href="#勺子" class="headerlink" title="勺子"></a>勺子</h3><blockquote>
<p>Q: Small scoop with alligator clip as the handle. Found it cleaning out the kitchen.</p>
</blockquote>
<p>用鳄鱼夹作为手柄的小勺子。在清理厨房的时候发现了它。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-11/勺子.jpg" alt="勺子"></p>
<blockquote>
<p>A: Coffee scoop with bag clip for coffee bag…</p>
</blockquote>
<p>带有咖啡袋夹的咖啡勺…</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/n53yxi/small_scoop_with_alligator_clip_as_the_handle/">https://www.reddit.com/r/whatisthisthing/comments/n53yxi/small_scoop_with_alligator_clip_as_the_handle/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing 12</title>
    <url>/2021/06/22/whatisthisthing-12/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="壳"><a href="#壳" class="headerlink" title="壳"></a>壳</h3><blockquote>
<p>Q: Found this glass like tube “shell” washed up on a beach in North Caroline, any idea what it is?</p>
</blockquote>
<p>这个像玻璃管一样的「贝壳」被冲上了卡洛琳北部的海滩，你知道这是什么吗？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-12/贝壳1.jpg" alt="贝壳"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-12/贝壳2.jpg" alt="贝壳"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-12/贝壳3.jpg" alt="贝壳"></p>
<blockquote>
<p>A: Stingray teeth</p>
</blockquote>
<p>赤魟的牙齿。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-12/贝壳4.jpg" alt="贝壳"></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/nrmrx2/found_this_glass_like_tube_shell_washed_up_on_a/">https://www.reddit.com/r/whatisthisthing/comments/nrmrx2/found_this_glass_like_tube_shell_washed_up_on_a/</a></p>
<h3 id="浮木"><a href="#浮木" class="headerlink" title="浮木"></a>浮木</h3><blockquote>
<p>Q: Driftwood with metal plaque found on the Mississippi river bank.</p>
</blockquote>
<p>在密西西比河岸发现的带金属牌的浮木。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-12/浮木.jpg" alt="浮木"></p>
<blockquote>
<p>A: Looks like a piece from a bedhead. I think the sheath of wheat is a xtian symbol about reaping what you sow and of death and renewal. Something along those lines. Wheat has been used on double (marital) beds for centuries, including the bedhead and upright posts. They’re also used on chairs in a literal or a stylised way and represent prosperity in relation to the ‘reap what you sow’ type of symbolism.</p>
</blockquote>
<p>看起来像是床头的一部分。我认为麦子的鞘是一个关于一分耕耘一分收获，死亡和重生的基督教象征。差不多就是这些意思。几个世纪以来，小麦一直被用在双人床上，包括床头和立柱。它们也以字面或风格化的方式用在椅子上，并代表与「一分耕耘一分收获」类型的象征意义有关的繁荣。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/nyo0ok/driftwood_with_metal_plaque_found_on_the/">https://www.reddit.com/r/whatisthisthing/comments/nyo0ok/driftwood_with_metal_plaque_found_on_the/</a></p>
<h3 id="浴缸"><a href="#浴缸" class="headerlink" title="浴缸"></a>浴缸</h3><blockquote>
<p>Q: Full tub with deep front half. USA. Listing calls it a mailman tub. Google results in Rule 34.</p>
</blockquote>
<p>一个前半部分很深的浴缸，位置是在美国。听说叫做邮递员浴缸，谷歌搜索结果会有色情内容。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-12/浴缸.jpg" alt="浴缸"></p>
<blockquote>
<p>A: Probably for washing your feet.</p>
</blockquote>
<p>可能就是用来洗脚的。</p>
<blockquote>
<p>A: I was thinking feet as well. After all, mailmen have sore feet.</p>
</blockquote>
<p>我也在想应该是用来洗脚的，毕竟邮递员的脚很疼。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/nuo74z/full_tub_with_deep_front_half_usa_listing_calls/">https://www.reddit.com/r/whatisthisthing/comments/nuo74z/full_tub_with_deep_front_half_usa_listing_calls/</a></p>
<h3 id="金属片"><a href="#金属片" class="headerlink" title="金属片"></a>金属片</h3><blockquote>
<p>Q: Found these soft metal objects while metal detecting under a pier at low tide.</p>
</blockquote>
<p>退潮时在码头下进行金属探测时发现了这些软金属片。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-12/金属片.jpg" alt="金属片"></p>
<blockquote>
<p>A: Saw a similar post a few weeks back and I don’t remember what religion but I’m pretty sure they’re good luck/prayer charms that are tossed in the water on purpose. They’re cheaply buyable and have no significance once they hit the water so you can keep them without upsetting anyone, but no, they aren’t ancient.</p>
</blockquote>
<p>几周前看到一个类似的帖子，我不记得是什么宗教，但我很确定它们是故意扔到水里的好运或者祈祷符。它们很廉价，随随便便就能买到，而且一旦扔到水就没有任何意义，所以你可以留着它们而不用担心得罪其他人，但不，它们并不古老。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/nmlb5v/found_these_soft_metal_objects_while_metal/">https://www.reddit.com/r/whatisthisthing/comments/nmlb5v/found_these_soft_metal_objects_while_metal/</a></p>
<h3 id="STOP"><a href="#STOP" class="headerlink" title="STOP"></a>STOP</h3><blockquote>
<p>Q: Variable stop sign in Illinois</p>
</blockquote>
<p>伊利诺伊州的可变停车标志。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-12/STOP.jpg" alt="STOP"></p>
<blockquote>
<p>There wouldn’t be another road coming in at a shallow angle to the left of this, would there?<br>These are blinders, typically used so the sign can old be read from a narrow angle. They’re also called directional shields. You’ll see them on traffic lights a lot more often.<br><a href="https://www.tapconet.com/product/blinder-for-stop-sign">https://www.tapconet.com/product/blinder-for-stop-sign</a></p>
</blockquote>
<p>这条路的左边是不是还有另一条以很小的角度并入的路？</p>
<p>这些是遮罩，通常用于标识可以从一个狭窄的角度阅读。它们也被称为方向屏蔽。你会经常在交通灯上看到它们。</p>
<p><a href="https://www.tapconet.com/product/blinder-for-stop-sign">https://www.tapconet.com/product/blinder-for-stop-sign</a></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/nw0ysg/variable_stop_sign_in_illinois/">https://www.reddit.com/r/whatisthisthing/comments/nw0ysg/variable_stop_sign_in_illinois/</a></p>
<h3 id="小东西"><a href="#小东西" class="headerlink" title="小东西"></a>小东西</h3><blockquote>
<p>Q: A small plastic and metal device, found in the card slot of an ATM</p>
</blockquote>
<p>一种小型的塑料和金属装置，在自动取款机的卡槽中发现。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-12/小东西.jpg" alt="小东西"></p>
<blockquote>
<p>A: Looks like a Lebanese loop to me used in atm fraud, I won’t explain how just tell bank.</p>
</blockquote>
<p>在我看来，这是一个用于 ATM 诈骗的黎巴嫩圈。 我不会说明这怎么用，你只需要告诉银行这件事就行了。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ntktis/a_small_plastic_and_metal_device_found_in_the/">https://www.reddit.com/r/whatisthisthing/comments/ntktis/a_small_plastic_and_metal_device_found_in_the/</a></p>
<h3 id="石头"><a href="#石头" class="headerlink" title="石头"></a>石头</h3><blockquote>
<p>Q: 6” Tall, 4” Wide, Feels Metal-ish, Found in the Colorado foothills.</p>
</blockquote>
<p>6 英寸高，4 英寸宽，感觉像金属，发现于科罗拉多山麓。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-12/石头.jpg" alt="石头"></p>
<blockquote>
<p>Looks like an iron nodule. Natural concentration of iron.<br>See here <a href="https://sites.wustl.edu/meteoritesite/items/concretions/#:~:text=Hematite%20nodules%20are%20often%20formed,a%20wide%20variety%20of%20shapes">https://sites.wustl.edu/meteoritesite/items/concretions/#:~:text=Hematite%20nodules%20are%20often%20formed,a%20wide%20variety%20of%20shapes</a>.<br>P.S. I have a degree in geology<br>P.S. again. Went to sleep when this had like 7 likes. Thanks for the awards and I totally love this flocculation of geologists.<br>P.P.S. First Reddit gold!!! Thanks kind stranger!!</p>
</blockquote>
<p>看起来像铁结核。天然聚合的铁。</p>
<p>可以看这里：<a href="https://sites.wustl.edu/meteoritesite/items/concretions/#:~:text=Hematite%20nodules%20are%20often%20formed,a%20wide%20variety%20of%20shapes">https://sites.wustl.edu/meteoritesite/items/concretions/#:~:text=Hematite%20nodules%20are%20often%20formed,a%20wide%20variety%20of%20shapes</a>。</p>
<p>P.S. 我有地质学学位。</p>
<p>再一次 P.S. 当我睡觉的时候有 7 个赞，谢谢你们的支持，我很高兴出来那么多地质学家作答。</p>
<p>P.P.S. 第一次收到 Reddit gold！！！谢谢陌生人！</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/nnesqq/6_tall_4_wide_feels_metalish_found_in_the/">https://www.reddit.com/r/whatisthisthing/comments/nnesqq/6_tall_4_wide_feels_metalish_found_in_the/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing 13</title>
    <url>/2021/07/22/whatisthisthing-13/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="大铁球"><a href="#大铁球" class="headerlink" title="大铁球"></a>大铁球</h3><blockquote>
<p>Q: Found this digging around the mouth of a major Caribbean harbor (on my property). Did this come out of a cannon?</p>
</blockquote>
<p>在加勒比海的一个主要港口（在我的地皮上）附近挖掘出了这个东西。这是从大炮里射出来的吗？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/大铁球.jpg" alt="大铁球"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/大铁球2.jpg" alt="大铁球"></p>
<blockquote>
<p>A: 100% a cannonball.</p>
</blockquote>
<p>100% 是个炮弹。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/oa55gi/found_this_digging_around_the_mouth_of_a_major/">https://www.reddit.com/r/whatisthisthing/comments/oa55gi/found_this_digging_around_the_mouth_of_a_major/</a></p>
<h3 id="泡沫"><a href="#泡沫" class="headerlink" title="泡沫"></a>泡沫</h3><blockquote>
<p>Q: What is this bubbling out of the ground in my yard? Purplish metallic gooey inside. Keeps bubbling even if I dig a thin layer down with a shovel.</p>
</blockquote>
<p>我院子里的地面上冒出的是什么东西？里面有紫红色的金属粘稠物。即使我用铲子挖下薄薄的一层，也会一直冒泡。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/泡沫1.jpg" alt="泡沫"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/泡沫2.jpg" alt="泡沫"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/泡沫3.jpg" alt="泡沫"></p>
<iframe src="//player.bilibili.com/player.html?aid=716812906&bvid=BV1GX4y1c7rf&cid=374491892&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<blockquote>
<p>A: Looks kind of like expanding foam insulation? There is a purple kind that is the same shade. Is it dripping from a roof above?</p>
</blockquote>
<p>看起来有点像膨胀泡沫绝缘材料？有一种紫色的，也是同样的颜色。它是从上面的屋顶滴下来的吗？</p>
<blockquote>
<p>OP: No structure within 20 feet. It is quite literally bubbling up from the ground</p>
</blockquote>
<p>原题主：20 英尺内没有建筑。它确实是从地面上冒出来的。</p>
<blockquote>
<p>A: Do you see any large trucks in the vicinity that could be pumping something? It sure looks like injected foam in the way it gets a toughened skin around a soft interior.<br>Like this, but on a grander scale.</p>
</blockquote>
<p>你是否看到附近有任何大型卡车，可能在抽水？从它在柔软的内部周围形成坚硬的表皮的方式来看，它看起来确实像注入的泡沫。</p>
<p>像这样，但规模更大。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/泡沫4.jpg" alt="泡沫"></p>
<blockquote>
<p>OP: The construction here is mainly finished except for a retention pond down the street. Haven’t noticed any houses nearby getting work done on the ground or having something pumped.</p>
</blockquote>
<p>原题主：除了街边的一个蓄水池，这里的建筑主要已经完工。我没有注意到附近有任何房子在地面上施工，或者有什么东西被抽走了。</p>
<blockquote>
<p>A: Well, due to the purple color and behavior of it bubbling up from the ground my next guess is that a contractor disposed of a large cannister of spray foam insulation into the fill that made up your lawn. The recent rains caused settling which caused the cannister to get punctured.<br>This is certainly possible. I have found all kinds of shit in construction fill in housing developments. Disposed of concrete forms, lumber scraps, paint cans, spray cans, beer bottles/cans etc…<br>Edit: OP you must dig to China to reveal the source of the mystery!</p>
</blockquote>
<p>嗯，由于它的紫色和从地面冒出的行为，我的进一步猜测是，一个承包商将一大罐喷涂泡沫绝缘材料扔进了构成你的草坪的填料中。最近的降雨造成了沉降，导致罐子被刺破。</p>
<p>这当然是可能的。我曾在住宅区的建筑填料中发现各种垃圾。处理过的混凝土模板、木材废料、油漆罐、喷雾罐、啤酒瓶/罐等等。</p>
<p>编辑：题主你必须挖到中国去，才能揭开神秘的源头！</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ojuu87/what_is_this_bubbling_out_of_the_ground_in_my/">https://www.reddit.com/r/whatisthisthing/comments/ojuu87/what_is_this_bubbling_out_of_the_ground_in_my/</a></p>
<h3 id="饼干"><a href="#饼干" class="headerlink" title="饼干"></a>饼干</h3><blockquote>
<p>Q: What are these strands/threads coming out of my crackers?</p>
</blockquote>
<p>从我的饼干里出来的这些丝线/线是什么？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/饼干.jpg" alt="饼干"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/饼干2.jpg" alt="饼干"></p>
<blockquote>
<p>A: I work in food manufacturing. This is 100% frayed edges of the conveyors that take the crackers through the sheeting process before being transferred to the oven band.<br>Contact the manufacturer with the codes and date on the box. It will help them in their investigation, and you will most likely get some free stuff.</p>
</blockquote>
<p>我从事于食品制造业工作。这 100% 是传送带的边缘磨损产物，这些传送带将饼干在传送到烤炉带之前通过片状加工。</p>
<p>请与制造商联系，提供盒子上的代码和日期。这将有助于他们的调查，而且你很可能会得到一些免费的奖励。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/oghic0/what_are_these_strandsthreads_coming_out_of_my/">https://www.reddit.com/r/whatisthisthing/comments/oghic0/what_are_these_strandsthreads_coming_out_of_my/</a></p>
<h3 id="ATM"><a href="#ATM" class="headerlink" title="ATM"></a>ATM</h3><blockquote>
<p>Q: What are these 2 metal studs on the side of this atm?</p>
</blockquote>
<p>这个 ATM 机侧面的两个金属螺柱是什么？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/ATM.jpg" alt="ATM"></p>
<blockquote>
<p>A: Pretty sure they put those on there to <a href="https://www.nwcu.com/learn/how-spot-atm-skimmer">stop this from happening</a>.</p>
</blockquote>
<p>很明显，他们把这些放在那里是为了<a href="https://www.nwcu.com/learn/how-spot-atm-skimmer">阻止这种情况发生</a>。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/ATM1.jpg" alt="ATM"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/ATM2.png" alt="ATM"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/ATM3.png" alt="ATM"></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/odk775/what_are_these_2_metal_studs_on_the_side_of_this/">https://www.reddit.com/r/whatisthisthing/comments/odk775/what_are_these_2_metal_studs_on_the_side_of_this/</a></p>
<h3 id="金属架子"><a href="#金属架子" class="headerlink" title="金属架子"></a>金属架子</h3><blockquote>
<p>Q: Found in our new house on the top landing bannister rail. Seems like it’s meant to hold something but not sure what it is?</p>
</blockquote>
<p>在我们的新房子里顶楼的栏杆上发现的。看起来它是用来装东西的，但不知道是什么东西？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/架子.jpg" alt="架子"></p>
<blockquote>
<p>A: Appears to be a 3M Command hair dryer holder. Though given the location, perhaps previous owners were using it for something else (what I have no idea)</p>
</blockquote>
<p>看起来是一个 3M 公司的吹风机支架。但是考虑到在这个位置，也许以前的主人用它来做别的事情（我不知道是什么）。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/架子2.jpg" alt="架子"></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ofigao/found_in_our_new_house_on_the_top_landing/">https://www.reddit.com/r/whatisthisthing/comments/ofigao/found_in_our_new_house_on_the_top_landing/</a></p>
<h3 id="绒毛"><a href="#绒毛" class="headerlink" title="绒毛"></a>绒毛</h3><blockquote>
<p>Q: Found inside a musical instrument, it is the size of a big grape but there aren’t any holes big enough for it to have fallen inside.</p>
</blockquote>
<p>在一个乐器里面发现的，它有一个大葡萄那么大，但没有任何足够大的孔洞让它掉到里面。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/老鼠.jpg" alt="老鼠"></p>
<blockquote>
<p>A: They have these in violins. They call them the mouse. It’s just years and years of fluff and detritus. If they get repaired the repairer will put ‘the mouse’ back into the violin for good luck. It could be something like that.</p>
</blockquote>
<p>小提琴里也有。他们称之为「老鼠」。这只是年复一年的绒毛和碎屑。如果它们被修理好了，修理者会把「老鼠」放回小提琴里，以获得好运气。这可能是类似的东西。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ojcnx3/found_inside_a_musical_instrument_it_is_the_size/">https://www.reddit.com/r/whatisthisthing/comments/ojcnx3/found_inside_a_musical_instrument_it_is_the_size/</a></p>
<h3 id="紫烟"><a href="#紫烟" class="headerlink" title="紫烟"></a>紫烟</h3><blockquote>
<p>Q: I know this isnt exactly an object but was hoping you guys could still help me out. What is this purple smoke?</p>
</blockquote>
<p>我知道这称不上是一个物体，但希望你们仍然可以帮助我。这个紫烟是什么？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-13/紫烟.jpg" alt="紫烟"></p>
<blockquote>
<p>A: If it’s a trash-to-ethanol refinery/plant there’s a good chance they got a load of iodine-rich hospital waste.</p>
</blockquote>
<p>如果这是一家将垃圾转化为乙醇的炼油厂，他们很有可能得到了大量富含碘的医院废物。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/o9kq6p/i_know_this_isnt_exactly_an_object_but_was_hoping/">https://www.reddit.com/r/whatisthisthing/comments/o9kq6p/i_know_this_isnt_exactly_an_object_but_was_hoping/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing 14</title>
    <url>/2021/08/21/whatisthisthing-14/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="保鲜膜"><a href="#保鲜膜" class="headerlink" title="保鲜膜"></a>保鲜膜</h3><blockquote>
<p>Q: What is this cling film type stuff on Tom Daley’s arms, and what’s it for?</p>
</blockquote>
<p>汤姆·戴利手臂上的这种粘膜式的东西是什么，它有什么用？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-14/保鲜膜.jpg" alt="保鲜膜"></p>
<blockquote>
<p>A: Cling filmed ice packs.</p>
</blockquote>
<p>保鲜膜冰袋。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/owgb70/what_is_this_cling_film_type_stuff_on_tom_daleys/">https://www.reddit.com/r/whatisthisthing/comments/owgb70/what_is_this_cling_film_type_stuff_on_tom_daleys/</a></p>
<h3 id="液体背心"><a href="#液体背心" class="headerlink" title="液体背心"></a>液体背心</h3><blockquote>
<p>Q: What are these vest with liquid pouches worn by olympic sailors for? Worn by Dutch sailors Bekkering and Duetz during a post race interview.</p>
</blockquote>
<p>奥运帆船运动员穿的这种带液体袋的背心是干什么用的？荷兰运动员贝克林和杜茨在赛后接受采访时穿的衣服。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-14/液体背心.png" alt="液体背心"></p>
<blockquote>
<p>A: They are cooling vests.</p>
</blockquote>
<p>它们是冷却背心。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/oui3f3/what_are_these_vest_with_liquid_pouches_worn_by/">https://www.reddit.com/r/whatisthisthing/comments/oui3f3/what_are_these_vest_with_liquid_pouches_worn_by/</a></p>
<h3 id="九个钉子"><a href="#九个钉子" class="headerlink" title="九个钉子"></a>九个钉子</h3><blockquote>
<p>Q: What are these pegs at the end of my bed used for? We thought they were for shoes, but there are 9 of them.</p>
</blockquote>
<p>我床尾的这些钉子是干什么用的？我们以为是放鞋的，但其实有 9 个。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-14/床.jpg" alt="床"></p>
<blockquote>
<p>A: Anchor points for rope play?</p>
</blockquote>
<p>玩绳子时候用的锚点？</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/or4uz3/what_are_these_pegs_at_the_end_of_my_bed_used_for/">https://www.reddit.com/r/whatisthisthing/comments/or4uz3/what_are_these_pegs_at_the_end_of_my_bed_used_for/</a></p>
<h3 id="笼子"><a href="#笼子" class="headerlink" title="笼子"></a>笼子</h3><blockquote>
<p>Q: Just bought a lake home and found three of these in the water next to the pier. Criss-Cross stack of corrugated pipes wrapped in plastic netting all weight down by bricks.</p>
</blockquote>
<p>刚买了一个湖边的房子，在码头旁边的水里发现了三个这样的东西。纵横交错的波纹管堆叠，用塑料网包裹，都是用砖头压住的。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-14/笼子.png" alt="笼子"></p>
<blockquote>
<p>A: It is a fish crib. It is a device to give baby fish a place to hide from the big boys. They also make for some good fishing as the lunckers will hang around hoping for a few little ones to come out.</p>
</blockquote>
<p>它是一个鱼床。它是一种给小鱼提供躲避大鱼的地方的装置。它们也是一好的捕鱼方式，因为小鱼会在周围徘徊，希望有几个小鱼出来。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ova47s/just_bought_a_lake_home_and_found_three_of_these/">https://www.reddit.com/r/whatisthisthing/comments/ova47s/just_bought_a_lake_home_and_found_three_of_these/</a></p>
<h3 id="茶棍"><a href="#茶棍" class="headerlink" title="茶棍"></a>茶棍</h3><blockquote>
<p>Q: Wife ordered rolls of thank you stickers on ebay. This came instead. Already called for return. What are they? Green cylindrical rolls of what smell like green tea? I’m a big tea drinker and that’s what I think.</p>
</blockquote>
<p>妻子在 eBay 上订购了几卷感谢贴纸。结果却送来了这个。已经打电话要求退货了。这些是什么？绿色的圆柱形卷筒，闻起来像绿茶？作为一个喜欢喝茶的人，我是这么想的。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-14/茶棍.jpg" alt="茶棍"></p>
<blockquote>
<p>A: They kind of look like plant fertilizer sticks</p>
</blockquote>
<p>它们看起来有点像植物肥料棒。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/orkug9/wife_ordered_rolls_of_thank_you_stickers_on_ebay/">https://www.reddit.com/r/whatisthisthing/comments/orkug9/wife_ordered_rolls_of_thank_you_stickers_on_ebay/</a></p>
<h3 id="可口可乐"><a href="#可口可乐" class="headerlink" title="可口可乐"></a>可口可乐</h3><blockquote>
<p>Q: What is this thing on the bar counter at work? It is made of metal and hollow.</p>
</blockquote>
<p>工作的酒吧柜台上的这个东西是什么？它是由金属制成的，是空心的。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-14/可口可乐.jpg" alt="可口可乐"></p>
<blockquote>
<p>A: It’s an old fashioned countertop bottle opener, I’ve seen loads of these in old pubs. The bottles are opened from the other side.</p>
</blockquote>
<p>这是一种老式的台面开瓶器，我在老酒馆里见过很多这种开瓶器。瓶子从另一侧打开。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ovtwdb/what_is_this_thing_on_the_bar_counter_at_work_it/">https://www.reddit.com/r/whatisthisthing/comments/ovtwdb/what_is_this_thing_on_the_bar_counter_at_work_it/</a></p>
<h3 id="量子芯片"><a href="#量子芯片" class="headerlink" title="量子芯片"></a>量子芯片</h3><blockquote>
<p>Q: New bra I bought online has a “microchip” inside of it. Looks pretty fake to me but can’t pinpoint what is it exactly and why such lengths to have it inside the hems like this.</p>
</blockquote>
<p>我在网上买的新文胸里面有一个「微芯片」。在我看来很假，但不知道它到底是什么，也不知道为什么要把它放在这样的褶边里。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-14/量子芯片1.jpg" alt="量子芯片"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-14/量子芯片2.jpg" alt="量子芯片"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-14/量子芯片3.jpg" alt="量子芯片"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-14/量子芯片4.jpg" alt="量子芯片"></p>
<blockquote>
<p>A: Google says the Chinese text says ‘quantum computer’. I think this is just a marketing gag, without function.</p>
</blockquote>
<p>谷歌说上面的中文是「量子芯片」。我认为这只是一个营销噱头，没有任何作用。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/otxuxp/new_bra_i_bought_online_has_a_microchip_inside_of/">https://www.reddit.com/r/whatisthisthing/comments/otxuxp/new_bra_i_bought_online_has_a_microchip_inside_of/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing 15</title>
    <url>/2021/09/22/whatisthisthing-15/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="窗上的怪圈"><a href="#窗上的怪圈" class="headerlink" title="窗上的怪圈"></a>窗上的怪圈</h3><blockquote>
<p>Q: These strange dust patterns keep showing up on screens of my apartment windows.</p>
</blockquote>
<p>这些奇怪的灰尘图案不断出现在我公寓窗户的窗纱上。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-15/怪圈.jpg" alt="怪圈"></p>
<blockquote>
<p>A: Previous tenant smoked w a fan in the window. I’ve seen this so many times turning over apartments for work.<br>That mark is going to keep coming back until you wash the entire window screen.<br>I suggest removing the screen and washing it in the tub with a good dish soap.</p>
</blockquote>
<p>前任房客在窗户上用风扇吸烟。我为工作而经常换公寓，见过很多次这样的情况。</p>
<p>在你清洗整个窗纱之前，这个印记会不断出现。</p>
<p>我建议把窗纱拆下来，在浴缸里用好的洗洁精清洗。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/pnk4xn/these_strange_dust_patterns_keep_showing_up_on/">https://www.reddit.com/r/whatisthisthing/comments/pnk4xn/these_strange_dust_patterns_keep_showing_up_on/</a></p>
<h3 id="OK-绷"><a href="#OK-绷" class="headerlink" title="OK 绷"></a>OK 绷</h3><blockquote>
<p>Q: This was in my bandaid wrapper instead of a bandaid. Almost rubbery. Solid construction, not sticky, same on opposite side.</p>
</blockquote>
<p>这是在我的创可贴包装中发现的，而不是创可贴。几乎像橡胶一样。结构牢固，没有粘性，反面也一样。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-15/OK绷.jpeg" alt="OK绷"></p>
<blockquote>
<p>A: Looks like a manufacturing error where that may be the start, or end, of a production run. Either that or a golden ticket to see Billy Blanca at the band aid factory.</p>
</blockquote>
<p>看起来是一个制造错误，这可能是生产的开始，或结束。要么就是一张去创可贴工厂见比利·布兰卡的金票。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/pmum0w/this_was_in_my_bandaid_wrapper_instead_of_a/">https://www.reddit.com/r/whatisthisthing/comments/pmum0w/this_was_in_my_bandaid_wrapper_instead_of_a/</a></p>
<h3 id="金属圆柱体"><a href="#金属圆柱体" class="headerlink" title="金属圆柱体"></a>金属圆柱体</h3><blockquote>
<p>Q: I saw this in a theater, what it this piece of metal ? (8 years questioning myself. Please help)</p>
</blockquote>
<p>我在剧院里看到这个，这块金属是什么？（一个困扰我 8 年的问题，请帮帮我）</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-15/圆柱体金属.jpg" alt="圆柱体金属"></p>
<blockquote>
<p>A: Solved ! It seems it’s a light but school didn’t pay for this option.</p>
</blockquote>
<p>解决了! 这似乎是一盏灯，但这是选配的，学校没有买。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/pkadad/i_saw_this_in_a_theater_what_it_this_piece_of/">https://www.reddit.com/r/whatisthisthing/comments/pkadad/i_saw_this_in_a_theater_what_it_this_piece_of/</a></p>
<h3 id="小便池"><a href="#小便池" class="headerlink" title="小便池"></a>小便池</h3><blockquote>
<p>Q: What is this toilet’s purpose? No additional details available.</p>
</blockquote>
<p>这个厕所的用途是什么？没有其他细节。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-15/小便池.jpg" alt="小便池"></p>
<blockquote>
<p>A urinal for women: <a href="https://deabath.com/product/1950s-vintage-standard-female-urinal-prop-rental/">https://deabath.com/product/1950s-vintage-standard-female-urinal-prop-rental/</a></p>
<blockquote>
<p>Here we have a 1950’s Standard “Sanistand” Female urinal. Strangely enough, these weren’t terribly popular, but Standard did make them between the mid-1950’s up through the early 1960’s.</p>
</blockquote>
</blockquote>
<p>女用小便池：<a href="https://deabath.com/product/1950s-vintage-standard-female-urinal-prop-rental/">https://deabath.com/product/1950s-vintage-standard-female-urinal-prop-rental/</a></p>
<blockquote>
<p>我们这里有一个1950年代的标准「Sanistand」女式小便池。奇怪的是，这些小便池并不十分流行，但标准公司在 20 世纪 50 年代中期至 60 年代初期间确实生产了这些小便池。</p>
</blockquote>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-15/小便池2.jpg" alt="小便池"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-15/小便池3.jpg" alt="小便池"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-15/小便池4.jpg" alt="小便池"></p>
<h3 id="紧急"><a href="#紧急" class="headerlink" title="紧急"></a>紧急</h3><blockquote>
<p>Q: Large, white container found on flatbed on the highway in Midwest US. Says “Urgent” on the label.</p>
</blockquote>
<p>在美国中西部高速公路的平板车上发现的大型白色集装箱，标签上写着「紧急」。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-15/集装箱.jpg" alt="集装箱"></p>
<blockquote>
<p>A: It’s a shipping container for a General Electric CF34 Turbofan Engine, commonly fitted to Embraer and Bombardier Jets.<br>It’ll be urgent because there will be an Aircraft sat on the ground waiting for it (AOG).</p>
</blockquote>
<p>这是一个装着通用电气CF34涡轮风扇发动机的运输集装箱，通常安装在巴西航空工业公司和庞巴迪飞机上。</p>
<p>它很紧急，因为会有一架飞机在地面上等着它（AOG）。</p>
<p>（译者注：AOG 应该是 <a href="https://en.wikipedia.org/wiki/Aircraft_on_ground">Aircraft on ground</a>，表示问题严重到足以阻止飞机飞行。）</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/piy9gc/large_white_container_found_on_flatbed_on_the/">https://www.reddit.com/r/whatisthisthing/comments/piy9gc/large_white_container_found_on_flatbed_on_the/</a></p>
<h3 id="混凝土箱"><a href="#混凝土箱" class="headerlink" title="混凝土箱"></a>混凝土箱</h3><blockquote>
<p>Q: Large concrete containers with slab lid. Completely enclosed. Being buried together. Hundreds.</p>
</blockquote>
<p>大型混凝土容器，带板状盖子。完全封闭的。被埋在一起。数以百计。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-15/混凝土箱.jpg" alt="混凝土箱"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-15/混凝土箱2.jpg" alt="混凝土箱"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-15/混凝土箱3.jpg" alt="混凝土箱"></p>
<blockquote>
<p>A: Spread out along a roadway makes me think they’re used for storm water retention and they will be drilled for pipe connections once they are buried</p>
</blockquote>
<p>沿着道路铺开，让我觉得它们是用来保留雨水的，一旦被掩埋，它们将被钻进管道连接。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/pf8foh/large_concrete_containers_with_slab_lid/">https://www.reddit.com/r/whatisthisthing/comments/pf8foh/large_concrete_containers_with_slab_lid/</a></p>
<h3 id="白色团块"><a href="#白色团块" class="headerlink" title="白色团块"></a>白色团块</h3><blockquote>
<p>Q: White blob in a bottled vitamin water</p>
</blockquote>
<p>瓶装维生素水中的白色团块。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-15/白色团块.jpg" alt="白色团块"></p>
<blockquote>
<p>A: Looks like a fungal colony to me. Source: microbiologist.</p>
</blockquote>
<p>对我来说看起来像一个真菌菌落。 来源：微生物学家。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/pif0ye/white_blob_in_a_bottled_vitamin_water/">https://www.reddit.com/r/whatisthisthing/comments/pif0ye/white_blob_in_a_bottled_vitamin_water/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing 2</title>
    <url>/2020/09/16/whatisthisthing-2/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="瓦片"><a href="#瓦片" class="headerlink" title="瓦片"></a>瓦片</h3><blockquote>
<p>Q: Slave Tile?? Found at an antique store in Orlando. WITT</p>
</blockquote>
<p>奴隶瓦片？在一家奥兰多的古董店里找到的。这是个嘛？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-2/slave-tile.jpg" alt="weird-notes-2.jpg"></p>
<!-- <img data-src="/2020/09/16/whatisthisthing-2/slave-tile.jpg" class="slave-tile"> -->
<blockquote>
<p>A: Tiles of this type were reportedly made and used by slaves in Georgia as grave markers and garden tiles.</p>
</blockquote>
<p>据说，这种类型的瓦片是乔治亚州的奴隶制造的，被用于墓碑和花园的瓦片。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/it9uvo/slave_tile_found_at_an_antique_store_in_orlando/">https://www.reddit.com/r/whatisthisthing/comments/it9uvo/slave_tile_found_at_an_antique_store_in_orlando/</a></p>
<h3 id="被裱起来的电路板"><a href="#被裱起来的电路板" class="headerlink" title="被裱起来的电路板"></a>被裱起来的电路板</h3><blockquote>
<p>Q: Framed old circuit board. Belonged to my great uncle. I’m curious to know what it was used for and why it might have been framed.</p>
</blockquote>
<p>被装裱起来的旧电路板，属于我的叔公，我很想知道它是做什么的，为什么要被裱起来。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-2/circuit-board-1.jpg" alt="circuit-board-1.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-2/circuit-board-2.jpg" alt="circuit-board-2.jpg"></p>
<!-- <img data-src="/2020/09/16/whatisthisthing-2/circuit-board-1.jpg" class="circuit-board-1"> -->
<!-- <img data-src="/2020/09/16/whatisthisthing-2/circuit-board-2.jpg" class="circuit-board-2"> -->
<blockquote>
<p>A: ml747m seems to be an op amp. date code is 1973. so it is some sort of analog circuit. maybe your great uncle designed it. i have many of the boards i have designed mounted in frames and hanging on the wall.</p>
</blockquote>
<p>ML747M 看起来像一个运算放大器，日期代码是 1973。所以这应该是某种模拟电路。或许这是你的叔公设计的。我设计的很多板子都放在框架中挂在了墙上。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ipdjs5/framed_old_circuit_board_belonged_to_my_great/">https://www.reddit.com/r/whatisthisthing/comments/ipdjs5/framed_old_circuit_board_belonged_to_my_great/</a></p>
<h3 id="组装带"><a href="#组装带" class="headerlink" title="组装带"></a>组装带</h3><blockquote>
<p>Q: “Assembly tape” on my Pop-Tart this morning. It’s also on the inside of the wrapper.</p>
</blockquote>
<p>早上在「Pop-Tart」上发现的组装带，在包装袋的内部也有。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-2/assembly-tape-1.jpg" alt="assembly-tape-1.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-2/assembly-tape-2.jpg" alt="assembly-tape-2.jpg"></p>
<!-- <img data-src="/2020/09/16/whatisthisthing-2/assembly-tape-1.jpg" class="assembly-tape-1"> -->
<!-- <img data-src="/2020/09/16/whatisthisthing-2/assembly-tape-2.jpg" class="assembly-tape-2"> -->
<blockquote>
<p>A: Splice from film change on flow wrapper during processing. When one roll of “wrapper” is exhausted the next roll is taped to the tag end to run it through the equipment. High visibility tape typically ensures it is removed downstream in the production process.</p>
</blockquote>
<p>这种胶接来自包装生产线的上薄膜的变化，当一卷组装带用完时，下一卷组装带粘贴到标签端使其穿过设备。这种看起来非常明显的胶带，通常可以确保在生产线下游发现并移除他们。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/iqooe6/assembly_tape_on_my_poptart_this_morning_its_also/">https://www.reddit.com/r/whatisthisthing/comments/iqooe6/assembly_tape_on_my_poptart_this_morning_its_also/</a></p>
<h3 id="铁片"><a href="#铁片" class="headerlink" title="铁片"></a>铁片</h3><blockquote>
<p>Q: Found metal detecting outside of an old church.</p>
</blockquote>
<p>在一座老教堂外边发现的铁片。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-2/metal.jpg" alt="metal.jpg"></p>
<!-- <img data-src="/2020/09/16/whatisthisthing-2/metal.jpg" class="metal"> -->
<blockquote>
<p>A: It looks like a Ferrotype photograph. They started being used in the 1850s’s.</p>
</blockquote>
<p>这个看起来像一个铁板照片，在19世纪50年代开始使用。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/iq4lj3/found_metal_detecting_outside_of_an_old_church/">https://www.reddit.com/r/whatisthisthing/comments/iq4lj3/found_metal_detecting_outside_of_an_old_church/</a></p>
<h3 id="天花板上的钥匙"><a href="#天花板上的钥匙" class="headerlink" title="天花板上的钥匙"></a>天花板上的钥匙</h3><blockquote>
<p>Q: Key in the ceiling at school</p>
</blockquote>
<p>学校天花板上的钥匙。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-2/key.jpg" alt="key.jpg"></p>
<!-- <img data-src="/2020/09/16/whatisthisthing-2/key.jpg" class="key"> -->
<blockquote>
<p>A: This could be to test duct detectors in a fire alarm system. Duct detectors will shut off the air conditioning unit if it senses smoke to prevent it from circulating the air.</p>
</blockquote>
<p>这个可能是为了测试火灾报警系统中的风管探测器，如果风管探测器检测到烟雾，它将关闭空调，防止空气流通。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ir4ivm/key_in_the_ceiling_at_school/">https://www.reddit.com/r/whatisthisthing/comments/ir4ivm/key_in_the_ceiling_at_school/</a></p>
<h3 id="谷歌地图"><a href="#谷歌地图" class="headerlink" title="谷歌地图"></a>谷歌地图</h3><blockquote>
<p>Q: Found on Google maps in the Yukon/Delta region in Alaska, went back to look for it agaun after screen shot but couldn’t find anything. What is it?</p>
</blockquote>
<p>使用谷歌地图在阿拉斯加州的育空三角洲地区的找到的，截图下来继续查找，没有任何发现，这个是什么？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-2/LORAN.jpg" alt="LORAN.jpg"></p>
<!-- <img data-src="/2020/09/16/whatisthisthing-2/LORAN.jpg" class="LORAN"> -->
<blockquote>
<p>A: <a href="https://goo.gl/maps/Te4nCUtFCKzBckfJ8">Here it is</a><br><a href="https://www.loran-history.info/tok/tok.htm">Here’s some information on it.</a> Decommissioned LORAN array.</p>
</blockquote>
<p>一个正式停用的远距离无线电导航系统阵列。</p>
<p>（译者注：英文缩写 LORAN，为「Long Range Navigation」（远程导航）的缩写，中文音译为「罗兰」或「劳兰」，是在二战期间由美国开发的一种无线电导航及授时系统。目前已衍生了多个版本。）</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ip68ur/found_on_google_maps_in_the_yukondelta_region_in/">https://www.reddit.com/r/whatisthisthing/comments/ip68ur/found_on_google_maps_in_the_yukondelta_region_in/</a></p>
<h3 id="钟"><a href="#钟" class="headerlink" title="钟"></a>钟</h3><blockquote>
<p>Q: Weird old bell found in the Hudson Valley.</p>
</blockquote>
<p>哈德逊河谷发现的怪异的古钟。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-2/bell.jpg" alt="bell.jpg"></p>
<!-- <img data-src="/2020/09/16/whatisthisthing-2/bell.jpg" class="bell"> -->
<blockquote>
<p>A: Dutch East Indian Nautical bell?</p>
</blockquote>
<p>荷兰东印度航海钟？</p>
<blockquote>
<p>A: Vereenigde Oostindische Compagnie</p>
</blockquote>
<p>荷兰东印度公司</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/iq3ij4/weird_old_bell_found_in_the_hudson_valley/">https://www.reddit.com/r/whatisthisthing/comments/iq3ij4/weird_old_bell_found_in_the_hudson_valley/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing 3</title>
    <url>/2020/09/17/whatisthisthing-3/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="跳绳"><a href="#跳绳" class="headerlink" title="跳绳"></a>跳绳</h3><blockquote>
<p>Q: Jump Rope Spike? Two spring covered spikes connected with paracord</p>
</blockquote>
<p>带钉子的跳绳？两个带有钉子的弹性握把被伞绳连接在了一起。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/JumpRope.jpg" alt="JumpRope.jpg"></p>
<!-- <img data-src="/2020/09/17/whatisthisthing-3/JumpRope.jpg" class="JumpRope"> -->
<blockquote>
<p>A: They are rescue grips for things like ice fishing. Run the cord through your jacket sleeves and the spikesv are at hand if you fall through the ice.</p>
</blockquote>
<p>这是用于类似冰钓的时候的救援物。将绳子穿过夹克的袖子，这样当你落水时，钉子就在你触手可及的地方。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/itl1j2/jump_rope_spike_two_spring_covered_spikes/">https://www.reddit.com/r/whatisthisthing/comments/itl1j2/jump_rope_spike_two_spring_covered_spikes/</a></p>
<h3 id="狗牌"><a href="#狗牌" class="headerlink" title="狗牌"></a>狗牌</h3><blockquote>
<p>Q: WITT My dad passed away early Monday morning and my siblings and I are in the process of cleaning out his things from his room. We found these items in a jewelry box with his US Air Force dog tag from Vietnam. Quite obviously they’re pins, but I’m looking for some help identifying them- if they are from his service and if not, what they might be from. He didn’t much like to talk about his time in the military.</p>
</blockquote>
<p>这是什么？我爸爸在星期一清晨去世了，我和我的兄弟姐妹们在清理他房间里的东西，我们在一个装有他越南的美国空军狗牌的首饰盒里发现了这些东西，很明显这些是别针。我们在寻找能够帮我们鉴别它们的信息，如果它们是他服役期间的，如果不是的话，那这些又是什么呢？他不太愿意谈论他在军队时候的日子。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/DogTag.jpg" alt="DogTag.jpg"></p>
<!-- <img data-src="/2020/09/17/whatisthisthing-3/DogTag.jpg" class="DogTag"> -->
<blockquote>
<p>A: Top 2 are pins of the PAVN of a major general rank and a corporal. Third pin too blurry. 4th pin dont know. Top 2 pins are obviously “war souvenirs”.</p>
</blockquote>
<p>前两枚是少将和下士的徽章，第三枚太模糊了，第四枚没清楚。前两枚徽章显然是「战争纪念品」。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ir4snh/my_dad_passed_on_monday_and_in_the_process_of/">https://www.reddit.com/r/whatisthisthing/comments/ir4snh/my_dad_passed_on_monday_and_in_the_process_of/</a></p>
<h3 id="肩章"><a href="#肩章" class="headerlink" title="肩章"></a>肩章</h3><blockquote>
<p>Q: Buddy bought a shop, the shop had a military uniform in the attic. Appears WWII era. What does this patch mean?</p>
</blockquote>
<p>朋友盘了家商店，商店的阁楼上发现了这件军装，出现在二战时期，这个标志是什么意思？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/insignia.jpg" alt="insignia.jpg"></p>
<!-- <img data-src="/2020/09/17/whatisthisthing-3/insignia.jpg" class="insignia"> -->
<blockquote>
<p>A: The six pointed star is significant of the number “six” and the red letter “A” signifies “Army.” The red and white colors are the colors of the design approved for distinguishing flags for the numbered Armies.<br>The shoulder sleeve insignia was originally approved for the Sixth Army on 26 January 1927. The original design was cancelled and a new design approved on 10 January 1945. It was amended to change the background color from olive drab to Army Green on 6 December 1960.<br><a href="http://www.milbadges.com/corps/USA/field">From here:</a></p>
</blockquote>
<p>美国第六陆军，肩袖徽章。</p>
<p>六个尖角代表数字六，红色的A代表军队（Army）。红色和白色是批准用于区分编号的陆军旗帜的设计颜色。</p>
<p>最初在1927年1月26日第六军批准了肩袖徽章。原来的设计被取消，新的设计于1945年1月10日获得批准。1960年12月6日，修改后的背景色由橄榄色改为军绿色。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/insignia.gif" alt="insignia.gif"></p>
<!-- <img data-src="/2020/09/17/whatisthisthing-3/insignia.gif" class="insignia"> -->
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/irtrnq/buddy_bought_a_shop_the_shop_had_a_military/">https://www.reddit.com/r/whatisthisthing/comments/irtrnq/buddy_bought_a_shop_the_shop_had_a_military/</a></p>
<h3 id="洞"><a href="#洞" class="headerlink" title="洞"></a>洞</h3><blockquote>
<p>Q: Built into the side of a small hill in SE Pennsylvania. Doorway is about 4-5’ high. This road used to be well traveled before cars came along. Very close to a creek.</p>
</blockquote>
<p>建在宾夕法尼亚州东南部一座小山上。门口大约有4-5英尺高。这条路在汽车出现之前行人就很多了。离小溪很近。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/LimeKilns.jpg" alt="LimeKilns.gif"></p>
<!-- <img data-src="/2020/09/17/whatisthisthing-3/LimeKilns.jpg" class="LimeKilns"> -->
<blockquote>
<p>A: kind’a resembles old historic lime kilns</p>
</blockquote>
<p>有几分像有着古老历史的石灰窑。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/irid2p/built_into_the_side_of_a_small_hill_in_se/">https://www.reddit.com/r/whatisthisthing/comments/irid2p/built_into_the_side_of_a_small_hill_in_se/</a></p>
<h3 id="艺术品"><a href="#艺术品" class="headerlink" title="艺术品"></a>艺术品</h3><blockquote>
<p>Q: I found this glass type thing while digging in my yard. It was about 2 feet deep in the dirt, as in the first picture, and it is 16.5 pounds or 7.5kg.</p>
</blockquote>
<p> 我在院子里挖东西的时候发现了这个玻璃样的东西。就和第一张照片一样，它被埋在泥土中大约有2英尺深，重16.5磅(7.5公斤)。</p>
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/glass1.png" alt="glass1.png"></p>
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/glass2.jpg" alt="glass2.jpg"></p>
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/glass3.jpg" alt="glass3.jpg"></p>
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/glass4.jpg" alt="glass4.jpg"></p>
 <!--  -->
 <!-- <img data-src="/2020/09/17/whatisthisthing-3/glass2.jpg" class="glass2"> -->
 <!-- <img data-src="/2020/09/17/whatisthisthing-3/glass3.jpg" class="glass3"> -->
 <!-- <img data-src="/2020/09/17/whatisthisthing-3/glass4.jpg" class="glass4"> -->
<blockquote>
<p>A: Looks like <a href="https://www.google.com/search?q=white+slag+glass+chunks&amp;safe=active&amp;rlz=1CAPPDO_enUS786US786&amp;sxsrf=ALeKk02rK8k0TcJIDPGZVwPSi-BkUJCKaQ:1600028469435&amp;source=lnms&amp;tbm=isch&amp;sa=X&amp;ved=2ahUKEwjb6bPE-ubrAhWids0KHQDXCywQ_AUoAnoECA0QBA&amp;biw=1318&amp;bih=665">slag glass</a>. It may have been used for decoration.</p>
</blockquote>
<p> 看起来像炉渣玻璃，它可能被用来装饰。</p>
<blockquote>
<p>A: Popular in the art nouveau and Craftsman styles and again in the ‘50s.</p>
</blockquote>
<p>在新艺术和工匠风格中流行，在50年代再次流行。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/is5nux/i_found_this_glass_type_thing_while_digging_in_my/">https://www.reddit.com/r/whatisthisthing/comments/is5nux/i_found_this_glass_type_thing_while_digging_in_my/</a></p>
<h3 id="绝对是古董"><a href="#绝对是古董" class="headerlink" title="绝对是古董"></a>绝对是古董</h3><blockquote>
<p>Q: Found while cleaning up my parents estate, never seen anything like it before. It’s rusted and definitely antique</p>
</blockquote>
<p>在清理父母的财产时发现的，之前从未见过类似的东西。生锈了，绝对是古董。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/CandleTommy.jpg" alt="CandleTommy.jpg"></p>
<!-- <img data-src="/2020/09/17/whatisthisthing-3/CandleTommy.jpg" class="CandleTommy"> -->
<blockquote>
<p>A: I think that’s a <a href="https://www.google.com/search?q=miner%27s+candle+holder&amp;safe=active&amp;rlz=1CAPPDO_enUS786US786&amp;sxsrf=ALeKk03M6eSF7tFqPtzsxrUYRzmgcOtKbQ:1599781113489&amp;source=lnms&amp;tbm=isch&amp;sa=X&amp;ved=2ahUKEwjQlPOH4d_rAhWWHM0KHQpCAZAQ_AUoAnoECA4QBA&amp;biw=1318&amp;bih=665">miner’s candle holder</a>. It would have been stuck into a timber. It’s called a sticking tommy</p>
</blockquote>
<p>我觉得这是个矿工用的烛台，它被卡在木头中。它叫做 sticking tommy（不知道咋翻译了）</p>
<p>注：去找了下它的使用办法，直接看图：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/CandleTommy2.jpg" alt="CandleTommy.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/CandleTommy3.jpg" alt="CandleTommy.jpg"></p>
<!-- <img data-src="/2020/09/17/whatisthisthing-3/CandleTommy2.jpg" class="CandleTommy2"> -->
<!-- <img data-src="/2020/09/17/whatisthisthing-3/CandleTommy3.jpg" class="CandleTommy3"> -->
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/iqetl8/found_while_cleaning_up_my_parents_estate_never/">https://www.reddit.com/r/whatisthisthing/comments/iqetl8/found_while_cleaning_up_my_parents_estate_never/</a></p>
<h3 id="一战"><a href="#一战" class="headerlink" title="一战"></a>一战</h3><blockquote>
<p>Q: WWI-era army tool found in a bag of rifle and pistol rounds</p>
</blockquote>
<p>在一袋步枪和手枪子弹中发现的一战时期的军用工具</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-3/WWI.jpg" alt="WWI.jpg"></p>
<!-- <img data-src="/2020/09/17/whatisthisthing-3/WWI.jpg" class="WWI"> -->
<blockquote>
<p>A: This is a tool used to tear down the rifle for maintenance and cleaning. It can also help adjust the sights of the rifle.</p>
</blockquote>
<p>这是一种用来拆卸步枪进行维护和清洁的工具。它还可以帮助调整步枪的瞄准器。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/iqsnqx/wwiera_army_tool_found_in_a_bag_of_rifle_and/">https://www.reddit.com/r/whatisthisthing/comments/iqsnqx/wwiera_army_tool_found_in_a_bag_of_rifle_and/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing 4</title>
    <url>/2020/12/25/whatisthisthing-4/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="地下通道"><a href="#地下通道" class="headerlink" title="地下通道"></a>地下通道</h3><blockquote>
<p>Q: Tunnel in basement of Pennsylvania rowhouse</p>
</blockquote>
<p>宾夕法尼亚州排屋的地窖中的隧道。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Tunnel-1.jpg" alt="Tunnel-1.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Tunnel-2.jpg" alt="Tunnel-2.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Tunnel-3.jpg" alt="Tunnel-3.jpg"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Tunnel-1.jpg" class="Tunnel-1"> -->
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Tunnel-2.jpg" class="Tunnel-2"> -->
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Tunnel-3.jpg" class="Tunnel-3"> -->
<blockquote>
<p>A: Coal delivery, perhaps.</p>
</blockquote>
<p>可能是用来煤炭运输。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kiwfj7/tunnel_in_basement_of_pennsylvania_rowhouse/">https://www.reddit.com/r/whatisthisthing/comments/kiwfj7/tunnel_in_basement_of_pennsylvania_rowhouse/</a></p>
<h3 id="球"><a href="#球" class="headerlink" title="球"></a>球</h3><blockquote>
<p>Q: What is this attachment and why is it round?</p>
</blockquote>
<p>这个附着物是什么？为什么它是圆的？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Ball.jpg" alt="Ball.jpg"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Ball.jpg" class="Ball"> -->
<blockquote>
<p>A: I doubt it is, but it looks like an anchor buoy to me.</p>
</blockquote>
<p>我不太确定，但是在我看来，它像是个锚浮标。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k505lm/what_is_this_attachment_and_why_is_it_round/">https://www.reddit.com/r/whatisthisthing/comments/k505lm/what_is_this_attachment_and_why_is_it_round/</a></p>
<h3 id="沙子"><a href="#沙子" class="headerlink" title="沙子"></a>沙子</h3><blockquote>
<p>Q: What is this thing: some beach sand in Ecuador is magnetic.</p>
</blockquote>
<p>这是个啥？厄瓜多尔的沙滩看起来是有磁性的。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Ironsand.jpg" alt="Ironsand.jpg"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Ironsand.jpg" class="Ironsand"> -->
<blockquote>
<p>A: Probably a bunch of iron Like here: <a href="https://en.m.wikipedia.org/wiki/Ironsand">https://en.m.wikipedia.org/wiki/Ironsand</a></p>
</blockquote>
<p>可能是一堆铁，就像维基百科说的一样：<a href="https://en.m.wikipedia.org/wiki/Ironsand">https://en.m.wikipedia.org/wiki/Ironsand</a></p>
<p>铁砂，也称为铁砂或铁砂，是一种铁含量高的砂。它通常是深灰色或黑色。它主要由磁铁矿，Fe₃O₄，以及还含有少量的钛，二氧化硅，锰，钙和钒。铁砂在阳光直射下容易变热，导致温度高到足以引起轻微灼伤。因此，在新西兰皮哈（Piha）等受欢迎的西海岸冲浪海滩上，它构成了危害。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/khgtin/what_is_this_thing_some_beach_sand_in_ecuador_is/">https://www.reddit.com/r/whatisthisthing/comments/khgtin/what_is_this_thing_some_beach_sand_in_ecuador_is/</a></p>
<h3 id="薯片"><a href="#薯片" class="headerlink" title="薯片"></a>薯片</h3><blockquote>
<p>Q: What is this brown bumpy thing on my Pringle??</p>
</blockquote>
<p>我的品客薯片上的这些个棕色小东西是什么？？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Pringle.jpg" alt="Pringle.jpg"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Pringle.jpg" class="Pringle"> -->
<blockquote>
<p>A: The previous Pringle that didn’t completely make it out of the rolling mold. Pringles aren’t sliced potatoes, they are mashed potatoes pressed flat and cut like cookies. That’s a stuck previous Pringle. <a href="https://youtu.be/YDUTOo2tq3k">https://youtu.be/YDUTOo2tq3k</a></p>
</blockquote>
<p>之前的品客薯片并没有完全成型。品客薯片不是切成片的土豆，它们是压扁并切得像饼干一样的土豆泥。</p>
<iframe src="//player.bilibili.com/player.html?aid=373272953&bvid=BV18Z4y137Mz&cid=270707762&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k9mp1l/what_is_this_brown_bumpy_thing_on_my_pringle/">https://www.reddit.com/r/whatisthisthing/comments/k9mp1l/what_is_this_brown_bumpy_thing_on_my_pringle/</a></p>
<h3 id="玻璃筒"><a href="#玻璃筒" class="headerlink" title="玻璃筒"></a>玻璃筒</h3><blockquote>
<p>Q: I found these in my grandmothers house (germany), they are made of thin glass. Unfortunately there is no box cover explaining what they are.</p>
</blockquote>
<p>我在我奶奶的房子（德国）里发现了这些，它们是用薄玻璃做的。不幸的是，没有盒子盖解释它们是什么。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Glass.jpg" alt="Glass.jpg"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Glass.jpg" class="Glass"> -->
<blockquote>
<p>A: They are for flower decoration. One singular flower goes in the tube. There is probably a stand for them somewhere around, but some people like to stick them in foam together with other decorations, or in pieces of driftwood with holes drilled into them, or even into other flowerpots.I saw very similar ones in the Bodenmais Glasmanufaktur</p>
</blockquote>
<p>它们是用来装饰花卉的。一朵奇异的花在花筒里。也许在附近的什么地方有一个供它们用的架子，但有些人喜欢把它们和其他装饰品一起用泡沫塑料粘在一起，或者用钻了洞的浮木碎片粘在一起，甚至把它们粘在别的花盆里。我在博登迈斯（德国）的玻璃制造厂见过。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Glass2.jpg" alt="Glass2.jpg"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Glass2.jpg" class="Glass2"> -->
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k8fzsw/i_found_these_in_my_grandmothers_house_germany/">https://www.reddit.com/r/whatisthisthing/comments/k8fzsw/i_found_these_in_my_grandmothers_house_germany/</a></p>
<h3 id="公交车站"><a href="#公交车站" class="headerlink" title="公交车站"></a>公交车站</h3><blockquote>
<p>Q: What is this thing I saw above a bus station in Germany?</p>
</blockquote>
<p>我在德国的公交车站台上方看到的是什么？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Bus.jpg" alt="Bus.jpg"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Bus.jpg" class="Bus"> -->
<blockquote>
<p>A: It’s a charging station for electric/hybrid busses. They usually put these at the station where the line terminates, so the bus can sit and charge for the 10-15 minutes before it starts its next route. At least that’s how they work in Sweden.</p>
</blockquote>
<p>这是电动/混合动力巴士的充电站。他们通常把这些装置放在线路的终点站，这样公交车就可以坐下来充电10-15分钟，然后再开始下一条线路。至少在瑞典是这样的。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k5yd8p/what_is_this_thing_i_saw_above_a_bus_station_in/">https://www.reddit.com/r/whatisthisthing/comments/k5yd8p/what_is_this_thing_i_saw_above_a_bus_station_in/</a></p>
<h3 id="炸药"><a href="#炸药" class="headerlink" title="炸药"></a>炸药</h3><blockquote>
<p>Q: What explosive is this? Found in an attic today. Diameter: ~10cm</p>
</blockquote>
<p>这是什么炸药，今天在阁楼上发现的，直径大概十厘米。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Explosive.jpg" alt="Explosive.jpg"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Explosive.jpg" class="Explosive"> -->
<blockquote>
<p>A: Deactivated or not, it’s still nothing you want to have in your home, and might quite possibly be illegal to possess, depending on where you live.</p>
</blockquote>
<p>不管是否失效，它仍然不是你想在家里拥有的东西，而且拥有它很可能是非法的，这取决于你住在哪里。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kgum9e/what_explosive_is_this_found_in_an_attic_today/">https://www.reddit.com/r/whatisthisthing/comments/kgum9e/what_explosive_is_this_found_in_an_attic_today/</a></p>
<h3 id="Cybertruck"><a href="#Cybertruck" class="headerlink" title="Cybertruck"></a>Cybertruck</h3><blockquote>
<p>Q: I have seen a couple of these truck covers and have no idea what it’s purpose is.</p>
</blockquote>
<p>我见过蛮多辆这样子的卡车了，但是我不知道它的用途是什么。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Cybertruck.jpg" alt="Cybertruck.jpg"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Cybertruck.jpg" class="Cybertruck"> -->
<blockquote>
<p>A: Its a tent. For camping</p>
</blockquote>
<p>这个是用来露营的帐篷。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k5gmsd/i_have_seen_a_couple_of_these_truck_covers_and/">https://www.reddit.com/r/whatisthisthing/comments/k5gmsd/i_have_seen_a_couple_of_these_truck_covers_and/</a></p>
<h3 id="打麻将"><a href="#打麻将" class="headerlink" title="打麻将"></a>打麻将</h3><blockquote>
<p>Q: Found some old Oriental silk garments of my great grandfathers.</p>
</blockquote>
<p>发现了我曾祖父的一些古老的东方丝绸服装。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Garments.jpg" alt="Garments.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-4/Garments2.jpg" alt="Garments2.jpg"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Garments.jpg" class="Garments"> -->
<!-- <img data-src="/2020/12/25/whatisthisthing-4/Garments2.jpg" class="Garments2"> -->
<blockquote>
<p>A: Dressing in robes like these to play mah jong was quite in vogue in the 1920s-30s.</p>
</blockquote>
<p>在20世纪二三十年代，穿这样的长袍打麻将相当流行。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/jzpw4e/found_some_old_oriental_silk_garments_of_my_great/">https://www.reddit.com/r/whatisthisthing/comments/jzpw4e/found_some_old_oriental_silk_garments_of_my_great/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing 5</title>
    <url>/2020/12/25/whatisthisthing-5/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="桶"><a href="#桶" class="headerlink" title="桶"></a>桶</h3><blockquote>
<p>Q: Huge metal cylinder found in the middle of the woods (Central Pennsylvania)</p>
</blockquote>
<p>在树林中发现的巨大金属圆筒（宾夕法尼亚州中部）</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/桶.jpg" alt="桶"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E6%A1%B6.jpg" class="桶"> -->
<blockquote>
<p>A: It’s an “upright” tank for fluid storage. Normally 12’ diameter and 20’ tall, they hold 400 barrels of fluid. This one is laid on its side, which is how most are transported.<br>Used in oilfield applications, this one was probably ditched illegally because it has been exposed to or contains excessive amounts of NORM or naturally occurring radioactive material. NORM is present in small amounts in produced fluids, builds up in storage tanks over time and is very expensive to get rid of.<br>See this for some examples of modern versions.</p>
</blockquote>
<p>这是一个用来储存液体的「立式」容器。它们通常直径 12 英尺，高 20 英尺，可容纳 400 桶（47600 升）液体。这个桶是侧卧的，大多数都是这样运输的。</p>
<p>在油田应用中，使用的这一种可能是非法丢弃的，因为它暴露于或含有过量的标准或自然产生的放射性物质。天然放射物质以少量的形式存在于生产流体中，随着时间的推移在储存罐中积累，并且去除它非常昂贵。</p>
<p>看看这些现代版本的样子。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/桶2.jpg" alt="桶"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/桶3.jpg" alt="桶"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/桶4.jpg" alt="桶"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/桶5.jpg" alt="桶"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E6%A1%B62.jpg" class="桶"> -->
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E6%A1%B63.jpg" class="桶"> -->
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E6%A1%B64.jpg" class="桶"> -->
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E6%A1%B65.jpg" class="桶"> -->
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k2q3x9/huge_metal_cylinder_found_in_the_middle_of_the/">https://www.reddit.com/r/whatisthisthing/comments/k2q3x9/huge_metal_cylinder_found_in_the_middle_of_the/</a></p>
<h3 id="机器人"><a href="#机器人" class="headerlink" title="机器人"></a>机器人</h3><blockquote>
<p>Q: Strange Robot Friend Neighbors Trashed After Moving Out</p>
</blockquote>
<p>邻居们都在吐槽被搬出去的奇怪机器人。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/机器人1.jpg" alt="机器人"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/机器人2.jpg" alt="机器人"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E6%9C%BA%E5%99%A8%E4%BA%BA1.jpg" class="机器人"> -->
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E6%9C%BA%E5%99%A8%E4%BA%BA2.jpg" class="机器人"> -->
<blockquote>
<p>A: My guess is a robot used for a laser tag game. The thing is holding a blaster and the eyes likely have sort of photocell or means to detect the laser. Laser tags were big back in the 90s.</p>
</blockquote>
<p>我猜是用来玩激光枪战游戏的机器人。这东西拿着一个爆破器，眼睛可能有某种光电池或手段来探测激光。激光枪战在 90 年代很流行。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k3v3q8/strange_robot_friend_neighbors_trashed_after/">https://www.reddit.com/r/whatisthisthing/comments/k3v3q8/strange_robot_friend_neighbors_trashed_after/</a></p>
<h3 id="新生儿"><a href="#新生儿" class="headerlink" title="新生儿"></a>新生儿</h3><blockquote>
<p>Q: Someone was gifted this for a new baby with no note on what it is</p>
</blockquote>
<p>有人把这个礼物送给了一个新生儿，却没有说明是什么。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/新生儿1.jpg" alt="新生儿"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E6%96%B0%E7%94%9F%E5%84%BF1.jpg" class="新生儿"> -->
<blockquote>
<p>A: It is a door silencer. It wraps around and covers the latch on a door so that it doesn’t latch and the rubber also makes the door open and close silently. The straps go around the doorknob on each side.<br>EDIT: I could only find a foreign language site with this version, but here’s a picture from there: <a href="http://ae01.alicdn.com/kf/H8c7289b680bc4ef59fd8915e0eeafd8bP/-.jpg">http://ae01.alicdn.com/kf/H8c7289b680bc4ef59fd8915e0eeafd8bP/-.jpg</a></p>
</blockquote>
<p>这是一个门消音器。它可以包裹并覆盖门上的闩锁，从而不会使门关上，并且橡胶还可以使门安静地打开和关闭。带子绕在门把手的每一侧。</p>
<p>编辑：我只能用此版本找到一个外语网站，但是这里有一张照片：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/新生儿2.jpg" alt="新生儿"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E6%96%B0%E7%94%9F%E5%84%BF2.jpg" class="新生儿"> -->
<p>（译者注：答案中的这张图片还是从淘宝拿来的。）</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k95b1x/someone_was_gifted_this_for_a_new_baby_with_no/">https://www.reddit.com/r/whatisthisthing/comments/k95b1x/someone_was_gifted_this_for_a_new_baby_with_no/</a></p>
<h3 id="杀虫"><a href="#杀虫" class="headerlink" title="杀虫"></a>杀虫</h3><blockquote>
<p>Q: They installed this thing on the ceiling of my apartment building. The green light makes a buzz sound with each flash</p>
</blockquote>
<p>他们在我公寓的天花板上安装了这个。绿灯每闪一次就发出嗡嗡声。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/杀虫.jpg" alt="杀虫"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E6%9D%80%E8%99%AB.jpg" class="杀虫"> -->
<blockquote>
<p>A: It’s called the Pestinator 360. It repels insects and rodents. A rather janky install for a ceiling though. <a href="https://www.amazon.com/gp/aw/d/B06ZY79XLC/ref=cm_cr_arp_mb_bdcrb_top?ie=UTF8">https://www.amazon.com/gp/aw/d/B06ZY79XLC/ref=cm_cr_arp_mb_bdcrb_top?ie=UTF8</a></p>
</blockquote>
<p>它被称为 Pestinator 360。它能驱赶昆虫和啮齿动物。不过天花板的安装还真不怎么样。<a href="https://www.amazon.com/gp/aw/d/B06ZY79XLC/ref=cm_cr_arp_mb_bdcrb_top?ie=UTF8">https://www.amazon.com/gp/aw/d/B06ZY79XLC/ref=cm_cr_arp_mb_bdcrb_top?ie=UTF8</a></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/keshzv/they_installed_this_thing_on_the_ceiling_of_my/">https://www.reddit.com/r/whatisthisthing/comments/keshzv/they_installed_this_thing_on_the_ceiling_of_my/</a></p>
<h3 id="金砖？"><a href="#金砖？" class="headerlink" title="金砖？"></a>金砖？</h3><blockquote>
<p>Q: WITT? Mom bought a box of old pins and this was among them. Appears to be metal, backside is empty aside from marks of being glued to something</p>
</blockquote>
<p>这是个嘛？妈妈买了一盒旧别针，这是其中之一。似乎是金属的，背面是空的，除了有些粘在什么东西上的痕迹。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/金砖.jpg" alt="金砖"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E9%87%91%E7%A0%96.jpg" class="金砖"> -->
<blockquote>
<p>A: Readers Digest sweepstakes token</p>
</blockquote>
<p>读者文摘的抽奖代币</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kg7izm/witt_mom_bought_a_box_of_old_pins_and_this_was/">https://www.reddit.com/r/whatisthisthing/comments/kg7izm/witt_mom_bought_a_box_of_old_pins_and_this_was/</a></p>
<h3 id="不知道用途的工具"><a href="#不知道用途的工具" class="headerlink" title="不知道用途的工具"></a>不知道用途的工具</h3><blockquote>
<p>Q: Kitchen tool made by winco. No idea what it is</p>
</blockquote>
<p>winco（超市）制作的厨房工具。不知道是什么。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/工具1.jpg" alt="工具"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/工具2.jpg" alt="工具"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E5%B7%A5%E5%85%B71.jpg" class="工具"> -->
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E5%B7%A5%E5%85%B72.jpg" class="工具"> -->
<blockquote>
<p>A: Winco SDS-3, Shrimp Peeler with Comfort Grip Handle, Stainless Steel</p>
</blockquote>
<p>Winco SDS-3，带舒适手柄的虾剥皮机，不锈钢。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k0xx73/kitchen_tool_made_by_winco_no_idea_what_it_is/">https://www.reddit.com/r/whatisthisthing/comments/k0xx73/kitchen_tool_made_by_winco_no_idea_what_it_is/</a></p>
<h3 id="报警器"><a href="#报警器" class="headerlink" title="报警器"></a>报警器</h3><blockquote>
<p>Q: Found in my new home, built in the 1950s</p>
</blockquote>
<p>在我的新家发现的，建于 20 世纪 50 年代。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-5/报警器.jpg" alt="报警器"></p>
<!-- <img data-src="/2020/12/25/whatisthisthing-5/%E6%8A%A5%E8%AD%A6%E5%99%A8.jpg" class="报警器"> -->
<blockquote>
<p>A: It’s an on / off for a house alarm.</p>
</blockquote>
<p>它被用来打开或关闭房屋报警。</p>
<blockquote>
<p>A: Although in this case it’s 99% likely for an alarm, switches like this were used for other things as well. I did a remodel last summer where a same/similar switch was used to lower and raise a massive chandelier- for cleaning or bulb replacement.</p>
</blockquote>
<p>虽然在这种情况下警报器的可能性是99%，但像这样的开关也被用于其他用途。去年夏天，我做了一次改造，用了一个相同或类似的开关来降低和提高一个巨大的吊灯——为了清洁或更换灯泡。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kc23cn/found_in_my_new_home_built_in_the_1950s/">https://www.reddit.com/r/whatisthisthing/comments/kc23cn/found_in_my_new_home_built_in_the_1950s/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing 6</title>
    <url>/2020/12/26/whatisthisthing-6/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="砚"><a href="#砚" class="headerlink" title="砚"></a>砚</h3><blockquote>
<p>Q: Does anyone know what this box is?</p>
</blockquote>
<p>有谁知道这个盒子是什么吗？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/砚.jpg" alt="砚"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/砚2.jpg" alt="砚"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/砚3.jpg" alt="砚"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E7%A0%9A.jpg" class="砚"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E7%A0%9A2.jpg" class="砚"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E7%A0%9A3.jpg" class="砚"> -->
<blockquote>
<p>A: Chinese or Japanese ink, in block form. You use the dish, with a little water, to grind it into a usable liquid.<br><a href="https://www.bitsandpiecesuk.co.uk/product/sumi-e-ink-set">https://www.bitsandpiecesuk.co.uk/product/sumi-e-ink-set</a></p>
</blockquote>
<p>中国或日本的墨。成块状的，你可以用少许水将碟子研磨成可用的液体。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ki8bsy/does_anyone_know_what_this_box_is/">https://www.reddit.com/r/whatisthisthing/comments/ki8bsy/does_anyone_know_what_this_box_is/</a></p>
<h3 id="奇怪编号顺序的板子"><a href="#奇怪编号顺序的板子" class="headerlink" title="奇怪编号顺序的板子"></a>奇怪编号顺序的板子</h3><blockquote>
<p>Q: Found in a storage cupboard at work. The black bits come out. The number order is … weird?</p>
</blockquote>
<p>在工作的储藏室里发现的，上面有黑色的小块，编号顺序看起来也好奇怪。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/板子.jpg" alt="板子"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%9D%BF%E5%AD%90.jpg" class="板子"> -->
<blockquote>
<p>A: It almost looks like sales samples for plastic parts that might be button actuators or something.<br>The numbers might be the model/part numbers. I know this has nothing to do with rail controls.</p>
</blockquote>
<p>它看起来就像塑料部件的销售样品，可能是按钮驱动器之类的。</p>
<p>编号可能是型号/零件号。我知道这和铁路控制无关。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k20dox/found_in_a_storage_cupboard_at_work_the_black/">https://www.reddit.com/r/whatisthisthing/comments/k20dox/found_in_a_storage_cupboard_at_work_the_black/</a></p>
<h3 id="鸡头？"><a href="#鸡头？" class="headerlink" title="鸡头？"></a>鸡头？</h3><blockquote>
<p>Q: What is this hoof looking thing? Very light and feels rubbery. Found on farmland in Central Victoria, Australia.</p>
</blockquote>
<p>这个长得像蹄子的东西是什么?很轻，摸起来有橡胶的感觉。发现于澳大利亚维多利亚州中部的农田。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/蹄子.jpg" alt="蹄子"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/蹄子2.jpg" alt="蹄子"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/蹄子3.jpg" alt="蹄子"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/蹄子4.jpg" alt="蹄子"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E8%B9%84%E5%AD%90.jpg" class="蹄子"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E8%B9%84%E5%AD%902.jpg" class="蹄子"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E8%B9%84%E5%AD%903.jpg" class="蹄子"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E8%B9%84%E5%AD%904.jpg" class="蹄子"> -->
<blockquote>
<p>A: I shoe horses for a living. I use a pour in pad that sets up and sort of looks like that. It is made to provide some cushion for a horses foot. When it comes off it looks a lot like that.<br>You can see the edge around it. That is where some of the material was under a horse shoe.</p>
</blockquote>
<p>我以给马钉蹄铁为生。我用了一个像这样的倒料垫。它是用来给马蹄提供垫子的。当它脱落的时候，看起来很像这样。</p>
<p>你可以看到它周围的边缘。这是马蹄铁下的一些材料。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k6j55u/what_is_this_hoof_looking_thing_very_light_and/">https://www.reddit.com/r/whatisthisthing/comments/k6j55u/what_is_this_hoof_looking_thing_very_light_and/</a></p>
<h3 id="水槽"><a href="#水槽" class="headerlink" title="水槽"></a>水槽</h3><blockquote>
<p>Q: This device in a nursing home that appears to be halfway between a sink and a toilet</p>
</blockquote>
<p>这个装置位于疗养院的水槽和马桶之间。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/水槽.jpg" alt="水槽"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%B0%B4%E6%A7%BD.jpg" class="水槽"> -->
<blockquote>
<p>A: Clinical sink, it’s for dumping bedpans.</p>
</blockquote>
<p>临床水槽，用于倾倒便盆。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k3jms6/this_device_in_a_nursing_home_that_appears_to_be/">https://www.reddit.com/r/whatisthisthing/comments/k3jms6/this_device_in_a_nursing_home_that_appears_to_be/</a></p>
<h3 id="迷你手榴弹？"><a href="#迷你手榴弹？" class="headerlink" title="迷你手榴弹？"></a>迷你手榴弹？</h3><blockquote>
<p>Q: This solid metal thing threaded through this hollow wooden cylinder</p>
</blockquote>
<p>这个坚固的金属穿过了这个空心的木圆柱体。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/手榴弹.jpg" alt="手榴弹"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/手榴弹2.jpg" alt="手榴弹"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/手榴弹3.jpg" alt="手榴弹"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%89%8B%E6%A6%B4%E5%BC%B9.jpg" class="手榴弹"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%89%8B%E6%A6%B4%E5%BC%B92.jpg" class="手榴弹"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%89%8B%E6%A6%B4%E5%BC%B93.jpg" class="手榴弹"> -->
<blockquote>
<p>A: Bird call.</p>
</blockquote>
<p>鸟哨。</p>
<p>（译者注：这个翻译可能不太准确，因为它不是用来吹的。叫「鸟叫发生器」可能会好一点。）</p>
<iframe src="//player.bilibili.com/player.html?aid=415795337&bvid=BV18V411b7iY&cid=271173362&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k7q03a/this_solid_metal_thing_threaded_through_this/">https://www.reddit.com/r/whatisthisthing/comments/k7q03a/this_solid_metal_thing_threaded_through_this/</a></p>
<h3 id="五粮液"><a href="#五粮液" class="headerlink" title="五粮液"></a>五粮液</h3><blockquote>
<p>Q: Weird stuff found in an old jewelry</p>
</blockquote>
<p>在一个旧珠宝里发现了一些奇怪的东西。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/酒.jpg" alt="酒"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/酒2.jpg" alt="酒"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/酒3.jpg" alt="酒"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E9%85%92.jpg" class="酒"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E9%85%922.jpg" class="酒"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E9%85%923.jpg" class="酒"> -->
<blockquote>
<p>A: The art technique is called Cloisonne. The bottles could be snuff bottles sold as souvenirs.</p>
</blockquote>
<p>这种工艺叫做景泰蓝。这些鼻烟壶可以作为纪念品出售。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kcip09/weird_stuff_found_in_an_old_jewelry_info_first/">https://www.reddit.com/r/whatisthisthing/comments/kcip09/weird_stuff_found_in_an_old_jewelry_info_first/</a></p>
<h3 id="缆绳桶"><a href="#缆绳桶" class="headerlink" title="缆绳桶"></a>缆绳桶</h3><blockquote>
<p>Q: What is this weird large barrel looking thing hanging on a wire at local park?</p>
</blockquote>
<p>这个挂在当地公园电线上的奇怪的大桶是什么？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/桶.jpg" alt="桶"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/桶2.jpg" alt="桶"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/桶3.jpg" alt="桶"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%A1%B6.jpg" class="桶"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%A1%B62.jpg" class="桶"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%A1%B63.jpg" class="桶"> -->
<blockquote>
<p>A: It is for fire hose competition. Move the barrel back and forth with fire hoses.</p>
</blockquote>
<p>这是消防水带比赛用的。用消防水管来回移动水桶。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kilt8q/what_is_this_weird_large_barrel_looking_thing/">https://www.reddit.com/r/whatisthisthing/comments/kilt8q/what_is_this_weird_large_barrel_looking_thing/</a></p>
<h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><blockquote>
<p>Q: This was found with old tools. Doesn’t seem to attach to anything. It can lock in place and the middle bit turns round, unravelling two straps of fabric. I’m stumped!</p>
</blockquote>
<p>这是在旧工具中找到的。似乎没有依附于任何东西。它可以锁定到位，中间的钻头转动，解开两束织物。我被难倒了！</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/书.jpg" alt="书"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/书2.jpg" alt="书"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/书3.jpg" alt="书"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/书4.jpg" alt="书"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E4%B9%A6.jpg" class="书"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E4%B9%A62.jpg" class="书"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E4%B9%A63.jpg" class="书"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E4%B9%A64.jpg" class="书"> -->
<blockquote>
<p>A: It’s for carrying books.</p>
</blockquote>
<p>它是用来拿书的。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/书5.jpg" alt="书"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E4%B9%A65.jpg" class="书"> -->
<blockquote>
<p>Q: Solved! Thank you. I’ve been thinking about this for MONTHS and you found it in minutes haha. Thank you again! (even though I’m slightly embarrassed!)</p>
</blockquote>
<p>解决了!谢谢你！我想了好几个月了，你几分钟就找到了，哈哈。再一次感谢您！（尽管我有点尴尬！）</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/书6.jpg" alt="书"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/书7.jpg" alt="书"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E4%B9%A66.jpg" class="书"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E4%B9%A67.jpg" class="书"> -->
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kbpauf/this_was_found_with_old_tools_doesnt_seem_to/">https://www.reddit.com/r/whatisthisthing/comments/kbpauf/this_was_found_with_old_tools_doesnt_seem_to/</a></p>
<h3 id="不知道"><a href="#不知道" class="headerlink" title="不知道"></a>不知道</h3><blockquote>
<p>Q: Silver drum/disks, 1 in 40 had this inside, the rest were empty</p>
</blockquote>
<p>银色桶/碟子里面发现的，每 40 个里面就有一个这个，其余都是空的。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/激光元件.jpg" alt="激光元件"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/激光元件2.jpg" alt="激光元件"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/激光元件3.jpg" alt="激光元件"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/激光元件4.jpg" alt="激光元件"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%BF%80%E5%85%89%E5%85%83%E4%BB%B6.jpg" class="激光元件"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%BF%80%E5%85%89%E5%85%83%E4%BB%B62.jpg" class="激光元件"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%BF%80%E5%85%89%E5%85%83%E4%BB%B63.jpg" class="激光元件"> -->
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%BF%80%E5%85%89%E5%85%83%E4%BB%B64.jpg" class="激光元件"> -->
<blockquote>
<p>A: It looks a lot like the optical element of a ring laser gyroscope.<br><a href="https://en.wikipedia.org/wiki/Ring_laser_gyroscope">https://en.wikipedia.org/wiki/Ring_laser_gyroscope</a><br>Take a look at the first picture on Wikipedia.<br>And here are some optical elements by themself:<br><a href="https://www.alibaba.com/product-detail/50-Optics-Cavity-Of-Laser-Gyro_60784225297.html">https://www.alibaba.com/product-detail/50-Optics-Cavity-Of-Laser-Gyro_60784225297.html</a></p>
</blockquote>
<p>它看起来很像环形激光陀螺仪的光学元件。</p>
<p><a href="https://en.wikipedia.org/wiki/Ring_laser_gyroscope">https://en.wikipedia.org/wiki/Ring_laser_gyroscope</a></p>
<p>看看维基百科上的第一张照片。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/激光元件5.jpg" alt="激光元件"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%BF%80%E5%85%89%E5%85%83%E4%BB%B65.jpg" class="激光元件"> -->
<p>这里是一些光学元件本身:</p>
<p><a href="https://www.alibaba.com/product-detail/50-Optics-Cavity-Of-Laser-Gyro_60784225297.html">https://www.alibaba.com/product-detail/50-Optics-Cavity-Of-Laser-Gyro_60784225297.html</a></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kdsytm/silver_drumdisks_1_in_40_had_this_inside_the_rest/">https://www.reddit.com/r/whatisthisthing/comments/kdsytm/silver_drumdisks_1_in_40_had_this_inside_the_rest/</a></p>
<h3 id="指尖陀螺"><a href="#指尖陀螺" class="headerlink" title="指尖陀螺"></a>指尖陀螺</h3><blockquote>
<p>Q: Solid brass.. and every pin on the outside unscrews. The center hole is threaded and around 3/4” - 1” in diameter.</p>
</blockquote>
<p>黄铜做的，外部的每一个大头针都能打开，内部的圆直径大概四分之三英寸到一英寸之间。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-6/指尖陀螺.jpg" alt="指尖陀螺"></p>
<!-- <img data-src="/2020/12/26/whatisthisthing-6/%E6%8C%87%E5%B0%96%E9%99%80%E8%9E%BA.jpg" class="指尖陀螺"> -->
<blockquote>
<p>A: It was a fidget-spinner but the bearings are gone</p>
</blockquote>
<p>原本是个指尖陀螺，但是中间的轴承不见了。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/k6yzte/solid_brass_and_every_pin_on_the_outside_unscrews/">https://www.reddit.com/r/whatisthisthing/comments/k6yzte/solid_brass_and_every_pin_on_the_outside_unscrews/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing 7</title>
    <url>/2021/01/22/whatisthisthing-7/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="好时-Kisses"><a href="#好时-Kisses" class="headerlink" title="好时 Kisses"></a>好时 Kisses</h3><blockquote>
<p>Q: Solid metal “kiss” that was in our bag of candy cane kisses. Is it part of the machinery?</p>
</blockquote>
<p>在我的拐棍糖 Kisses里面发现了固体金属的「kiss」，这是机器的一部分吗？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-7/Kisses.jpg" alt="Kisses"></p>
<blockquote>
<p>A: Definitely not a part of the machine. Since it is the same size and shape, I would say it’s a QA “guage” to help operators verify shape and portion size at a glance.</p>
</blockquote>
<p>绝对不是机器的一部分，因为它和糖果的尺寸和形状都是一样的，所以我认为这是一种质量保证测量仪，帮助操作人员一眼就能确认形状和分量大小。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kljjhf/solid_metal_kiss_that_was_in_our_bag_of_candy/">https://www.reddit.com/r/whatisthisthing/comments/kljjhf/solid_metal_kiss_that_was_in_our_bag_of_candy/</a></p>
<h3 id="监控下的人"><a href="#监控下的人" class="headerlink" title="监控下的人"></a>监控下的人</h3><blockquote>
<p>Q: My security camera caught this individual with a large device, possibly scanning for something? The individual noticed the camera and changed their mind it seems, but what have they got and what are they doing?</p>
</blockquote>
<p>我的监控摄像头拍到这个人用一个大设备，可能在扫描什么东西？这个人注意到了监控摄像头，似乎改变了主意，但是他们拿着什么东西在做什么？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-7/监控摄像头.jpg" alt="监控摄像头"></p>
<blockquote>
<p>A: this person is probably a carthieve scanning for keyless car keys. never leave them near windows and doors.</p>
</blockquote>
<p>这个人可能是一个正在扫描无钥匙车钥匙的窃贼。不要把它们放在窗户和门附近。</p>
<p>（译者注：回答附上了一篇<a href="https://www.carlock.co/blog/en/2019/01/04/keyless-car-theft-how-thieves-are-using-hacking-to-steal-your-car/">新闻</a>，新闻里边有视频，搬运过来了。）</p>
<iframe src="//player.bilibili.com/player.html?aid=288783688&bvid=BV1ef4y1k7LD&cid=285693389&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kund29/my_security_camera_caught_this_individual_with_a/">https://www.reddit.com/r/whatisthisthing/comments/kund29/my_security_camera_caught_this_individual_with_a/</a></p>
<h3 id="紫……紫薯布丁"><a href="#紫……紫薯布丁" class="headerlink" title="紫……紫薯布丁"></a>紫……紫薯布丁</h3><blockquote>
<p>Q: Purple packets found on rural property in Victoria, Australia.</p>
</blockquote>
<p>在澳大利亚维多利亚州乡下发现的紫色包裹。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-7/紫薯.jpeg" alt="紫薯"></p>
<blockquote>
<p>A: Dye powder packets tied to the under side of rams to mark which sheep have been inseminated.</p>
</blockquote>
<p>将染色粉包绑在公羊的下侧，以标记哪些羊已经人工授精。</p>
<blockquote>
<p>A: Yes. The term is “raddle”. Pigment was applied to the wool of the ram’s breastbone to leave colour on the rump of ewes he’d tupped. More recently, you can buy coloured wax crayons the size of a very thick mobile phone to do the same job. Held in place with a harness which the ram wears during breeding season.</p>
</blockquote>
<p>是的。这个术语叫做「raddle（译者注：大家用这个词去谷歌搜索一下就有图片了，还蛮可爱的）」。颜料被涂在公羊胸骨的羊毛上，在他抓过的母羊的臀部上留下颜色。最近，你还可以买到像很厚的手机一样大小的彩色蜡笔来做同样的工作。用公羊在繁殖季节佩戴的挽具固定。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ko3h2c/purple_packets_found_on_rural_property_in/">https://www.reddit.com/r/whatisthisthing/comments/ko3h2c/purple_packets_found_on_rural_property_in/</a></p>
<h3 id="邻居"><a href="#邻居" class="headerlink" title="邻居"></a>邻居</h3><blockquote>
<p>Q: My neighbor (who has recently installed an amazon doorbell camera, which is weird for the netherlands) has just put this on his roof. It seems to be aimed directly at my female housemate’s bedroom window and she is concerned it’s another camera.</p>
</blockquote>
<p>我的邻居（他最近安装了一个亚马逊的门铃摄像头，这对荷兰来说很奇怪）刚刚把它放在了他的屋顶上。它似乎直接对准了我的女室友的卧室窗户，她担心这是另一个摄像头。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-7/屋顶摄像头.jpg" alt="屋顶摄像头"></p>
<blockquote>
<p>A: You could just straight up ask him. If he gives you some excuse and it disappears you know it wasn’t there for any good reason. If he gives you a reasonable sounding explanation like it’s for satellite internet or weather tracking you can show an interest in it and find out what make/model it is.</p>
</blockquote>
<p>你可以直接问他。如果他随便编了个借口，然后这玩意消失了，你就知道那不是什么好接口。如果他给你一个听起来合理的解释，比如这是卫星互联网或天气跟踪，你可以表现出兴趣，找出它是什么牌子/型号。</p>
<p>（译者注：回答的大部分老哥都在出主意说怎么去问邻居，翻了好久才发现一个靠谱的回答，放在下面吧。）</p>
<blockquote>
<p>Q: Kind of looks like one of these</p>
</blockquote>
<p>有点像这个：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-7/R2.jpg" alt="R2"></p>
<p>译者注：这玩意叫<a href="https://geospatial.trimble.com/products-and-solutions/trimble-r2">Trimble R2 Integrated GNSS System</a>，具体用法如下：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-7/GNSS1.jpg" alt="GNSS"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-7/GNSS2.jpg" alt="GNSS"></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kvpc5b/my_neighbor_who_has_recently_installed_an_amazon/">https://www.reddit.com/r/whatisthisthing/comments/kvpc5b/my_neighbor_who_has_recently_installed_an_amazon/</a></p>
<h3 id="厨房用具"><a href="#厨房用具" class="headerlink" title="厨房用具"></a>厨房用具</h3><blockquote>
<p>Q: These have been in our kitchen drawer for ages, but we havent figured out what they are used for. Any ideas?</p>
</blockquote>
<p>这些已经在我们的厨房抽屉中放了很长时间了，但是我们还没有弄清楚它们的用途。 有任何想法吗？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-7/厨房.jpg" alt="厨房"></p>
<blockquote>
<p>A: Green one opens bananas.</p>
</blockquote>
<p>绿色的那个是用来剥香蕉的。</p>
<blockquote>
<p>A: You use the blue one to Peel oranges. We have one ourselves</p>
</blockquote>
<p>你用蓝色的那个去削橘子皮。我们自己也有一个。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-7/剥橘子.jpg" alt="剥橘子"></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kwm2m6/these_have_been_in_our_kitchen_drawer_for_ages/">https://www.reddit.com/r/whatisthisthing/comments/kwm2m6/these_have_been_in_our_kitchen_drawer_for_ages/</a></p>
<h3 id="子弹"><a href="#子弹" class="headerlink" title="子弹"></a>子弹</h3><blockquote>
<p>Q: Bullet type thing found in back seat of car after finding hole in window.</p>
</blockquote>
<p>车窗上多了个洞后在后座发现的子弹状的东西。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-7/子弹.jpg" alt="子弹"></p>
<blockquote>
<p>A: Ya,thats a bullet</p>
</blockquote>
<p>没错，这就是子弹。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kogrxn/bullet_type_thing_found_in_back_seat_of_car_after/">https://www.reddit.com/r/whatisthisthing/comments/kogrxn/bullet_type_thing_found_in_back_seat_of_car_after/</a></p>
<h3 id="螺旋"><a href="#螺旋" class="headerlink" title="螺旋"></a>螺旋</h3><blockquote>
<p>Q: 1.5 inches long, hard and glossy. Found 5 feet below the bottom of a Virginia river</p>
</blockquote>
<p>1.5 英寸长，坚硬光滑。发现于弗吉尼亚河底下 5 英尺处。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-7/化石.jpg" alt="化石"></p>
<blockquote>
<p>A: Fossil snail casting would be my vote.</p>
</blockquote>
<p>我站化石蜗牛。</p>
<p><a href="https://www.sciencesource.com/archive/Turritella-Casts-SS2737298.html">https://www.sciencesource.com/archive/Turritella-Casts-SS2737298.html</a></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/kx7hv1/15_inches_long_hard_and_glossy_found_5_feet_below/">https://www.reddit.com/r/whatisthisthing/comments/kx7hv1/15_inches_long_hard_and_glossy_found_5_feet_below/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing 8</title>
    <url>/2021/02/19/whatisthisthing-8/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="灯泡"><a href="#灯泡" class="headerlink" title="灯泡"></a>灯泡</h3><blockquote>
<p>Q: Unknown glass object filled with unknown liquid, found in an early 1900’s barn. Any leads?</p>
</blockquote>
<p>不知名的玻璃制物品里面充满了不知名的液体，在 1900 年代早期的谷仓中找到的。有什么线索么？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/灯泡.jpg" alt="灯泡"></p>
<blockquote>
<p>A: Fire extinguisher.<a href="https://www.core77.com/posts/25006/light-by-fire-extinguisher-the-anti-incendiary-grenades-of-yore-25006">https://www.core77.com/posts/25006/light-by-fire-extinguisher-the-anti-incendiary-grenades-of-yore-25006</a></p>
</blockquote>
<p>灭火器。</p>
<blockquote>
<p>A: Very old fire extinguisher. Filling is quite toxic, be very careful not to break it.</p>
</blockquote>
<p>非常古老的灭火器，里面的填充液有毒，小心不要打破它。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/l9hfgk/unknown_glass_object_filled_with_unknown_liquid/">https://www.reddit.com/r/whatisthisthing/comments/l9hfgk/unknown_glass_object_filled_with_unknown_liquid/</a></p>
<h3 id="三柱香"><a href="#三柱香" class="headerlink" title="三柱香"></a>三柱香</h3><blockquote>
<p>Q: What is this boat off the coast of Long Island, NY with three tall smoke stacks?</p>
</blockquote>
<p>这艘在纽约长岛海岸外竖着三个烟囱的小船是什么？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/小船.jpg" alt="小船"></p>
<blockquote>
<p>A: Not smoke stacks, piles. It’s a working barge, and those piles are lowered into the sea floor to stabilize the vessel while working. They are very commonly used on maritime construction projects such as bridge and tunnel building, surveying, shore protection, etc.</p>
</blockquote>
<p>不是烟囱，是桩。 这是一艘正在工作的驳船，将这些桩放到海床中，以在工作时稳定船只。 它们常常用于海事建设项目，例如桥梁和隧道建设，测量，海岸保护等。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/小船2.jpg" alt="小船2"></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/lgtlza/what_is_this_boat_off_the_coast_of_long_island_ny/">https://www.reddit.com/r/whatisthisthing/comments/lgtlza/what_is_this_boat_off_the_coast_of_long_island_ny/</a></p>
<h3 id="塑料藕带"><a href="#塑料藕带" class="headerlink" title="塑料藕带"></a>塑料藕带</h3><blockquote>
<p>Q: WITT? They’ve been showing up on the beach by the hundreds for the last month!</p>
</blockquote>
<p>这是个嘛？在上个月，它成百上千的出现在沙滩上。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/塑料制品.png" alt="塑料制品"></p>
<blockquote>
<p>A: Bio filter media</p>
</blockquote>
<p><a href="https://www.alibaba.com/product-detail/plastic-bio-filter-media-MBBR-media_60613635014.html">塑料生物滤料</a></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/l8pkoa/witt_theyve_been_showing_up_on_the_beach_by_the/">https://www.reddit.com/r/whatisthisthing/comments/l8pkoa/witt_theyve_been_showing_up_on_the_beach_by_the/</a></p>
<h3 id="小红瓶"><a href="#小红瓶" class="headerlink" title="小红瓶"></a>小红瓶</h3><blockquote>
<p>Q: Small red container. The lid has a small spoon attached to the inside.</p>
</blockquote>
<p>红色的小容器。这个盖子里面连着一个小勺子。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/鼻烟壶.jpg" alt="鼻烟壶"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/鼻烟壶2.jpg" alt="鼻烟壶"></p>
<blockquote>
<p>A: Snuff container</p>
</blockquote>
<p>鼻烟壶</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/lj3vqf/small_red_container_the_lid_has_a_small_spoon/">https://www.reddit.com/r/whatisthisthing/comments/lj3vqf/small_red_container_the_lid_has_a_small_spoon/</a></p>
<h3 id="屋子"><a href="#屋子" class="headerlink" title="屋子"></a>屋子</h3><blockquote>
<p>Q: These small “rooms” that are raised up from the ground are all over the Spanish countryside. Many of the old houses have one. What was/is it used for?</p>
</blockquote>
<p>这些从地面升起的小「房间」遍布西班牙的乡村。许多老房子都有一个。它过去或者现在是用来干什么的?</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/小屋子.png" alt="小屋子"></p>
<blockquote>
<p>A: They’re grain stores called “hórreos”.</p>
</blockquote>
<p>它们是叫做「<a href="https://en.wikipedia.org/wiki/H%C3%B3rreo">hórreos</a>」的粮仓。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/lg74at/these_small_rooms_that_are_raised_up_from_the/">https://www.reddit.com/r/whatisthisthing/comments/lg74at/these_small_rooms_that_are_raised_up_from_the/</a></p>
<h3 id="UFO"><a href="#UFO" class="headerlink" title="UFO"></a>UFO</h3><blockquote>
<p>Q: So, I found this thing on google maps, it’s a very strange feature that I can’t find anything but conflicting info about online. Google maps says it’s a train but how??? Why?!!! Does anyone have any solid facts about what this is?</p>
</blockquote>
<p>我在谷歌地图上发现了这个东西，这是一个非常奇怪的特征，我在网上什么都找不到，除了矛盾的信息。谷歌地图显示这是一列火车，但怎么做到的？为什么？！！有人知道这是什么吗？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/UFO1.jpg" alt="UFO"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/UFO2.jpg" alt="UFO"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/UFO3.jpg" alt="UFO"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/UFO4.jpg" alt="UFO"></p>
<blockquote>
<p>A: It is a block of ice thrown from the near by mountain in an avalanche. <a href="https://www.livescience.com/61926-snow-antarctica-google-ufo.html">Here’s</a> an article about it.</p>
</blockquote>
<p>它是雪崩时从附近的山上抛下的一块冰。<a href="https://www.livescience.com/61926-snow-antarctica-google-ufo.html">这里</a>有一篇关于它的文章。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/lasoka/so_i_found_this_thing_on_google_maps_its_a_very/">https://www.reddit.com/r/whatisthisthing/comments/lasoka/so_i_found_this_thing_on_google_maps_its_a_very/</a></p>
<h3 id="异形舱"><a href="#异形舱" class="headerlink" title="异形舱"></a>异形舱</h3><blockquote>
<p>Q: What is this thing that looks like superman’s pod? i saw while going for a walk in burbank, ca</p>
</blockquote>
<p>这个看起来像超人舱的东西是什么？我在加州伯班克散步时看到的。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/异形舱.jpg" alt="异形舱"></p>
<blockquote>
<p>A: Probably viral marketing.</p>
</blockquote>
<p>可能是一种病毒式营销。</p>
<blockquote>
<p>A: An old prop from the show Colony?<br><a href="https://colony.fandom.com/wiki/Outlier">https://colony.fandom.com/wiki/Outlier</a><br>This looks a lot like the pods that “outliers” (highly skilled humans) were scooped up by the aliens to go fight other aliens.</p>
</blockquote>
<p>一个马戏团的旧道具吗？</p>
<p><a href="https://colony.fandom.com/wiki/Outlier">https://colony.fandom.com/wiki/Outlier</a></p>
<p>这看起来很像异类（高等技术人类）被外星人带走去对抗其他外星人的豆荚。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/异形舱2.png" alt="异形舱"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/异形舱3.png" alt="异形舱"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-8/异形舱4.png" alt="异形舱"></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/led04h/what_is_this_thing_that_looks_like_supermans_pod/">https://www.reddit.com/r/whatisthisthing/comments/led04h/what_is_this_thing_that_looks_like_supermans_pod/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing 9</title>
    <url>/2021/03/22/whatisthisthing-9/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="飞机零件"><a href="#飞机零件" class="headerlink" title="飞机零件"></a>飞机零件</h3><blockquote>
<p>Q: Any guesses as to what this plane part is? Fell out of the sky in Colorado when that United engine failed.</p>
</blockquote>
<p>大家能猜一下这是飞机哪部分吗？因为联合航空的飞机引擎故障的时候这东西正好从科罗拉多的天空坠落。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/飞机零件.jpg" alt="飞机零件"></p>
<blockquote>
<p>A: I think that’s a vape pen dude.</p>
</blockquote>
<p>我想这就是个电子烟，兄弟。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/lr0h1u/any_guesses_as_to_what_this_plane_part_is_fell/">https://www.reddit.com/r/whatisthisthing/comments/lr0h1u/any_guesses_as_to_what_this_plane_part_is_fell/</a></p>
<h3 id="奇怪的草地"><a href="#奇怪的草地" class="headerlink" title="奇怪的草地"></a>奇怪的草地</h3><blockquote>
<p>Q: What would cause my friends lawn to look like this after the snow melted.</p>
</blockquote>
<p>是什么原因导致我朋友的草地在雪融化之后变成了这副样子？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/草地.png" alt="草地"></p>
<blockquote>
<p>A: That’s some major vole activity. They look a lot like mice, but tend to be very active under winter snows and like tunneling.</p>
</blockquote>
<p>这是田鼠的主要活动轨迹。它们看起来很像老鼠，但是它们往往在冬天的雪下非常活跃，喜欢挖隧道。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/lz6gbg/what_would_cause_my_friends_lawn_to_look_like/">https://www.reddit.com/r/whatisthisthing/comments/lz6gbg/what_would_cause_my_friends_lawn_to_look_like/</a></p>
<h3 id="金属球"><a href="#金属球" class="headerlink" title="金属球"></a>金属球</h3><blockquote>
<p>Q: Metal sphere with russian writing found on a Bahama beach.</p>
</blockquote>
<p>巴哈马海滩上发现的带有俄罗斯文字的金属球。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/金属球1.jpg" alt="金属球"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/金属球2.jpg" alt="金属球"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/金属球3.jpg" alt="金属球"></p>
<blockquote>
<p>A: Its a pneumatic accumulator tank of engine control system of Soyuz rocket. Somebody point it here in comments. <a href="http://joyreactor.cc/post/3388576#comment15651851">http://joyreactor.cc/post/3388576#comment15651851</a></p>
</blockquote>
<p>它是联盟号火箭发动机控制系统的气动蓄能器油箱。有人在这条评论里面提到了它。<a href="http://joyreactor.cc/post/3388576#comment15651851">http://joyreactor.cc/post/3388576#comment15651851</a></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/金属球4.jpeg" alt="金属球"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/金属球5.jpeg" alt="金属球"></p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/lv4uwd/metal_sphere_with_russian_writing_found_on_a/">https://www.reddit.com/r/whatisthisthing/comments/lv4uwd/metal_sphere_with_russian_writing_found_on_a/</a></p>
<h3 id="emmm"><a href="#emmm" class="headerlink" title="emmm"></a>emmm</h3><blockquote>
<p>Q: Saw this bulldozer with a giant spike on the front in a meme. Is this a weird forklift? Why does it only have 1 spike then? Is this possibly to push around a very specific type of equipment?</p>
</blockquote>
<p>我在表情包里看到一辆前面有个大钉子的推土机。这是一台奇怪的叉车吗？为什么只有一个凸出来的钉子呢？这可能是为了推动一种特定类型物体的设备吗？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/挖掘机.png" alt="挖掘机"></p>
<blockquote>
<p>A: We have one similar to that at work. The spike is a little bigger and longer, but we use it for moving steel coils around the coil yard.</p>
</blockquote>
<p>我们公司也有一个类似的。钉子稍大一些，也稍长一些，但我们用它来在卷厂周围移动钢卷。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/lppdko/saw_this_bulldozer_with_a_giant_spike_on_the/">https://www.reddit.com/r/whatisthisthing/comments/lppdko/saw_this_bulldozer_with_a_giant_spike_on_the/</a></p>
<h3 id="矿洞"><a href="#矿洞" class="headerlink" title="矿洞"></a>矿洞</h3><blockquote>
<p>Q: Found while trail running. What are these things? There’s rotten wood that goes along it that looks cut/altered by man. Would it be for making a flat surface to easily maneuver the mine?</p>
</blockquote>
<p>在越野跑时发现。这些是什么东西？沿路有腐烂的木头，看起来像是被人砍过/改造过的。是为了制造一个平坦的地面来方便地操纵矿井吗？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/矿井.jpg" alt="矿井"></p>
<blockquote>
<p>A: It’s a collapsed wood-stave pipeline, it may have been for dewatering the mine.</p>
</blockquote>
<p> 这是一条坍塌的木板管道，可能是用来给矿井排水的。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/矿井2.jfif" alt="矿井"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/矿井3.jpg" alt="矿井"></p>
<p> <a href="https://www.reddit.com/r/whatisthisthing/comments/m6mhto/found_while_trail_running_what_are_these_things/">https://www.reddit.com/r/whatisthisthing/comments/m6mhto/found_while_trail_running_what_are_these_things/</a></p>
<h3 id="折叠门"><a href="#折叠门" class="headerlink" title="折叠门"></a>折叠门</h3><blockquote>
<p>Q: Door with a hinged section a quarter through horizontally?</p>
</blockquote>
<p> 在这扇门的四分之一处为什么会安装有铰链？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/折叠门1.jpg" alt="折叠门"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/折叠门2.jpg" alt="折叠门"></p>
<blockquote>
<p>A: So it can fold around the corner when it’s open, and not stick out into the room</p>
</blockquote>
<p>这样的话当它打开的时候，它可以折叠到角落里，而不会伸到房间里。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/lozrpi/door_with_a_hinged_section_a_quarter_through/">https://www.reddit.com/r/whatisthisthing/comments/lozrpi/door_with_a_hinged_section_a_quarter_through/</a></p>
<h3 id="两个勺子"><a href="#两个勺子" class="headerlink" title="两个勺子"></a>两个勺子</h3><blockquote>
<p>Q: WITT: Two spoons attached to a wooden handle at the thrift store?</p>
</blockquote>
<p>在旧货店发现的一个木柄上绑着两个勺子，这是个嘛？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing-9/勺子.jpg" alt="勺子"></p>
<blockquote>
<p>A: It’s a musical instrument literally called “spoons”. Used as percussion by clacking the spoons together. I’ll see if I can find an example of them being played.</p>
</blockquote>
<p>它是一种乐器，名字就叫「勺子」,用勺子和勺子敲击。我看看能不能找到一个他们在玩的例子。</p>
<iframe src="//player.bilibili.com/player.html?aid=60322841&bvid=BV1Nt41177AM&cid=105024872&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<p><a href="https://www.reddit.com/r/whatisthisthing/comments/lv9vbd/witt_two_spoons_attached_to_a_wooden_handle_at/">https://www.reddit.com/r/whatisthisthing/comments/lv9vbd/witt_two_spoons_attached_to_a_wooden_handle_at/</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>What is this thing</title>
    <url>/2020/09/15/whatisthisthing/</url>
    <content><![CDATA[<p><a href="https://www.reddit.com/r/whatisthisthing/">What is this thing</a> 是 reddit 上的一个社区（community），上面时不时会有人发一些没见过的玩意来提问。</p>
<p>一起来看看吧！</p>
<span id="more"></span>
<h3 id="奇怪的笔记"><a href="#奇怪的笔记" class="headerlink" title="奇怪的笔记"></a>奇怪的笔记</h3><blockquote>
<p>Q: my grandpa recently passed away and we found these weird notes in a random briefcase, there’s heaps more pages that look the same too, any clue what it is??</p>
</blockquote>
<p>我的爷爷前不久去世了，我们在一个杂乱的公文包里发现了这些奇怪的笔记，有非常多页而且看起来都差不多，有人能告诉我这是什么么？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/weird-notes-1.jpg" alt="weird-notes-1.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/weird-notes-2.jpg" alt="weird-notes-2.jpg"></p>
<!-- <img data-src="/2020/09/15/whatisthisthing/weird-notes-1.jpg" class="weird-notes-1"> -->
<!-- <img data-src="/2020/09/15/whatisthisthing/weird-notes-2.jpg" class="weird-notes-2"> -->
<blockquote>
<p>A: It definitely looks like he’s keeping score for 2 players. And the goal of the game is to stay under 100. Which player 1 does 17 times, and player 2 does 14 times.</p>
</blockquote>
<p>看起来他是在为两位玩家计分，并且这个游戏的要求是得分需要在 100 分以下，玩家一做到了 17 次，玩家二做到了 14 次。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/isyukx/my_grandpa_recently_passed_away_and_we_found/">Source</a></p>
<h3 id="吊坠"><a href="#吊坠" class="headerlink" title="吊坠"></a>吊坠</h3><blockquote>
<p>Q: Found in a creek bed in Oak Hill, Texas. Has a small hole on top of the head that goes all the way through.</p>
</blockquote>
<p>在德克萨斯州橡树山的一个河床中找到的，头顶有一个贯穿的小孔。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/caddo-1.jpg" alt="caddo-1.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/caddo-2.jpg" alt="caddo-2.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/caddo-3.jpg" alt="caddo-3.jpg"></p>
<!-- <img data-src="/2020/09/15/whatisthisthing/caddo-1.jpg" class="caddo-1"> -->
<!-- <img data-src="/2020/09/15/whatisthisthing/caddo-2.jpg" class="caddo-2"> -->
<!-- <img data-src="/2020/09/15/whatisthisthing/caddo-3.jpg" class="caddo-3"> -->
<blockquote>
<p>A: “Seems to be a pendant head from the Caddo tribe. Looks legit and definitely pre-columbian. There’s an oak hill Caddo site near there. Could be an import as well but unlikely.” -My Archeologist Father</p>
</blockquote>
<p>我的考古学家老爹说：「似乎是是来自卡多部落的吊坠，看起来是真的并且是前哥伦布时期。橡树山附近有卡多遗址，也可能是进口，但是可能性不大。」</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/isa0vn/found_in_a_creek_bed_in_oak_hill_texas_has_a/">Source</a></p>
<h3 id="发声的杯子"><a href="#发声的杯子" class="headerlink" title="发声的杯子"></a>发声的杯子</h3><blockquote>
<p>Q: Found in Freiburg, Germany. False bottom with this chip and sensor inside. Balls’ in your court…</p>
</blockquote>
<p>在德国弗莱堡发现的，假的杯底里面有着芯片和传感器，看你的了。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/mug-1.jpg" alt="mug-1.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/mug-2.jpg" alt="mug-2.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/mug-3.jpg" alt="mug-3.jpg"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/mug-4.jpg" alt="mug-4.jpg"></p>
<!-- <img data-src="/2020/09/15/whatisthisthing/mug-1.jpg" class="mug-1"> -->
<!-- <img data-src="/2020/09/15/whatisthisthing/mug-2.jpg" class="mug-2"> -->
<!-- <img data-src="/2020/09/15/whatisthisthing/mug-3.jpg" class="mug-3"> -->
<!-- <img data-src="/2020/09/15/whatisthisthing/mug-4.jpg" class="mug-4"> -->
<blockquote>
<p>A: it is probably a mug that made sounds when filled with liquid, I only assume so due to a kid friendly design on the side of the mug.</p>
</blockquote>
<p>这个大概是一个当里面倒满水后会发出声音的马克杯，我这样猜只是因为马克杯身上有着儿童喜欢的卡通图案。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/it40n1/found_in_freiburg_germany_false_bottom_with_this/">Source</a></p>
<h3 id="声波技术"><a href="#声波技术" class="headerlink" title="声波技术"></a>声波技术</h3><blockquote>
<p>Q: The only words on the case are 「sonic technology」</p>
</blockquote>
<p>上面唯一能看到的字是「声波技术」。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/sonic-technology.jpg" alt="sonic-technology.jpg"></p>
<!-- <img data-src="/2020/09/15/whatisthisthing/sonic-technology.jpg" class="sonic-technology"> -->
<blockquote>
<p>A: Bug repeller.<br>Edit- scratch that. It’s a Sonic Technologies ultrasonic rodent repeller. Just an old one.</p>
</blockquote>
<p>驱虫器，一种使用超声波技术的驱鼠器，只是很旧了。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/isq73x/the_only_words_on_the_case_are_sonic_technology/">Source</a></p>
<h3 id="电话"><a href="#电话" class="headerlink" title="电话"></a>电话</h3><blockquote>
<p>Q: Found at an antique store. WITT?</p>
</blockquote>
<p>在一个古董店里找到的，这是个嘛？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/NCR.jpg" alt="NCR.jpg"></p>
<!-- <img data-src="/2020/09/15/whatisthisthing/NCR.jpg" class="NCR"> -->
<blockquote>
<p>A: It’s an NCR stamping phone / charge phone. Was used for automated credit approval in department stores.</p>
</blockquote>
<p>这是一个 NCR 牌的冲压/收费电话，曾经用于百货公司自动信贷审批。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/isbesi/found_at_an_antique_store_witt/">Source</a></p>
<h3 id="拆弹小组"><a href="#拆弹小组" class="headerlink" title="拆弹小组"></a>拆弹小组</h3><blockquote>
<p>Q: Bomb squad called in to examine a possible “antique missile” found at a construction site down the road. Any chance that’s really what this is?</p>
</blockquote>
<p>拆弹小组被叫来检查这个在路边某个建筑工地上发现的「古董炸弹」,这是真的吗？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/bomb.jpg" alt="bomb.jpg"></p>
<!-- <img data-src="/2020/09/15/whatisthisthing/bomb.jpg" class="bomb"> -->
<blockquote>
<p>A: 105mm tank round, no Fuze on it.</p>
</blockquote>
<p>105 毫米坦克炮弹，没有引信。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/ist2f6/bomb_squad_called_in_to_examine_a_possible/">Source</a></p>
<h3 id="小屋"><a href="#小屋" class="headerlink" title="小屋"></a>小屋</h3><blockquote>
<p>Q: Found next to a cliff in the UK, has chains in it. Any ideas what this thing is?</p>
</blockquote>
<p>在英国的一个悬崖边发现的，上面有铁链，知道这是什么吗？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/whatisthisthing/huts.jpg" alt="huts.jpg"></p>
<!-- <img data-src="/2020/09/15/whatisthisthing/huts.jpg" class="huts"> -->
<blockquote>
<p>A: Is this near the railway line? then it could be a line workers hut, used to store equipment and bits and pieces. With the casualisation of the workforce these huts have gone out of use.</p>
</blockquote>
<p>它是不是很靠近铁路线？它可能是一个铁路线工人小屋，用于存放一些设备和零碎的东西，由于劳动力临时化，这些小屋已经不再被使用了。</p>
<p><a href="https://www.reddit.com/r/whatisthisthing/comments/irveg5/found_next_to_a_cliff_in_the_uk_has_chains_in_it/">Source</a></p>
]]></content>
      <categories>
        <category>What is this thing?</category>
      </categories>
      <tags>
        <tag>翻译</tag>
        <tag>What is this thing?</tag>
      </tags>
  </entry>
  <entry>
    <title>《齐玛蓝》——阿拉斯泰尔·雷诺兹</title>
    <url>/2019/03/22/zima-blue/</url>
    <content><![CDATA[<p>前些天看了 Netflix 出品的 <a href="https://www.netflix.com/title/80174608"><em>Love, Death &amp; Robots</em></a> ，第十四集讲的就是这个故事，动画很好，小说也写得很好，特地转载一下。 转载自：<a href="http://www.eleefeed.com/f/201939">http://www.eleefeed.com/f/201939</a></p>
<span id="more"></span>
<h2 id="齐玛蓝"><a href="#齐玛蓝" class="headerlink" title="齐玛蓝"></a>齐玛蓝</h2><p>文/【英】阿拉斯泰尔·雷诺兹 译/陈日锋 图/蔡定一</p>
<hr>
<p>第一周刚过，人们就开始陆陆续续地离开小岛。游泳池周围的看台渐渐空荡起来。巨型观光飞船启程返回星际空间，那些艺术迷、评论员和批评家都在威尼斯收拾行李。他们心中的失望之情像沼气一样弥漫了整个游泳池。</p>
<p>我是留在穆尔耶克星球的少数几个人之一。此时，我已经站在看台上看了几个小时，眯着眼斜视水面反射的光芒。那是一种令人胆寒的蓝色光芒。在我的下方，齐玛拖着苍白而疲惫的身躯，从游泳池的一头游到另一头。乍一看，你还真会把他错当成一具漂浮的尸体。当他游泳时，我一直在考虑如何将他的故事讲给其他人听。我努力回忆我在火星工作的那家报社名字，那是我第一次在报社工作。这家报社付给我的工资没有大报社高，但是我隐隐觉得自己喜欢回到曾经工作的地方。我在那家报社工作已经是很久以前的事了。我查询了我的备忘录助手，想查到报社的名字。我大概已经查询了几百次，但是备忘录助手一点反应都没有。过了一会儿，我才想起自己前天已经彻底丢弃了备忘录助手。</p>
<p>「现在得靠你自己了，凯莉。」我对自己说道，「赶紧习惯吧。」</p>
<p>游泳池里，齐玛已经游到了另一端，开始折返向我这边游过来……</p>
<p>两周前的一个中午，我正坐在圣马可广场品尝咖啡，观赏白色的雕像和汉白玉钟塔。</p>
<p>威尼斯的上空密集地停泊着一艘艘星际飞船。飞船的船舷安装了巨大的全反射发光面板，把飞船的颜色跟天空的真实颜色统一起来。</p>
<p>这样的景象让我想起了一幅画作，作者是一位前卫画家，专攻空间扭曲透视立体图，比如永无止境的瀑布、相互连结的蜥蜴。我在头脑里回忆出这幅画的大致样子，然后发送给备忘录助手，让它查一查这幅画的名字。可是，它怎么也回忆不起来。</p>
<p>我喝完了咖啡准备结账。</p>
<p>我来到这样一个汉白玉砌成的威尼斯，主要是为了目睹齐玛最后一幅作品的揭幕式。多年来我一直对这位艺术家很感兴趣，希望能争取到一次采访他的机会。不巧的是，几千个同行都和我有着相同的想法。其实同行竞争是次要的问题，最主要的问题是，齐玛过去从来不接受采访。</p>
<p>齐玛通知我们所有记者都到穆尔耶克星球来。大多数人头一次听说这个几乎完全被海水浸泡的世界。穆尔耶克星球唯一出名的地方就是它拥有第171个水城威尼斯的复制城，它是仅有的三个完全用汉白玉建成的复制城之一。齐玛选择穆尔耶克星球来放置他的最后一幅作品，并准备在这里退休养老，永远离开公众的视野。</p>
<p>咖啡店侍者突然将一张折叠的卡片放在我的桌上。</p>
<p>怀着沉重的心情，我举起了那张卡片，想看看总共花了多少钱。我以为它是账单，可我仔细一看，却发现这是一张小小的印有烫金斜体字的蓝色卡片。卡片上的蓝色非常精细，而且呈粉末状，很明显这是齐玛自己创造的标志性宝石蓝。这张卡片的收信人是我——凯莉·克莱，上面写着齐玛要和我谈谈揭幕式。卡片上还说如果我感兴趣的话，必须在两个小时之内到里亚托桥报到。</p>
<p>如果感兴趣？我当然感兴趣。</p>
<p>卡片上要求，不允许带任何记录工具，甚至包括笔和纸。卡片的末尾还提到，我点的咖啡已经有人买单了。我差点厚着脸皮再点一杯咖啡，不过想想还是算了。</p>
<p>我到达里亚托桥时，齐玛的机器佣人已经在那儿等候。机器佣人的外表是人形的玻璃罩，玻璃罩里面是复杂的机械构造，不时发出氖光。它向我深深地鞠了一躬，然后温柔地问：「你是克莱小姐吧？既然你来了，我们就赶紧出发吧。」</p>
<p>机器佣人护送我上了停在水边的舷梯，我的备忘录助手紧紧跟着我，扒在我的肩上。舷梯的另一头连着一架等候多时的气垫运输机。这架运输机悬浮在水面上，离水面将近一米。机器佣人带着我走进后面的包间。我的备忘录助手也想跟着进来，却被机器仆人抬手制止了。</p>
<p>「恐怕你不能带着它，不允许带记录工具，记得吗？」</p>
<p>我看着这个带着金属光泽的绿色蜂鸟——我的备忘录机器人，努力回忆我上次离开它的监护是什么时候。</p>
<p>「把它留下？」</p>
<p>「它待在这里很安全，等到傍晚你回到这里的时候，还能找到它。」</p>
<p>「如果我说不呢？」</p>
<p>「如果你坚持，你恐怕就不能和齐玛先生见面了。」</p>
<p>这个机器佣人肯定不会在这儿闲逛一下午等我做出回应。一想到要离开备忘录助手，我就浑身发凉，但是我实在太想采访齐玛了。</p>
<p>我让备忘录机器人待在这里，直到我回来。</p>
<p>这个小家伙迅速地飞走了，在空中划出一道泛着金属光泽的绿色闪电。看着它的离去，我感觉身体的一部分也跟着离开了。我坐了下来，座位上的玻璃罩把我整个人都罩了进去。我明显感到运输机正在加速前进。</p>
<p>我们下方的威尼斯变得倾斜，然后迅速地消失在地平线下。</p>
<p>我发出一个测试命令，询问备忘录机器人我是在哪个星球上庆祝自己的七百岁生日的。没有任何回应：我已经超出了它的监护范围。我只能依靠自身严重超龄的记忆，得不到任何帮助。</p>
<p>我向前倾了倾身子，询问机器佣人：「你能告诉我这究竟是怎么一回事吗？」</p>
<p>「不好意思，他没有告诉我。」机器佣人回答，它的头后面出现了一张脸，「但是如果你感觉不舒服，我们会立即把你送回威尼斯。」</p>
<p>「我现在感觉很好。谁还拿到了蓝色邀请卡？」</p>
<p>「据我所知，只有你一个。」</p>
<p>「如果我拒绝了呢？你是不是应该再找一个人？」</p>
<p>「不，」机器佣人回答，「不要再瞎猜了，让我们一起面对，克莱小姐。你肯定不会拒绝他的。」</p>
<p>在飞行途中，输送机在海面上激起阵阵波涛，留下了一道泡沫形成的路线。这就像是有人用一把刷子，在涂了颜料但是还没干的汉白玉上划了一道杠，把颜料下面的白底露了出来。我接受了齐玛的邀请，直奔前方的地平线。我心里一直在思考，齐玛的标志性蓝色究竟是接近天空的颜色，还是更接近大海的颜色。对比这两种颜色，我觉得邀请卡上的颜色让我眼前一亮。</p>
<p>齐玛蓝！这种颜色非常精确，从科学的角度分析，必须要测量它的光谱带宽和强度，才能把它分辨出来。</p>
<p>如果你是一个画家，你肯定会根据光谱带宽和强度混合出一系列颜色。但是没有人能混合出齐玛蓝，除非他们计算出了齐玛蓝的颜色参数。</p>
<p>齐玛刚刚进入公众视野的时候，就已经是独一无二的了。他的身体接受了最彻底的改造，即使不穿防护服，也能应付极端严酷的环境。从远处看，齐玛就是一个身材极好的男人，穿着紧身连体衣裤。只有走近看才会意识到，他根本没穿衣服，表面的那一层其实是他的皮肤。</p>
<p>他的整个身体被一种合成材料覆盖，这种合成材料会根据他的心情和周围的环境变换颜色和纹理。如果在社交场合，他的皮肤就会变成礼服。而且这种皮肤能够抵御巨大的压力，如果他想体验一下真空状态，这层皮肤会控制住他的自身压力，不会发生爆炸；如果他要到巨型气态行星上去游览一番，这层皮肤又能抵御住外部极强的挤压。他的皮肤不但刀枪不入，而且能将全方位的感知准确地传递给大脑。更厉害的是，他根本无需呼吸，因为他的整个心血管循环系统已经被封闭的自循环生命维持系统所取代。他无需吃喝，无需处理体内垃圾。纳米级的微型修复机器人遍布全身，使他能够忍受在几分钟内足以杀死一个普通人的辐射。</p>
<p>有了这身足以经受任何极端环境考验的无敌盔甲，齐玛能够到他想要去的任何地方吸取灵感，不管那里的环境有多恶劣。他能在星际空间自由翱翔，能钻进恒星的表面探索，或者到完全由灼热岩浆覆盖的行星游荡。他的眼睛被高性能的摄像头所取代，这种摄像头能够获取跨度极大的电磁频谱，远远超过了可见光的范围。这两个摄像头通过非常复杂的处理模块连接到他的大脑中。</p>
<p>他的大脑中还安装了一个神经突触混合桥接器，他可以把视频数据当成音乐来听，把交响乐当成某种奇妙的色彩来看。他的皮肤还具备天线的功能，能让他感知电场的变化。如果他觉得这样还不够，他可以把一定数量的机器互联起来，变成一个超级云计算系统，然后从中获取数据。</p>
<p>正因为浑身上下被如此强大的技术武装起来，齐玛的画作极具创造性，深深地吸引了人们的眼球，让所有人欲罢不能。他画风景地貌和星系的作品，品质都超乎想象，令人叹为观止。这些画作充满了光彩夺目的颜色，运用了高超的空间扭曲透视技巧。更让人惊叹的是，他的作品从来不用传统的绘画材料，都是那种面积极大的作品。这种画作很快吸引了一大群严谨的收藏家。齐玛的一小部分作品被他们买下变成私人藏品，而大部分作品都存在于公共星际空间中，横跨几十米。尽管画幅很大，但是所有的细节都清晰到视觉的极限。大部分的作品都是在极短的时间内完成的。齐玛不需要睡觉，他可以不间断地工作，直到整幅画作彻底完成。</p>
<p>不可否认，这些画作给人们留下了不可磨灭的印象。无论是从构图的角度还是从技法的角度来看，他们都是无可非议的杰作。但是，这些作品总让人感到一丝寒意，有时甚至让人不寒而栗，因为这些画作所画的风景地貌根本没有人见过，完全是从画家自己的视角里描绘出来的。</p>
<p>除了这一丝寒意，总体来说这些画还是相当棒的，但是我家里从来没有悬挂他的画作。</p>
<p>很显然，不是每个人都喜欢他的作品，而且齐玛也不可能把自己的画作都卖出去。但我还是忍不住想知道：究竟有多少人只是因为齐玛很有名才买了那些作品？又有多少人是真正懂得那些作品的内在价值而去收藏它们？</p>
<p>当我第一次注意到齐玛，我就有这样的疑问。我觉得他的画作矫揉造作，对他并不感兴趣:如果他或者他的画作发生了其他事情，我倒觉得值得写篇报道。</p>
<p>这样的事情居然发生了，但其他人——包括我在内——却是过了一段时间才注意到这件事。</p>
<p>有一次，齐玛花了比平时更长的时间创作一幅画。当他展示这幅画作的时候，人们发现这幅画作里出现了不同寻常的东西。这是一幅漩涡星云的作品，以一颗无空气的小行星作为观察点。在这颗小行星上某座火山口的边缘，有一个小小的蓝色正方形遮盖住了星云的一部分。乍一看，就像是齐玛先把整个画布用蓝色刷了一遍，然后在上面画星云的时候，故意留下这么一块正方形没有画。这个正方形是空心的，没有任何细节表明它和整个景观或者背景有什么联系。它没有投射阴影，跟周围的颜色之间没有任何渐变。但是，这个正方形肯定是经过深思熟虑才画上去的:因为通过近距离察看可以发现，它确实是用颜料在火山口的上方画出来的。这肯定具有某种深意。</p>
<p>而这个正方形只是开始。从此之后，齐玛向外界展示的所有画作上，都带有一个类似的几何图形。每幅画作的构图中都嵌入了一个正方形、三角形、椭圆形或者其他什么图形。过了很长一段时间，人们才发现每幅画上的几何图形所涂的蓝色都是完全一样的。</p>
<p>这就是齐玛蓝，和我收到的那张镶有金字的卡片上的蓝色完全一样。</p>
<p>又过了几十年，这种抽象的图形逐渐变成了他的主要作品，构图中的其他元素全部融入这种图形中。宇宙远景的尽头变成了一个狭窄的边框，再用几个空白的圆圈、三角形、长方形与之呼应起来。他的早期作品都是以丰富的笔触、浓墨重彩的多层铺垫为典型特征，如今却变成用光滑的镜面打底的蓝色图形。</p>
<p>很多买家被齐玛这种抽象的蓝色图形吓到了，逐渐远离了他。很快齐玛又推出了他的第一幅完全由单一蓝色构成的画作。这幅作品尺寸巨大，足以覆盖一座千层大楼的侧面。人们普遍认为齐玛已经江郎才尽，再也画不出精美的作品了。</p>
<p>但是，他们完全错了。</p>
<p>当我们靠近一个小岛时，我感觉到运输机在减速。</p>
<p>「你是第一个看到这个小岛的人。」机器佣人说，「岛的上空被一片扭曲的屏幕遮住了，从太空看是根本看不见这座岛的。」</p>
<p>这座小岛方圆一公里，海拔很低，整个外形有点像乌龟，周围被一片狭窄的白色沙滩环绕。岛的中心附近有一块高地，这块高地上所有的草木都被清理掉了，只留下一块近似矩形的空地。我观察发现这片空地上有一小块区域很平坦，而且反射出蓝光，周围似乎被一排分层布置的看台包围着。</p>
<p>运输机降低了高度，也减慢了速度，不断地上下起伏，直到慢慢停在那片被看台包围的区域外面。紧挨着停机坪的是一座由白色鹅卵石砌成的低矮小屋。</p>
<p>机器佣人先走下台阶，然后帮助我下了运输机。</p>
<p>「齐玛马上就到。」它说完又回到运输机上，运输机载着它迅速消失在天边。</p>
<p>突然间，我觉得自己很孤独，很脆弱。一阵海风吹过来，把沙子吹进了我的眼睛里。太阳逐渐西沉，直奔地平线而去。天气很快就会变冷。就在我开始有点恐慌的时候，一个男人钻出了小屋，轻快地搓了搓手。他沿着一条铺着石子的小路向我走来。</p>
<p>「很高兴你能来这里，凯莉。」</p>
<p>这位当然就是齐玛了。我刚刚还怀疑他不会露面，真是个愚蠢的想法。</p>
<p>「嗨。」我结结巴巴地说。</p>
<p>齐玛很有风度地伸出了他的手。我握着他的手，隐约能够感觉到他身上人造皮肤的纹理。今天他的皮肤呈银灰色。</p>
<p>「我们到阳台上坐坐。目睹夕阳的感觉真好，不是吗？」</p>
<p>「是的。」我答应道。</p>
<p>他转过身去，领着我走向小屋。跟着他走的时候，我能清晰地看到在他银灰色的皮肤下面肌肉不断隆起。他背部的皮肤上似乎有鳞片在闪光，估计是什么反射芯片。</p>
<p>他强壮得像头黑豹，而且身材好得像雕像。他其实长得挺帅，更不用说他能变出那么多花样，然而我从来没听说他跟谁谈过恋爱，甚至连这方面的绯闻都没有。艺术是他生命的全部。</p>
<p>我跟着他，感觉自己很笨拙。齐玛领着我走进了小屋，映入眼帘的是一间老式厨房和一间老式的休闲室，屋子里摆满了古老的家具和摆设，大概有上千年的历史了。</p>
<p>「一路飞来感觉怎么样？」</p>
<p>「很好。」</p>
<p>他突然停住了，看着我，「我都忘了检查了……我的机器佣人有没有强调不能携带备忘录助手？」</p>
<p>「有。」</p>
<p>「很好。我只想跟你这个人谈，凯莉，而不是什么录音设备。」</p>
<p>「我？」</p>
<p>他脸上戴的银灰色面具形成了一副滑稽的表情，「你就不能说句长一点儿的话吗？怎么回答都是一个字？」</p>
<p>「呃……」</p>
<p>「放松。」他说，「我让你到这儿来，不是要考验你，也不是要对你做其他事。我没有给你设圈套，你在这儿不会有任何危险。你今晚就能回到威尼斯。」</p>
<p>「我很好。」我说，「就是有点儿激动，就像追星族见到了偶像。」</p>
<p>「不必如此。我不可能是你见到的第一位社会名流吧？」</p>
<p>「当然不是了，只是……」</p>
<p>「人们觉得我很吓人，」他说，「但他们最终还是习惯了，然后想知道我这么小题大做究竟是为什么。」</p>
<p>「为什么选我？」</p>
<p>「因为你一直很友好地邀请我接受采访。」齐玛回答。</p>
<p>「别开玩笑了。」</p>
<p>「好吧，除了你很友好之外，也有一些其他原因。这些年我一直很喜欢你的报道。很多人都很信任你，特别是那些即将离开人世的人，因为你如实地记录了采访的内容，不带任何虚假的成分。」</p>
<p>「你找我来是谈退休的事，不是谈临终的事吧？」</p>
<p>「其实都一样，反正要从公众的视野里消失了。凯莉，我觉得你写的文章都很真实。我从来没发现有人说你写的文章歪曲事实。」</p>
<p>「我一直都是这样。」我说，「这就是为什么我总是带着备忘录助手的原因，这样就没人否认自己说过的话了。」</p>
<p>「带不带备忘录助手都不会影响你对我的报道。」齐玛说。</p>
<p>「肯定有其他原因，要不然你怎么会只选我一个？」</p>
<p>我警觉地看着他。</p>
<p>「我只想帮帮你。」他说。</p>
<p>人们常常谈起齐玛的蓝色时代，是指他创作巨幅画作的时代。说巨幅可不是吹的。他创作的画作尺寸特别大，大得足以覆盖庞大的建筑物和市民广场，甚至从外太空轨道上都能看到。放眼整个银河系，居然还有二十公里高的蓝色画卷。这些画一般建在私人的海岛上，像塔一样直插云霄；有的甚至直接放在暴风雨肆虐的大海上。创作这些画作的经费从来都不是问题，因为齐玛身边有一大堆赞助商，争先恐后地抢夺作品的赞助权。齐玛创作的巨幅画作越来越大，后来居然需要用很复杂的高科技机械设备来固定画作，防止画作因为重力或者天气原因而损坏。这些巨型机械设备穿过了所在行星的大气层，一直延伸到外太空，自身还发出微弱的光。画作被弯曲成一定角度，让那些狂热的艺术爱好者在外太空就能看到，他们会发现整个视野都被蓝色占据。</p>
<p>齐玛实在是太出名了，就连对艺术毫无兴趣的人都知道他的名字。他是一个创造巨幅蓝色画作的古怪机械人，是从来明说或者暗示自己艺术作品内涵的画家。</p>
<p>但那已经是几百年前的事了，齐玛越来越能折腾，后来连行星都无法容纳他那笨重的巨型画作。于是，齐玛干脆搬到星际空间里，锻造出方圆几万公里的蓝色画卷。这些画卷可以在太空中自由飘浮。而且他不再用画笔和颜料了，而是雇佣采矿机器人舰队，将小行星炸碎，把碎片作为原料来作画。赞助商的财力已经远远不够了，反而是各个恒星系经济体开始争夺齐玛作品的展览权。</p>
<p>也就是这个时候，我重新对齐玛有了兴趣。我出席了他的一个「月亮包裹」项目的新闻发布会，该项目计划给整个星球建造外壳，形成一个有盖子的蓝色容器，就像是一颗球放进盒子里。两个月之后，他在行星的整个赤道带释放了大量蓝色气体，当时我也在场。六个月后，他在一颗掠日彗星的表面增加了某种蓝色的化学物质，如此一来，这颗彗星就能拖着齐玛蓝的尾巴跨越整个太阳系。但我不认为自己应该在这些新闻上大做文章。我一次次地邀请他接受采访，但是一次次地被回绝。我所知道的就是齐玛对蓝色的痴迷已经超过了艺术创作本身。但是如果不能彻底理解他的这种痴迷，就不能写出真正有意义的报道，顶多是奇闻轶事。</p>
<p>而我从来不写奇闻轶事。</p>
<p>我一直在等待，当然还有几百万个同行也一直在等待。所以一听说齐玛的最后一件作品将在穆尔耶克星球的威尼斯揭幕，我就马不停蹄地赶了过来。我并不奢望能够采访到他，或者对他的作品有什么新的见解。我只是觉得自己必须到场，亲眼见证。</p>
<p>我们走上楼梯，穿过滑动玻璃门，来到了阳台。阳台上有一张白色的桌子，两侧各放了一把椅子。桌上还放了几瓶酒和一盘水果。在这个没有栏杆的阳台上极目远眺，只能看到一望无垠的大海，与天相接。海面上风平浪静，在夕阳余晖的照耀下，整个海面就像是一枚银币。</p>
<p>齐玛示意我坐下，他手里拿着两瓶葡萄酒，不停地晃悠。</p>
<p>「红葡萄酒还是白葡萄酒，凯莉？」</p>
<p>我张开嘴想要回答，可是什么都说不出来。通常情况下，在别人提问之后、我回答之前的一瞬间，备忘录助手会默默帮我做出选择。没有备忘录助手的提示，我感到自己的思维停顿了。</p>
<p>「我猜是红葡萄酒，」齐玛说，「除非你强烈反对。」</p>
<p>「我能自己决定这些事情。」我说。</p>
<p>「当然。」齐玛给我倒了一杯红酒，然后举起杯子对着天空，看看红酒的品质。</p>
<p>「我只是觉得有点奇怪。」我补充道。</p>
<p>「你不应该有这样奇怪的感觉。」他说，「几百年前，我们的生活方式不就是这样的吗？」</p>
<p>「你的意思是，这其实是一种很自然的方式？」</p>
<p>「是的。」齐玛给自己倒了一杯红酒，当然他不会喝的，只是闻了闻酒香。</p>
<p>「可是我已经活了一千年，这本身就不自然啊。」我说，「我的机体记忆在七百年前就已经到了饱和点，我的脑袋就像一个放了太多家具的房子，想搬进去一些东西，就必须先把一些东西搬出来。」</p>
<p>「我们还是先回到酒的问题上。」齐玛说，「通常情况下，你必须依赖备忘录助手的建议，对不对？」</p>
<p>「是的。」我耸耸肩。</p>
<p>「备忘录助手是不是总是选择两种可能性中的一种？比如说总是选红葡萄酒，或者总是选白葡萄酒？」</p>
<p>「没那么简单。」我说，「如果我对其中一种酒的偏好更强烈，那么备忘录助手肯定会一直向我推荐这种酒。但是我对葡萄酒并没有偏好。有时我喜欢红葡萄酒，有时我又喜欢白葡萄酒。还有的时候，两种酒我都不想要。」我希望自己的挫败感不要那么明显。除了谈谈蓝色卡片、雇佣机器人以及运输机这一系列精心策划的谜语，我最不想谈的就是我自己并不完整的记忆。</p>
<p>「那么就是随机选择喽？」他问道，「备忘录助手会不会就这么随便选择红葡萄酒或者白葡萄酒呢？」</p>
<p>「不是，也不是这样的。备忘录助手已经跟了我几百年了。它已经看见我在成千上万种不同的场合，喝了成千上万次葡萄酒。它会根据最高的可靠程度，给出一系列参数，然后计算出什么才是我最好的选择。」</p>
<p>「然后你会无条件接受它的建议？」</p>
<p>我啜了一口红酒，「当然。如果只是为了表明自己具有自由意志，而去违背它的建议，这样做是不是有点太孩子气了？不管怎么说，根据它的建议进行选择，更能让我感到满意。」</p>
<p>「但是这样的话，你的整个人生不就成了一系列可以预见的反馈吗？除非你忽略它的建议。」</p>
<p>「也许是吧。」我说，「但也没那么糟糕吧？只要我开心，我才不管呢。」</p>
<p>「我不是有意为难你。」齐玛说。他微笑着把身体靠在椅背上。在质问了我一系列问题之后，他想缓和一下紧张的气氛。「现在拥有备忘录助手的人也不是很多吧？」</p>
<p>「不清楚。应该不超过整个银河系人口的百分之一吧。」</p>
<p>齐玛又闻了闻他的葡萄酒，透过玻璃杯看着天空，「外面几乎每一个人都认为，接受备忘录助手是不可避免的趋势。」</p>
<p>「让机器管理一千年的记忆，有何不可？」我反问道。</p>
<p>「但是还有另外一种机器，」齐玛说，「神经移植，完全整合进参与者的自我感觉，和生物性记忆融为一体，无法分辨。你不需要询问备忘录助手如何选择酒，你也不需要等待确认的提示。」</p>
<p>「这两种有何区别？我允许自己的经历被机器记录。这台机器从来没有遗漏任何事情，而且它回复我的查询是如此高效，以至于现在几乎每件事我都要问它。」</p>
<p>「机器很容易损坏。」</p>
<p>「它每隔一段时间就会备份数据。而且它总不会比我脑袋里的一大堆神经移植模块更容易损坏吧？对不起冒犯了你，但是‘机器容易损坏’这个反对的理由实在不合理。」</p>
<p>「你是对的。但是对于备忘录助手，人们有更深层次的争论。它太完美了。它不知道如何失真或者忘却。」</p>
<p>「它不就应该这样吗？」</p>
<p>「不对！当你在几百年后用自己的头脑回忆起我和你的这段对话，肯定有一些细节会记错。而这些记错的部分也会成为你记忆中的一部分，记错的每个细节会逐渐强化成回忆。一千年之后，你对这段对话的回忆可能跟真实情况大相径庭。那时你肯定会发誓，你的回忆是准确的。」</p>
<p>「如果有备忘录助手陪在我身边，我就能事无巨细地把一切完整地记录下来。」</p>
<p>「没错，」齐玛说，「但那不是活生生的记忆。那只是一个机械记忆的过程。整个记忆里缺乏想象，没有给选择性的遗忘留下任何余地。」他又给我满上一杯酒，「想象一下，像今天下午这样的场合，你因为某个原因坐在外面，你必须决定是选择红葡萄酒还是白葡萄酒，且不能后悔自己的选择。但是就这么一次，不管出于什么原因，你被人说服去选择白葡萄酒——正好违背了备忘录助手的判断——而且喝了之后你还感觉很好。每件事都被奇妙地组合在一起：这段谈话、夕阳西下的氛围、壮丽的风景、微醺的快感。一个完美的下午逐渐变成了完美的傍晚。」</p>
<p>「这跟我选择什么酒没多少关系吧。」我说。</p>
<p>「确实没有。」齐玛赞同道，「备忘录助手肯定不会把这样一个令人开心的阴差阳错当成是一种特例。这样一个小小的偏差并不会对它的预测模型产生任何影响。下次，它还是会让你选择红葡萄酒。」</p>
<p>我突然感到内心一阵刺痛，非常不舒服，「可人类的记忆并不是那样工作的。」</p>
<p>「没错，人类的记忆会牢记这个例外，并且标记上重要意义。它会放大今天下午记忆中吸引人的部分，抑制住不开心的部分——苍蝇一直在你脸周围嗡嗡叫、你在搭船回家时的焦虑心情。你所记住的是金色光辉照耀下的安宁。下一次，你可以随便选择白葡萄酒还是红葡萄酒。以后都随你选。整个行为模式都会因为这个细小的偏差而改变。当然备忘录助手绝不会容忍那样的事发生。你只有违背它的建议很多次，它才会非常吝啬地更新它的数据模型，然后它才会开始建议你选择白葡萄酒。」</p>
<p>「没错。」我说。其实我希望齐玛能多谈谈他自己，而不是我，「移植的人工记忆与外部的人工记忆究竟有多少实际的区别？」</p>
<p>「简直是天壤之别。」齐玛说，「存储在备忘录助手里的记忆会被永久地记住。不管你询问它多少次，它都不会歪曲或者忽略每一个细节。但是移植的人工记忆不一样。他们被无缝地整合进生物记忆，移植了人工记忆的人根本区分不了哪些是人工记忆、哪些是生物记忆。正是因为这个原因，移植的人工记忆具备必要的可塑性、易变性，会产生错误和失真。</p>
<p>「但是没有易变性就没有艺术，没有艺术就没有事实。」齐玛继续说道。</p>
<p>「易变性指引事实？这个说法真不错。」我感觉很意外。</p>
<p>「我所说的事实是指更高层次的、比喻意义上的事实。那个金色的下午？那确实是事实。你所记住的苍蝇不会附加任何物质上的意义。它会被提取出来从记忆中分离。」</p>
<p>「没有下午就没有苍蝇。」我说。最终我的忍耐度已经到达了极限，很快就要爆发。「我很感激你能邀请我到这儿来，但我不是来听你给我讲如何选择人工记忆的。我觉得总该谈点其他事情吧。」</p>
<p>「实际上我要跟你谈的内容最终都会归结到这一点上。不仅关系到我，而且关系到你。」他放下玻璃杯，「我们去散散步，好吗？我要带你去看看游泳池。」</p>
<p>「太阳已经下山了。」我说。</p>
<p>齐玛笑着说：「太阳总会升起的。」</p>
<p>他带着我从另外一条路线穿过了屋子，从另一扇门出去。在两堵白色石头砌成的墙之间，一条崎岖的山路慢慢爬上山坡，整条路都沐浴在金色的余晖中。不一会儿，我们就来到了那块平整的高地，就是乘坐运输机过来时看到的高地。这里还真被看台围绕着：三十米高的阶梯状结构，看台后面有楼梯直通各层。齐玛带着我走进看台下方的阴影处，然后穿过一个私人入口，进入了那块封闭的区域。我来时看见的那块蓝色区域，实际上是一个不太大的长方形游泳池，里面的水被排干了。</p>
<p>齐玛领着我来到游泳池的边缘。</p>
<p>「一个游泳池。」我说，「你不会开玩笑吧。建这么多看台就是为了这个游泳池？」</p>
<p>「这就是揭幕式举办的地方。」齐玛说，「我将在这里揭开我的最后一件作品，然后退休。」</p>
<p>游泳池还没有全部建成。在远处的角落里，一个小型的黄色机器人还在那里砌瓷砖。靠近我们这边的部分已经砌好了，但我还是发现有些地方的瓷砖有破损或者裂痕。夕阳的余晖有些暗淡，我看不清自己是不是在阴影中，但是那些瓷砖的颜色看上去跟齐玛蓝非常接近。</p>
<p>「跟那些能占据整个星球的画作相比，这里的档次太低了吧？」我问道。</p>
<p>「对我来说不是这样。」齐玛说，「对我来说，这里是探索结束的地方。这里也是一切开始的地方。」</p>
<p>「一个寒碜的游泳池？」</p>
<p>「这不仅仅是一个古老的游泳池。」他说。</p>
<p>他和我一起绕着小岛散步。太阳即将沉入大海，一切颜色都变得苍白。</p>
<p>「过去，我的灵感来源于心灵。」齐玛说，「我之所以画出那么大规模的作品，是因为那是主题的需要。」</p>
<p>「画得非常棒。」我说。</p>
<p>「那只能算是体力活。巨大、花哨、流行，但根本没有灵魂。就是因为这些画的灵感来源于心灵，所以画得并不好。」</p>
<p>我什么都没说。其实我一直都觉得他的作品就是这样：壮丽但缺乏人性，而且齐玛身体上的机械化改造必然给他的作品带来某种独特性。就像人们只是因为某件作品是某人用嘴咬着笔画的而赞扬它。齐玛的画之所以被人赞扬，仅仅因为他并不是一个「正常人」。</p>
<p>「我的作品并不能告诉人们宇宙的某种讯息，因为宇宙本身并不会透露任何讯息。更重要的是，我的作品也不会透露任何关于我的情况。这些画跟我能在真空中走、在液氮海洋里游泳有什么关系？跟我能够看见紫外线、感知电磁场又有什么关系？在我身上实施的改造是极端残忍的。这些改造不能给我带来任何东西，就好比一台远程观测无人机并不能变成艺术家。」</p>
<p>「我觉得你对自己是不是有点太苛刻了？」</p>
<p>「不。我这样说，是因为我知道自己曾经创造出一些有价值的事物，但它的发生是我完全预料不到的。」</p>
<p>「你指的是齐玛蓝？」</p>
<p>「对，」他点点头说，「它的出现是个意外——在一幅差不多完成的画布上用错了颜色。这种颜色介于宝石蓝与墨绿色之间。然而这块污点似乎是带了电的，我感觉自己的大脑瞬间短路了，激起了某种强烈、原始的记忆。我有一种感觉：这种颜色曾经是我生命中最重要的东西。」</p>
<p>「那是一种什么样的记忆？」</p>
<p>「我不知道。我感觉到的就是这种颜色在跟我说话，好像我花了整整一辈子的时间才找到它，把它解放出来。」他想了一会儿，继续说道，「这种蓝色肯定代表着某种事物。一千年前，伊夫·克莱因曾经说过，蓝色是颜色中的精华，能够代表其他所有颜色。他就是这样一个人，花费了整整一生去寻找童年记忆中那抹独特的蓝色。后来，他绝望了，觉得根本就找不到这样的蓝色。如此精确的色调肯定是他自己想象出来的，自然界中可能并不存在这样的颜色。然而某一天，他却偶然地发现了它。那是自然历史博物馆里一个甲壳虫标本的颜色。他喜极而泣。」</p>
<p>「那你的齐玛蓝呢？」我问，「也是甲壳虫的颜色？」</p>
<p>「不，」他说，「不是甲壳虫的颜色。但是我必须知道答案，不管付出什么样的代价。我必须要知道为什么这种蓝色对我有这么重要的意义，为什么它会控制了我的艺术创作。」</p>
<p>「你允许它控制自己？」我说。</p>
<p>「我没有选择的余地。随着这种蓝色在我心中变得越来越强烈、越来越占优势，我感到自己越来越接近答案了。我觉得只有把自己沉浸到这种颜色中，才能发现我渴望知道的所有事。作为一个艺术家，我必须真正了解我自己。」</p>
<p>「那你了解了吗？」</p>
<p>「我了解我自己，」齐玛说，「但不是我预计的那样。」</p>
<p>「你发现了什么？」</p>
<p>等了很长一段时间，齐玛才慢慢回答。我们继续慢慢地向前走，我略微落在他的身后。天气开始变凉，我真希望自己能带一件大衣。我考虑向齐玛借一件大衣，但我必须要专注，不能脱离齐玛的思路，不然都不知道是从哪儿开头的。闭上嘴永远都是工作中最艰难的部分。</p>
<p>「我们刚刚谈过记忆的易错性。」他说。</p>
<p>「是的。」</p>
<p>「我自己的记忆并不完整。移植了人工记忆之后的每件事我都记得，但这段时间只是我人生中最近的三百年。我知道自己肯定不止三百岁，但是移植之前的人生，我只记得一些片段。我不知道如何才能把这些破碎的记忆重新组合起来。」他慢慢地转过身，地平线上最后一缕橙色的余晖照在他脸上，「我知道自己必须深入挖掘那段过去，才能真正理解齐玛蓝的特殊意义。」</p>
<p>「那你挖掘到什么程度了？」</p>
<p>「就像是考古一样，」他说，「我必须从记忆中最早的可靠事件中寻找线索，就是在我植入了人工记忆之后的短暂时间内发生的事情。我的记忆回到了哈尔科夫8号星球，那是位于格尔林湾星区的一颗行星，距离这里有一万九千光年。那里我唯一记得的，是一个我认识的男人的名字——科巴哥。」</p>
<p>科巴哥我没听说过，但格尔林湾我还是知道的，不用查询备忘录助手都知道。那是银河系里一片拥有六百个可居住行星系、由三大经济势力掌控的星域。在格尔林湾，正规的星际法律完全不适用。那里完全是亡命之徒的领地。</p>
<p>「哈尔科夫8号星球专门提供一种产品，是其他地方根本得不到的私人医疗服务——非法神经机械改造。」</p>
<p>「那里就是你……」我没敢继续说。</p>
<p>「对，在那里我变成了现在这个样子。当然，离开哈尔科夫8号星球之后，我进一步强化了身体——增强自己对极端环境的适应性，提高自己的各种感知能力——但我的内在部分就是躺在科巴哥诊所的手术台上完成的。」</p>
<p>「所以你在到哈尔科夫8号星球之前，是个普通人？」我问。</p>
<p>「这个问题正是最难搞清楚的部分。回到哈尔科夫8号星球，我自然想找到科巴哥。只有得到他的帮助，我才能把头脑里的那些记忆碎片整合起来。可惜科巴哥已经离开，到格尔林湾的其他地方隐居起来了。那个诊所还在，只不过现在是他的孙子在经营。」</p>
<p>「他肯定没有告诉你详情。」</p>
<p>「没错，他劝我还是不要知道的好。很庆幸，我还是有点手段的，威逼利诱。」说到这里，他微微一笑，「最终他同意打开诊所的历史记录，查看当年他爷爷接见我的记录。」</p>
<p>我们拐了一个弯。天空和大海现在已经变成了一片无法分辨的灰色，没有一丝蓝色的踪影。</p>
<p>「后来发生了什么事？」</p>
<p>「记录表明，我从来就不是一个真正的人。」齐玛说。他停顿了一下，对自己说的话没有任何怀疑，「在我到达诊所之前，齐玛根本不存在。」</p>
<p>这时我恨不得赶紧找回备忘录助手，哪怕身边有古老的笔和本子也好。可惜除了我自己的记忆，什么都用不了。我皱了皱眉头，希望能让自己的记忆更努力地工作。</p>
<p>「那你是什么呢？」</p>
<p>「一台机器，一个很复杂的机器人，具有自主智能的机器。到达哈尔科夫8号星球的时候，我已经几百岁了，但是完全具备合法的独立性。」</p>
<p>「不会吧。」我摇了摇头，「你顶多就是个装有机器零件的人，怎么可能是机器呢？」</p>
<p>「诊所里的记录非常清晰。我来到诊所的时候就是个机器人，一个具有男性外表的机器人。我被彻底拆散，我的核心认知功能被整合进了一个快速生长的生物宿主体内。」他用一根手指敲了敲自己的脑壳，「这里面有大量的有机材料，也有大量的神经机械系统。里面错综复杂，搞不清从哪里开始，到哪里结束；甚至搞不清哪个是主机系统，哪个是辅助系统。」</p>
<p>我看着这个站在我旁边的躯体，自己的思维开始跳跃：不能再把他当成人了，只能把他当做机器——</p>
<p>一台由细胞组成的柔软的机器。可我做不到，一下子接受这些很难。</p>
<p>我停下了脚步，「诊所有可能骗你的呀。」</p>
<p>「我不这么认为。不让我知道这件事，他们会更开心。」</p>
<p>「就算这样，」我说，「总得有证据……」</p>
<p>「那些就是事实，很容易证实。我检查了哈尔科夫8号星球海关出入境记录，发现在做手术的几个月前，有一个具备自主独立性的机器人进入了星球的大气层。」</p>
<p>「不一定就是你啊。」</p>
<p>「在这前后几十年，并没有其他机器人靠近这个星球。所以那个机器人就是我，而且记录上还显示了这个机器人的始发港。」</p>
<p>「始发港在哪里？」</p>
<p>「格尔林湾之外的一个星球，河口群岛星区的临潭3号。」</p>
<p>备忘录助手不在身边，就像是吃饭没了牙齿。「我都不知道自己是否知道那里。」我说。</p>
<p>「你大概不知道。你基本上不可能拜访这样的星球。根本没有光速飞船的航班到那里。我到那里唯一的目的就是……」</p>
<p>「你去过那里？」</p>
<p>「两次。一次是在哈尔科夫8号星球做手术之前，最近又去了一次，去搞清楚第一次去临潭3号星球之前我在哪里。各种线索变得越来越模糊。我问了无数次同样的问题，在各种数据库里查询同样的数据，最后我才知道自己来自哪里。但那依然不是最终答案。我去过太多的星球，其中的先后关系很难理顺。可是我一直没有放弃。」</p>
<p>「也一直在花钱吧？」</p>
<p>「没错，还有钱。」他礼貌地点了点头，「花了无数的钱。」</p>
<p>「最终你发现了什么？」</p>
<p>「我跟踪线索一直回到了原点。到达哈尔科夫8号星球的时候，我已经具备了与人类同等的智力，能够快速思考。但我并不是一直都这么聪明、这么复杂。只要时间和环境允许，我的智能就会逐步增强。」</p>
<p>「自己增强自己？」</p>
<p>「后来是这样的。那是我具备了自主意识和法律独立性之后的事。不过要想获得自由，我也必须具备一定的智力。在这之前，我只是一台单纯的机器……类似于传家宝或者宠物。我被我的主人代代相传。他们不断给我增加新的东西，让我变得越来越聪明。」</p>
<p>「那你究竟是怎么开始的？」</p>
<p>「开始于一个项目。」他回答。</p>
<p>齐玛带着我回到了游泳池。靠近赤道地区的夜晚来得很快，游泳池被看台上方的一排排人工灯光照得光彩夺目。刚才我们看见的机器人已经把最后一块地方的瓷砖都贴好了。</p>
<p>「游泳池已经准备好了。」齐玛说，「明天它就会被封闭起来，后天它就会注满水。我会一直循环里面的水，直到游泳池足够清澈。」</p>
<p>「然后呢？」</p>
<p>「我会准备好我的表演。」</p>
<p>在回游泳池的路上，齐玛把他的身世完完整整地告诉了我，只要是他知道的。在我出生之前，齐玛就已经存在于地球上了。他是由一个业余的机器人爱好者组装起来的，这个很有才能的年轻人对实用机器人技术特别感兴趣。在那些科技并不发达的岁月里，有很多团队或者个人在黑暗中摸索人工智能这一世纪难题。这个年轻人就是其中的一个。</p>
<p>感知、导航、自主解决问题的能力是这个年轻人最感兴趣的三个课题。他利用废旧的工具箱、玩具、零件组装了很多机器人。这些机器人的头脑——其实根本算不上什么头脑——是在废旧的电脑上运行简单程序，它们的记忆和处理速度实在有限。</p>
<p>年轻人的屋子里堆满了这些简单的元件，一有时间，他就开始捣鼓机器人。其中一个机器人是一只长了八条黏性长腿的「蜘蛛」，能够在他屋子里的墙上爬来爬去，清扫相框里的灰尘。「蜘蛛」的另外一项功能就是抓苍蝇和蟑螂。它会把抓到的害虫全部消化，把消化产生的化学能作为自己的能源，驱动自己爬向屋子的其他地方。另外一个机器人用于给墙壁刷漆，它会根据季节的变换改变墙壁的颜色。</p>
<p>还有一个机器人住在他的游泳池里。</p>
<p>它在游泳池贴满瓷砖的池壁上爬上爬下，不停地清洁这些瓷砖。这个年轻人完全可以通过邮购公司买一个便宜的游泳池清洁机，但是他觉得自己设计一个这样的机器人更有趣。他根据自己新奇的设计思路，从草图开始亲自制作这个机器人。它给这个机器人装上了全彩视觉系统，使其能够和周围环境融为一体，并且给它配备了足够先进的「大脑」，对视觉数据进行处理，输入它的环境数据模型。他允许这个机器人自己决定清洁游泳池的最佳策略。他还允许机器人自己选择什么时候清洁游泳池、什么时候通过它背部的太阳能电池进行充电。他在这个机器人身上灌输了原始的奖励观念。</p>
<p>制作这个游泳池清洁机器人的过程中，年轻人掌握了大量的机器人设计技术原理。他运用这些原理，制作出了一系列家用机器人，直到其中一个机器人——</p>
<p>一个简单的家庭清洁机器人——变得十分强健，而且具有自主意识。这个年轻人后来开了一家邮购公司，把这种机器人作为一种工具出售。机器人卖得很火。一年之后，年轻人又推出了预装配的家用机器人。这种机器人取得了巨大的成功，年轻人的公司逐渐成为家用机器人市场的领先者。</p>
<p>在接下来的十年内，整个世界到处都有这些聪明热心的机器人的身影。</p>
<p>但是，那个年轻人从来都没有忘记当年那个小小的游泳池清洁机器人。他把这个清洁机器人作为试验机，一次又一次地给他增加新的软硬件。清洁机器人一直是他所有发明中最聪明的一个，也是唯一</p>
<p>一个没有被遗弃或者淘汰的机器人。</p>
<p>当他去世的时候，他把游泳池清洁机器人传给了他的女儿。他的女儿继承了父亲的事业，继续提高这个小机器人的智力。当她去世的时候，年轻人的外孙继续传承家族的传统。这个时候外孙已经住到火星上了。</p>
<p>「如果你还没猜到的话，我来告诉你，这就是当初那个游泳池，我把它搬到了这里。」齐玛说。</p>
<p>「始终都没有变?」我问道。</p>
<p>「游泳池非常古老，但是瓷砖经受住了岁月的考验。寻找游泳池的过程中，最困难的工作就是找到它最初的地方。我不得不挖掉了两米深的表层土壤，才把它挖掘出来。它所在的地方曾经有一个响当当的名字——硅谷。」</p>
<p>「这些瓷砖都配上了齐玛蓝。」我说。</p>
<p>「其实齐玛蓝就是这些瓷砖的颜色。」他很有礼貌地更正道，「齐玛蓝就是当初年轻人家里的游泳池瓷砖的颜色。」</p>
<p>「也是你记忆中最深刻的一部分。」</p>
<p>「这就是我诞生的地方。我就是当年那个智力只够让自己绕着游泳池转的小机器人。但这个游泳池才是我的世界。它是我知道的一切，也是我唯一要知道的一切。」</p>
<p>「那么现在呢？」我问道。其实我很害怕这个问题的答案。</p>
<p>「现在我要回家。」</p>
<p>那一天看台上座无虚席，大家都来看齐玛最后的表演。小岛上空挤满了悬停的飞船。遮盖在小岛上的曲面屏幕已经关闭，连飞船上的看台都挤满了成千上万远道而来的人。他们站在飞船上就能看到游泳池，游泳池里的水像镜子一样平静、像杜松子酒一样清澈。他们看到齐玛站在游泳池的边缘，背上装满了像鳞片一样的太阳能电池板。没有人知道将会发生什么事，也没有人明白齐玛的举动究竟有什么意义。他们期待在这个揭幕式上，齐玛会展出他所有作品中的王牌，然而现在他们只能迷惑地盯着游泳池。跟齐玛那些大气磅礴的巨幅画作相比，这个小小的游泳池根本就不合格。他们一直在想，这个游泳池肯定是个障眼法。真正的作品——真正预示他退休的作品——一定在其他什么地方，只是现在还看不到而已。</p>
<p>这是他们的想法。</p>
<p>只有我知道真相。当齐玛站在游泳池边缘，被羁绊了他一生的蓝色包围着的时候，只有我知道真相。他已经告诉了我接下来要发生的事情：他大脑中的高级功能将被慢慢地、有条不紊地关闭。关键是整个过程是不可逆转的，他根本没给自己留下后悔的余地。</p>
<p>他大脑中只有一小部分还会继续工作：一个只能识别自身存在的微小内核。这个内核只够他认知周围的环境、执行特定的任务，哪怕这个任务毫无意义。他永远都不需要离开游泳池了。太阳能电板给他提供了足够的能量。他不会变老，也不会生病。其他的机器人会照看他的小岛，保护这个游泳池，确保这个沉默而缓慢的游泳者不会受到天气和时间的破坏。</p>
<p>这一切会持续几个世纪，几千年，然后是几百万年。</p>
<p>几百万年以后会变成什么样子？谁都说不准。但有一件事我可以确定，齐玛永远不会厌倦他的任务。在他的心中已经没有了厌倦的概念。</p>
<p>如果他在游泳池里游泳的时候体会到了某种快乐，那只能是一种几乎没有思维的快乐，就像是蜜蜂或者蝴蝶的快乐。但是对他来说，这样的快乐已经足够。对于当初在加尼福利亚那个游泳池里的他来说已经足够，对于一千年后在同一个游泳池里的他来说也已经足够。只不过这个游泳池已经搬到了银河系中另外一个遥远的世界，这个世界绕着另外一个太阳转动。</p>
<p>对我来说也足够了……</p>
<p>这样的快乐让我记住了更多关于我们在岛上见面的情景。不管你信不信，我已经不需要备忘录助手这样的心灵拐杖了，这跟我以前想象的完全不一样。齐玛是对的：备忘录助手把我的生活变成了编写好的剧本，就像是一张设计好的图纸。在夕阳西下的时候，它总是让我选择红葡萄酒，从来不选白葡萄酒。在搭乘光速飞船离开穆尔耶克星球时，我已经到诊所里植入了一系列神经记忆扩展模块。这些模块应该能用上四五百年。总有一天我将需要另一种解决方案，但我一定要穿过那个独特的助记桥。在彻底放弃我的备忘录助手之前，我做的最后一件事就是把它的观察数据传输进我扩展以后的记忆中。我依然觉得它记录的所有事情似乎并没有在我身上发生过，但是每次回忆起来，这些记忆都比其他的更清晰。它们发生了改变，变得柔和，而且精彩的地方变得更加闪耀。我估计这些记忆中的每个细节已经没那么准确，但是就像齐玛说的那样——也许这就是关键。</p>
<p>我现在明白了他为什么接受我采访。不仅仅是因为我写人物传记的方式他很喜欢，而且他希望能够帮助某个人向前进，不要像他一样。</p>
<p>我最终还是记起了那家报社的名字，写好了有关齐玛的传记，并且把传记卖给了这家报社——《火星纪事》。回到过去待过的星球感觉真好，尤其是现在火星已经被人们迁移进了更温暖的轨道。</p>
<p>事情已经过去很长时间了，但我总觉得齐玛的事情还没完。</p>
<p>每过几十年，我都会登上开往穆尔耶克的光速飞船，走进那座闪闪发光的威尼斯，乘坐运输机来到小岛上，和其他一些顽固的目击者一起坐在看台上。这些人和我一样，依然认为这位艺术大师会留下什么东西，给人们最后的惊喜。他们都读过我写的报道，大部分人都读过，所以他们知道那个慢慢游弋的躯体意味着什么……可人们还是不会成群结队地来。所以即使在极好的天气里，看台上也总是有点空旷和凄凉。但我从来没看见这些看台完全空过，我觉得这是某种神圣的誓约。一些人愿意接受这个誓约，但是大部分人永远都不会接受。</p>
<p>而这就是艺术。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/zima-blue/Zima-Blue.jpg" alt="Zima-Blue.jpg"></p>
<!-- <img data-src="/2019/03/22/zima-blue/Zima-Blue.jpg" class="" title="Zima-Blue.jpg"> -->
]]></content>
      <categories>
        <category>科幻</category>
        <category>转载</category>
      </categories>
      <tags>
        <tag>转载</tag>
        <tag>Love Death &amp;amp; Robots</tag>
        <tag>Zima Blue</tag>
        <tag>爱，死亡和机器人</tag>
      </tags>
  </entry>
  <entry>
    <title>在微信中使用 ToDoList</title>
    <url>/2020/03/13/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E4%B8%AD%E4%BD%BF%E7%94%A8ToDoList/</url>
    <content><![CDATA[<p>在 <a href="https://www.v2ex.com/t/650838">V2EX</a> 看到了这篇帖子，想到了之前自己琢磨出来的方法，所以在这里记录一下，到时候也可以直接将链接贴到回复中去。</p>
<span id="more"></span>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p>效果如下：</p>
<!-- ![效果.jpg](https://i.loli.net/2020/03/13/pcINsy3t4xwO8ro.jpg) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/在微信中使用ToDoList/效果.jpg" alt="效果"></p>
<!-- <img data-src="/2020/03/13/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E4%B8%AD%E4%BD%BF%E7%94%A8ToDoList/%E6%95%88%E6%9E%9C.jpg" class="" title="效果.jpg"> -->
<!-- ![置顶.jpg](https://i.loli.net/2020/03/13/oqslDcLjPWhFyJt.jpg) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/在微信中使用ToDoList/置顶.jpg" alt="置顶"></p>
<!-- <img data-src="/2020/03/13/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E4%B8%AD%E4%BD%BF%E7%94%A8ToDoList/%E7%BD%AE%E9%A1%B6.jpg" class="" title="置顶.jpg"> -->
<h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><ol>
<li><p>打开 <code>微信</code>-<code>我</code>-<code>收藏</code>；</p>
</li>
<li><p>击右上角的 <code>+</code> 添加一个新的笔记；</p>
</li>
<li><p>第一行输入 <code>ToDoList</code>，这是你置顶后所显示的标题；</p>
</li>
<li><p>然后下方的几个按钮就可以使用了，一般都是用最后一个的待办列表；</p>
 <!-- ![待办](https://i.loli.net/2020/03/13/IDoYRdFaKsw1bHq.jpg) -->
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/在微信中使用ToDoList/待办.jpg" alt="待办"></p>
 <!-- <img data-src="/2020/03/13/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E4%B8%AD%E4%BD%BF%E7%94%A8ToDoList/%E5%BE%85%E5%8A%9E.jpg" class="" title="待办.jpg"> -->
</li>
<li><p>写完成后，点击右上角的 <code>···</code>，你可以选择<code>浮窗</code>，也可以选择置顶<code>在聊天中置顶</code>；</p>
 <!-- ![置顶选项.jpg](https://i.loli.net/2020/03/13/9FCy2oXMiQdrla1.jpg) -->
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/在微信中使用ToDoList/置顶选项.jpg" alt="置顶选项"></p>
 <!-- <img data-src="/2020/03/13/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E4%B8%AD%E4%BD%BF%E7%94%A8ToDoList/%E7%BD%AE%E9%A1%B6%E9%80%89%E9%A1%B9.jpg" class="" title="置顶选项.jpg"> -->
</li>
<li><p>这样就已经完成了，当你需要查看的时候，你只需要点击聊天列表界面顶部的 <code>ToDoList</code>，就能进入这份笔记中查看你的待办事项了。</p>
</li>
</ol>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>这个方法勉强可以满足最基本的 <code>ToDoList</code> 功能，对于普通人来说，也是只能说是到了勉强够用的程度，毕竟他没有提醒功能。</p>
<p>我一般是在去超市进行采购的时候，会在这里列一下采购清单，方便核对。</p>
<p>说起提醒功能，微信可以对聊天双方所发的消息进行提醒，长按一条消息，在 <a href="https://zhuanlan.zhihu.com/p/29026281">Popover</a> 中选择 <code>提醒</code>（在 IOS 中需要点击 Popover 右侧的 <code>▶</code>，才能在下一页看到 <code>提醒</code> 选项），选择提醒时间后，微信就会在提醒时间为你发送一条提醒。</p>
<!-- ![提醒](https://i.loli.net/2020/03/13/hrTYKjQmvH3zxb4.jpg) -->
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/在微信中使用ToDoList/提醒.jpg" alt="提醒"></p>
<!-- <img data-src="/2020/03/13/%E5%9C%A8%E5%BE%AE%E4%BF%A1%E4%B8%AD%E4%BD%BF%E7%94%A8ToDoList/%E6%8F%90%E9%86%92.jpg" class="" title="提醒.jpg"> -->
<p>微信真的是很封闭的软件，你甚至不能找到分享到其他 APP 的按钮。</p>
]]></content>
      <categories>
        <category>奇技淫巧</category>
      </categories>
      <tags>
        <tag>奇技淫巧</tag>
        <tag>微信</tag>
        <tag>WeChat</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在 Spotify 听没有版权的歌</title>
    <url>/2020/04/10/%E5%A6%82%E4%BD%95%E5%9C%A8-Spotify-%E5%90%AC%E6%B2%A1%E6%9C%89%E7%89%88%E6%9D%83%E7%9A%84%E6%AD%8C/</url>
    <content><![CDATA[<p>转到 Spotify 好久了，当初是因为音乐版权的原因到 Spotify 的。用了一段时间免费版的，发现还行，就上了车。</p>
<span id="more"></span>
<p>但是渐渐的发现，外国的月亮也没有很圆，还是有些歌是找不到的。不知道是不是所在区域的原因（我是美区）。但是如果是这个原因，我想我也不会因为个别歌曲去频繁换区。</p>
<p>之前在网易云，如果有些歌曲没有版权，那么可以在音乐云盘中上传那些歌，这样就可以缓存到各个终端去听了。</p>
<p>曾经有人夸赞过这个功能：「想出音乐云盘的产品经理真是个天才」。</p>
<p>在 Spotify 中也是有类似的功能的，只是没有很显式的标注出来。</p>
<h2 id="程序版本"><a href="#程序版本" class="headerlink" title="程序版本"></a>程序版本</h2><h3 id="PC-端"><a href="#PC-端" class="headerlink" title="PC 端"></a>PC 端</h3><p>1.1.29.592.gf0779179（Windows 10 10.0.18363）</p>
<h3 id="手机端"><a href="#手机端" class="headerlink" title="手机端"></a>手机端</h3><p>8.5.52.935（IOS 13.4）</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><p>没有特别标注的，默认在 PC 端操作。</p>
<h3 id="添加本地文件夹"><a href="#添加本地文件夹" class="headerlink" title="添加本地文件夹"></a>添加本地文件夹</h3><p>在 Spotify 也是能听本地音乐的，具体方法如下：</p>
<p>设置（Settings）-本地文件（Local Files）-添加源（ADD A SOURCE）</p>
<p>然后选择你存放本地音频文件的文件夹。</p>
<h3 id="播放本地音乐"><a href="#播放本地音乐" class="headerlink" title="播放本地音乐"></a>播放本地音乐</h3><p>在侧边栏你的音乐库（YOUR LIBRARY）选择本地文件（Local Files）；</p>
<p>这时候你只要右键需要同步的歌曲，选择添加到播放列表（Add to Playlist），然后选择一个播放列表（Playlist）就可以了。之后你就能在各个终端听了。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/如何在-Spotify-听没有版权的歌/2020-04-10.png" alt="2020-04-10"></p>
<!-- <img data-src="/2020/04/10/%E5%A6%82%E4%BD%95%E5%9C%A8-Spotify-%E5%90%AC%E6%B2%A1%E6%9C%89%E7%89%88%E6%9D%83%E7%9A%84%E6%AD%8C/2020-04-10.png" class="" title="2020-04-10.png"> -->
<p>但是，如果这时候你想要给这首歌打上赞（Like），加入到已按赞的歌曲（Liked Songs）却是不行。</p>
<p>而我一般上下班听歌的时候，都是直接播放已按赞的歌曲（Liked Songs），每过一段时间就备份一次，清空列表重新选歌。</p>
<p>那么该如何将本地的歌曲加入到已按赞的歌曲（Liked Songs）呢？</p>
<p>这时你需要播放你这首歌曲。</p>
<h3 id="打开手机-APP"><a href="#打开手机-APP" class="headerlink" title="打开手机 APP"></a>打开手机 APP</h3><p>因为 Spotify 只允许一个终端播放，所以你的 APP 会跳出这个提示：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/如何在-Spotify-听没有版权的歌/APP-PLAY.png" alt="APP-PLAY.png"></p>
<!-- <img data-src="/2020/04/10/%E5%A6%82%E4%BD%95%E5%9C%A8-Spotify-%E5%90%AC%E6%B2%A1%E6%9C%89%E7%89%88%E6%9D%83%E7%9A%84%E6%AD%8C/APP-PLAY.png" class="" title="APP-PLAY.png"> -->
<p>点击继续，然后打开播放页：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/如何在-Spotify-听没有版权的歌/PLAY.png" alt="PLAY.png"></p>
<!-- <img data-src="/2020/04/10/%E5%A6%82%E4%BD%95%E5%9C%A8-Spotify-%E5%90%AC%E6%B2%A1%E6%9C%89%E7%89%88%E6%9D%83%E7%9A%84%E6%AD%8C/PLAY.png" class="" title="PLAY.png"> -->
<p>这时你会发现在手机 APP 上是有心形按钮的，你只需要点击一下，虽然点击之后，在当前界面没有显示标记为赞。</p>
<p>但是，当你去到已按赞的歌曲（Liked Songs），就能看到这首歌了。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/如何在-Spotify-听没有版权的歌/Liked-Songs.png" alt="Liked-Songs.png"></p>
<!-- <img data-src="/2020/04/10/%E5%A6%82%E4%BD%95%E5%9C%A8-Spotify-%E5%90%AC%E6%B2%A1%E6%9C%89%E7%89%88%E6%9D%83%E7%9A%84%E6%AD%8C/Liked-Songs.png" class="" title="Liked-Songs.png"> -->
<p>一般我都是将所有的歌曲下载的。</p>
<p>这时在所有的终端就都可以听这首歌了。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>要注意的是，在 Spotify 中，歌曲下载后也是无法离线播放的。在播放前 Spotify 应该会有一个验证的过程，验证通过后才能播放下载的歌曲。</p>
<p>另外还有一个比较头疼的是，每次你的 Spotify Premium 到期后，所有已经下载的歌曲就被删除，下次再开通 Spotify Premium 需要重新下载，比较费时间。</p>
<p>所以，尽量在到期前对 Spotify Premium 进行续费，不要使其存在空档期。</p>
]]></content>
      <categories>
        <category>奇技淫巧</category>
      </categories>
      <tags>
        <tag>奇技淫巧</tag>
        <tag>Spotify</tag>
      </tags>
  </entry>
  <entry>
    <title>将hexo博客部署到Github Pages</title>
    <url>/2020/03/16/%E5%B0%86hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0Github-Pages/</url>
    <content><![CDATA[<p>本来博客是部署在自己的服务器上的，但是华为云的备案实在是太慢了，所以想着先部署到 <a href="https://pages.github.com/">Github Pages</a> 上，这样至少不用每天顶着个服务器地址来访问了。</p>
<span id="more"></span>
<p>昨天（2020-3-17）下午备案终于通过了。但是这个 Github Pages 的部署过程还是要写一下的，毕竟学到了很多东西，我准备分两块来写，一部分是使用 hexo 搭建博客，一部分是当前你看到的这篇，如何将 hexo 博客部署到 Github Pages。</p>
<h2 id="什么是-GitHub-Pages"><a href="#什么是-GitHub-Pages" class="headerlink" title="什么是 GitHub Pages"></a>什么是 GitHub Pages</h2><p>往常，当你需要部署一个静态网站时，你需要一台有公网 IP 的服务器或者是虚拟主机，然后在上面通过配置 Nginx、Tomcat 或者 IIS 等网页服务器来部署你的网站。之后再通过域名的 DNS 设置，将你的域名指向到你的服务器地址。这样，当访问这个域名的时候，就能见到你的网站了。</p>
<p>如果你在中国，你还要经过较长且繁琐的备案程序，最终才能使你的网站可以访问。</p>
<p>而 GitHub Pages 则帮你省去了很多步骤，你甚至不需要域名，你就可以拥有属于自己的网站。</p>
<h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><h3 id="首先你需要有一个网站的源文件"><a href="#首先你需要有一个网站的源文件" class="headerlink" title="首先你需要有一个网站的源文件"></a>首先你需要有一个网站的源文件</h3><p>我部署的网站是我的博客，就是你当前在浏览的这个网站，他是由 hexo 来生成的。接下来过程都是基于 hexo 的博客来写的。</p>
<p>当然，如果你对样式或者内容不满意，你也可以自己修改或者完全自己手搓一份。</p>
<h3 id="然后你需要一个-GitHub-账号"><a href="#然后你需要一个-GitHub-账号" class="headerlink" title="然后你需要一个 GitHub 账号"></a>然后你需要一个 GitHub 账号</h3><p>你需要在 <a href="https://github.com">GitHub 官网</a> 注册一个属于你自己的账号。你的用户名（Name），将决定你的 GitHub Pages 域名（ <em>你的GitHub用户名.github.io</em> ）。虽然之后也可以更改，但是更改用户名之后会有很多意想不到的问题出现，所以干嘛不一开始就做到最好，给自己取个好听又好记的名字吧。</p>
<h3 id="新建-repository"><a href="#新建-repository" class="headerlink" title="新建 repository"></a>新建 repository</h3><h4 id="新建本地仓库"><a href="#新建本地仓库" class="headerlink" title="新建本地仓库"></a>新建本地仓库</h4><p>在你的 Hexo 站点文件夹目录下使用：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>
<p>来初始化你的 git 仓库。</p>
<h4 id="新建远程仓库"><a href="#新建远程仓库" class="headerlink" title="新建远程仓库"></a>新建远程仓库</h4><p>在<a href="https://github.com/new">这里</a>新建一个 repository，Repository name 就是上面说的 <em>你的GitHub用户名.github.io</em> ，我的就是 <em>AemonCao.github.io</em>。</p>
<p>点击 <em>Creating repository</em> 即可创建。</p>
<p>这样，你就得到了一个远程的 git 仓库，记下你的仓库地址：<em><a href="https://github.com/AemonCao/AemonCao.git">https://github.com/AemonCao/AemonCao.git</a></em> ，这个地址可以在仓库页面，点击 <em>Clone or download</em> 来进行复制。</p>
<h3 id="分支的操作"><a href="#分支的操作" class="headerlink" title="分支的操作"></a>分支的操作</h3><p>由于 GitHub 现在不允许将非主分支发布到 GitHub Pages，推送部署的目标只能是 <em>master</em> 分支。而我们上传到 <em>master</em> 分支的并不是最后需要部署的静态文件，所以我们需要新建一个名为 <em>source</em> 的分支：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git checkout -b source</span><br></pre></td></tr></table></figure>
<p>它是下面两条命令的简写：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git branch source</span><br><span class="line">git checkout source</span><br></pre></td></tr></table></figure>
<p>意思是新建并切换到一个名为 <em>source</em> 的分支。</p>
<p>文件夹中不应该包含 <em>node_modules</em> 、 <em>public</em> 等文件夹以及文件，所以你需要将这些文件/文件夹写进你的 <em>.gitignore</em> 。</p>
<p>具体 <em>.gitignore</em> 如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br></pre></td></tr></table></figure>
<p>然后进行第一次 commit：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit -m &#x27;first commit&#x27;</span><br></pre></td></tr></table></figure>
<p>现在你的 <em>source</em> 分支就是用来存储你的 Hexo 站点源文件。</p>
<h3 id="推送-Hexo-站点文件夹"><a href="#推送-Hexo-站点文件夹" class="headerlink" title="推送 Hexo 站点文件夹"></a>推送 Hexo 站点文件夹</h3><p>添加远程仓库：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git remote add origin https://github.com/AemonCao/AemonCao.git</span><br></pre></td></tr></table></figure>
<p>之后将本地仓库推送的 GitHub 上你刚刚建立的远程仓库中：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git push -u origin source</span><br></pre></td></tr></table></figure>
<h3 id="Travis-CI"><a href="#Travis-CI" class="headerlink" title="Travis CI"></a>Travis CI</h3><h4 id="添加-Travis-CI"><a href="#添加-Travis-CI" class="headerlink" title="添加 Travis CI"></a>添加 Travis CI</h4><p>在<a href="https://github.com/marketplace/travis-ci">这里</a>，将 Travis CI 添加到你的 GitHub 中去。</p>
<h4 id="Token"><a href="#Token" class="headerlink" title="Token"></a>Token</h4><p>在 GitHub 中<a href="https://github.com/settings/tokens">新建 Personal Access Token</a>，只需要勾选 <em>repo</em> 即可。</p>
<p>生成并复制 Token。</p>
<h4 id="配置-Travis-CI"><a href="#配置-Travis-CI" class="headerlink" title="配置 Travis CI"></a>配置 Travis CI</h4><p>然后在<a href="https://github.com/settings/installations">这里</a>，配置你的 Travis CI 权限，使其能访问的你仓库。</p>
<p>之后你会被重定向到 <a href="https://travis-ci.com/">Travis CI</a>，然后使用你的 GitHub 账号来进行登录。</p>
<p>前往的你在 Travis CI 的仓库，进入 Settings 页面，在 Environment Variables 栏目下新建一个新的环境变量，Name 为 <code>GH_TOKEN</code>，Value 为你刚才在 GitHub 中生成并复制的 Token。生成后保存。</p>
<h3 id="travis-yml"><a href="#travis-yml" class="headerlink" title=".travis.yml"></a>.travis.yml</h3><p>在你的 Hexo 站点文件夹中新建一个名为 <em>.travis.yml</em> 的文件，内容如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">sudo:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">node_js</span></span><br><span class="line"><span class="attr">node_js:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">10</span> <span class="comment"># use nodejs v10 LTS</span></span><br><span class="line"><span class="attr">cache:</span> <span class="string">npm</span></span><br><span class="line"><span class="attr">branches:</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">source</span> <span class="comment"># build hexo branch only</span></span><br><span class="line"><span class="attr">script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">hexo</span> <span class="string">generate</span> <span class="comment"># generate static files</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">provider:</span> <span class="string">pages</span></span><br><span class="line">  <span class="attr">skip-cleanup:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">github-token:</span> <span class="string">$GH_TOKEN</span></span><br><span class="line">  <span class="attr">keep-history:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">on:</span></span><br><span class="line">    <span class="attr">all_branches:</span> <span class="literal">true</span> <span class="comment"># solve a permission problem</span></span><br><span class="line">  <span class="attr">target_branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">local-dir:</span> <span class="string">public</span></span><br></pre></td></tr></table></figure>
<p>这个文件是 Travis CI 的配置文件，目的是告诉 Travis CI 以何种方式编译 <em>source</em>  分支中的源文件，并生成到 <em>master</em> 分支中去。</p>
<p>推送 <em>.travis.yml</em> 到你的远程仓库。Travis CI 就会自动运行，稍等片刻后，博客的静态文件就会出现在你的远程仓库的 <em>master</em> 分支中去了。与此同时，你就可以在 <em>你的GitHub用户名.github.io</em> 看到你的博客啦！</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>有些需要注意的点。</p>
<h3 id="子项目"><a href="#子项目" class="headerlink" title="子项目"></a>子项目</h3><p>通常如果使用 Hexo 的话，我不会使用自带的 theme。以当前使用的 <a href="https://github.com/theme-next/hexo-theme-next">Next</a> 主题为例，官方的使用方法是通过 clone 源项目来使用。而由于 Hexo 的具有强大的可配置性（它拥有 1000 多行配置文件），我建议是将原项目 Fork 到自己的仓库中，再进行 clone，然后使用 <a href="/2020/03/11/Linux学习记录/#Submodules">Submodules</a> 的方法将其加入到 Hexo 的站点项目中。</p>
<h3 id="编译速度"><a href="#编译速度" class="headerlink" title="编译速度"></a>编译速度</h3><p>虽然 Travis CI 很方便，但是他的编译速度却很慢。通常从 push 到远程仓库到完成需要 1 分钟左右的时间。所以我建议首先在确定编译生成的文件无误后，再进行 push。这样可以节省大量的时间。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><p><a href="https://hexo.io/zh-cn/docs/github-pages#Project-page">将 Hexo 部署到 GitHub Pages</a></p>
</li>
<li><p><a href="https://help.github.com/en/github/working-with-github-pages/getting-started-with-github-pages">Getting started with GitHub Pages</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>GitHub</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>微波炉简易使用指南</title>
    <url>/2021/05/18/%E5%BE%AE%E6%B3%A2%E7%82%89%E7%AE%80%E6%98%93%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<p>「不要盯着微波炉看，会有辐射。」小时候，总是会听到大人对我这么说。说实话这句话影响了我蛮久一段时间，我甚至会在启动微波炉后跑到另一家房间来避免「辐射」。</p>
<p>前段时间，我开始自己带饭到公司做为午餐，我妈每天给我准备了不同的菜。在用微波炉加热饭菜的时候我就遇到了很多问题，例如有时候加热出来的饭菜会一部分热，一部分不热；例如加热时我应不应该加盖；什么样的器皿可以放入微波炉加热？</p>
<p>为了知道这些问题的答案，我想先弄懂微波炉的原理是什么？我觉得只要知道事物的基本原理，那么上面这些问题也就迎刃而解了。</p>
<h2 id="微波炉的原理"><a href="#微波炉的原理" class="headerlink" title="微波炉的原理"></a>微波炉的原理</h2><p>食物中存在的<a href="https://zh.wikipedia.org/wiki/%E6%9E%81%E6%80%A7">电极性分子</a>会在微波的震荡下旋转，从而产生热量。</p>
<p>什么是电极性分子呢？简单来说如果分子中的电荷分布不均匀，那么它就是电极性分子。</p>
<p>水（H2O）——就是一种电极性分子。</p>
<p>什么又是微波呢？微波和红外线、可见光、X 射线一样，都是一种电磁波。它的频率范围大概在 300MHz 至 300GHz 之间，对应的波长则为 1m 至 1mm之间。微波有三种特性：<strong>穿透</strong>、<strong>吸收</strong>和<strong>反射</strong>。对于玻璃、塑料和瓷器，微波几乎是穿越而不被吸收。对于水和食物等就会吸收微波而使自身发热。而对金属类东西，则会反射微波。</p>
<p>结合微波的这三种特性，我们就能初步理解微波的设计以及使用方法。</p>
<h2 id="微波炉的设计与使用"><a href="#微波炉的设计与使用" class="headerlink" title="微波炉的设计与使用"></a>微波炉的设计与使用</h2><p>首先用于加热的器皿可以使用玻璃、塑料和瓷器这些不会吸收的材质，这样在加热完成后器皿的温度只有加热后的食物于其接触传递来的热量。但如果加热的食物带汤，那么器皿的温度还是会很高的，还是得戴手套去取。</p>
<p>其次是被加热的食物含水量越多，那么加热的效率就会越高，这样将就可以大致的估计需要加热的时间了。需要注意的是，如果加热的是<strong>高脂肪低水份</strong>的食物，那么其加热速度会比高水分的食物更加快，需要减少其加热的时间。</p>
<p>最后是微波炉的金属壳可以很好的隔绝微波，并使其在腔内不停得反射增大微波使用效率。</p>
<h2 id="微波炉的一些特点"><a href="#微波炉的一些特点" class="headerlink" title="微波炉的一些特点"></a>微波炉的一些特点</h2><p>相比与一般从外向里的加热方式，微波这是内外同时加热，所以不太会出现外边熟了里面还没熟的情况。</p>
<p>由于微波会在腔内通过金属壁进行反射，通常这种情况下就会出现驻波，这就导致了被加热的食物在波传播的方向上，会出现一段热一段不太热的情况，而且这个两处的距离和微波的波长有关，简单来说，相邻两处较热区域之间的距离约等于微波的波长的一半，知道了波长，我们就可以算出微波炉微波的频率了。</p>
<p>也因为上面这种情况，微波炉大多带一个玻璃转盘，通过旋转食物，来规避上面这种间断加热的问题。</p>
<h2 id="微波炉的一些-Tips"><a href="#微波炉的一些-Tips" class="headerlink" title="微波炉的一些 Tips"></a>微波炉的一些 Tips</h2><ul>
<li><p>加热带壳和带皮的食物时，需要将其戳破或去皮，否则会因内部水分蒸发导致内部压力增加而爆裂。</p>
</li>
<li><p>加热液体时应避免单独入微波炉加热，要放置搅拌棒等以助热能释放。没有杂质的蒸馏水加热后尤其不应立即取出，因温度可能已经超过沸点但仍然不沸腾汽化，一旦受到扰动则会暴沸灼伤。一般家用自来水因为其中含有少许杂质，单独加热也会沸腾。</p>
</li>
<li><p>带壳蛋不论生熟都不应微波加热。去壳生蛋须刺破蛋黄，否则高温加热时也会爆裂喷溅；去壳熟蛋因蛋白紧密包覆，蛋黄依然有可能爆裂，需切开加热。</p>
</li>
</ul>
<h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ol>
<li><p><a href="https://zh.wikipedia.org/wiki/%E5%BE%AE%E6%B3%A2%E7%82%89">https://zh.wikipedia.org/wiki/%E5%BE%AE%E6%B3%A2%E7%82%89</a></p>
</li>
<li><p><a href="https://en.wikipedia.org/wiki/Microwave_oven">https://en.wikipedia.org/wiki/Microwave_oven</a></p>
</li>
<li><p><a href="https://www.youtube.com/watch?v=kp33ZprO0Ck">https://www.youtube.com/watch?v=kp33ZprO0Ck</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>事物原理</category>
      </categories>
      <tags>
        <tag>微波炉</tag>
        <tag>常识</tag>
      </tags>
  </entry>
  <entry>
    <title>《悲惨世界》</title>
    <url>/2019/12/10/%E6%82%B2%E6%83%A8%E4%B8%96%E7%95%8C/</url>
    <content><![CDATA[<p>《<a href="https://book.douban.com/subject/5407295/">悲惨世界</a>》（Les Misérables）</p>
<ul>
<li><p>一个不愿意让人批评的社会，好比一位讳疾忌医的病人。</p>
</li>
<li><p>再说，谁又能实现自己的理想呢？</p>
</li>
<li><p>即使搞字谜，也要有个限度。凡事都有分寸。即使是饮食，也有限度。女士们，你们喜欢苹果酱馅饼，但不要吃得太多。即使吃馅饼，也要合情合理，要讲究艺术。暴食会惩罚暴食的人。贪吃会惩罚贪吃的人。消化不良是仁慈的上帝用来教训胃的。请记住，我们每一种欲望，即使是爱情，都有一个胃，不要塞得太满。做任何事，都要及时写上‘终止’。在紧急关头要善于控制自己，要给欲望插上插销，把欲念送进拘留所，将自己送进警察局。聪明人在适当的时候会把自己抓起来。</p>
</li>
<li><p>博杜安阵亡，富瓦受伤，烈火，屠杀，屠戮，英国人的血、德国人的血、法国人的血，汇成一条汹涌的小河，一口井里堆满尸体，纳索和不伦瑞克的两个团被歼灭，迪普拉阵亡，布拉克曼阵亡，英国近卫队受到重创，法国雷耶兵团的四十个营中，损失了二十个营，就在这乌戈蒙破城堡里，三千人被砍死劈伤，被手扼死，被子弹射死，被火烧死；所有这一切，只为今天一个农民对一个旅客说：「先生，给我三法郎，您乐意的话，我给您讲讲滑铁卢的事。」</p>
</li>
<li><p>大革命前，若有大人物如法兰西元帅、亲王、公爵或封臣经过勃艮第或香槟的某个城市，官员们要来致词，并用四只舟形银杯，敬献四种不同的美酒。在第一只酒杯上，刻着「猴酒」，第二只刻着「狮酒」，第三只刻着「羊酒」，第四只刻着「猪酒」。这四个铭文表达四种不同程度的醉酒状：第一种是快乐，第二种是愤怒，第三种是迟钝，最后一种是傻呆。</p>
</li>
<li><p>我们给与人的快乐有其可爱的一面，它不像任何反光，会渐渐衰弱，而是反回到我们身上时，会更光辉灿烂。</p>
</li>
<li><p>白天是恶棍，只配吃闭门羹。体面的人要等天空点亮星星时，才能点亮智慧。</p>
</li>
<li><p>女人玩弄美色，正如孩子玩弄刀枪，结果是自讨苦吃。</p>
</li>
<li><p>石头下面有颗心</p>
</li>
<li><p>她的脑袋又落到马里尤斯的膝盖上，眼睛也合上了。他以为这个可怜的姑娘已走了。埃波妮一动不动。就在马里尤斯以为她从此长眠不醒的时候，她却慢慢睁开眼，露出死亡时的幽深阴沉的神态，她用看似来自另一个世界的温柔语气对他说：「听我说，马里尤斯先生，我想我是有点爱上您了。」她又尽力笑了笑，便断气了。</p>
</li>
<li><p>读者此刻手上的这部书，从头到尾，从整体到细节，不管多么断断续续，不管有什么例外或缺陷，它总是在叙述从恶走向善，从不公正走向公正，从虚假走向真实，从黑夜走向白天，从贪欲走向良心，从腐朽走向生活，从兽性走向责任，从地狱走向天堂，从虚无走向上帝。出发点是物质，终点是灵魂。始为妖怪，终为天使。</p>
</li>
<li><p>在现实的人类社会中，除非有更大的光明将它改变，否则永远存在着两种人，一个在天上，一个在地下，一个是从善的亚伯，一个是从恶的该隐。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>书摘</category>
      </categories>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>《月亮与六便士》</title>
    <url>/2019/07/19/%E6%9C%88%E4%BA%AE%E4%B8%8E%E5%85%AD%E4%BE%BF%E5%A3%AB/</url>
    <content><![CDATA[<p>《<a href="https://book.douban.com/subject/26954760/">月亮与六便士</a>》（The Moon and Sixpence）</p>
<ul>
<li><p>我不想谋生。我想生活。</p>
</li>
<li><p>感情自有其理，理性难以知晓。</p>
</li>
<li><p>让人行动高尚的，有时是自满得意；而痛苦，往往使人变得心胸狭窄，充满仇恨。</p>
</li>
<li><p>我不想过去。唯一重要的，是永恒的现在。</p>
</li>
<li><p>女人心中的爱，往往只是亲昵和安慰，大多数女人都是这种反应。这是一种被动的感情，能够被任何一个人激起，就像藤蔓可以攀爬在任何一棵树上；当一个姑娘嫁给随便哪个男人，总相信日久生情，世俗之见，如此牢固。说到底，这种感情不过是衣食无虞的满足，财产殷实的骄傲，受人爱慕的愉悦，以及家庭圆满的得意；女人赋予这种感情精神层面的价值，只是出于一种无伤大雅的虚荣。</p>
</li>
<li><p>上帝的磨盘转得很慢，但磨得很细。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>书摘</category>
      </categories>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>榨干这台 NAS 第 000 话-目录结构</title>
    <url>/2022/08/08/%E6%A6%A8%E5%B9%B2%E8%BF%99%E5%8F%B0NAS%E7%AC%AC000%E8%AF%9D-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<p>这是一系列关于 NAS 的文章，系列的名称你们也看到了：「<strong>榨干这台 NAS</strong>」。我将尽可能详细的介绍 NAS 相关的知识，帮助你最大限度的发挥你的手中 NAS 的威力！</p>
<span id="more"></span>
<p>关于第一话，按照一般的文章套路来说，都是介绍一下 NAS 是什么，能用来做什么。但是我觉得能看到这篇文章的人，一般也不再需要科普这些内容。对了，此系列教程全部是软件向的，如果你需要自己组装一台 NAS，那么这系列的文章你可以先收藏，等组装完了再来看。话说回来，本文将向大家介绍一下我是如果规划我的<strong>文件目录结构</strong>的。</p>
<p>文件目录结构的构建，将对后续所有的容器搭建起到十分关键的影响，说他是万事之根本也不为过，不光是 NAS，你的 PC，你的程序项目，一个考虑周到且一目了然的目录结构，将极大方便你的后续工作。</p>
<p>P.S.：本文不但是 NAS 的文件目录，而且是这系列文章的目录结构。</p>
<p>P.P.S.：关于文件夹的命名规则，全小写（<code>ofcourseistillloveyou</code>），全大写（<code>OFCOURSEISTILLLOVEYOU</code>），大驼峰（<code>OfCourseIStillLoveYou</code>），小驼峰（<code>ofCourseIStillLoveYou</code>），下划线连接（<code>of_course_i_still_love_you</code>），连接号连接（<code>of-course-i-still-love-you</code>）都随你心意，只要你能做到一下几点：「统一、容易辨识、尽量不要空格，尽量只使用英文、数字、连接号和下划线」。</p>
<p>系列相关文章：</p>
<ol>
<li><a href="/2022/08/08/%E6%A6%A8%E5%B9%B2%E8%BF%99%E5%8F%B0NAS%E7%AC%AC001%E8%AF%9D-%E6%96%87%E4%BB%B6%E6%B5%8F%E8%A7%88%E5%99%A8%EF%BC%88FileBrowser%EF%BC%89/" title="榨干这台 NAS 第 001 话-文件浏览器（File Browser）">榨干这台 NAS 第 001 话-文件浏览器（File Browser）</a>
</li>
</ol>
<h2 id="root（根目录）"><a href="#root（根目录）" class="headerlink" title="root（根目录）"></a>root（根目录）</h2><p>这里的 root 指的是你的 NAS 中存放你大部分个人文件的最顶层目录，而不是 Linux 系统中的 <code>/</code> 目录。</p>
<p>从这里开始，我们就要对你的文件进行分类。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">root</span><br><span class="line">├── backup</span><br><span class="line">├── books</span><br><span class="line">├── code</span><br><span class="line">├── data</span><br><span class="line">├── downloads</span><br><span class="line">├── manga</span><br><span class="line">├── media</span><br><span class="line">├── music</span><br><span class="line">└── pictures</span><br></pre></td></tr></table></figure>
<h3 id="media（媒体）"><a href="#media（媒体）" class="headerlink" title="media（媒体）"></a>media（媒体）</h3><p>存放你大多数媒体文件的地方。</p>
<p>肯定有一部分人想要有一台 NAS 的初衷是想搭建一个自己的家庭媒体中心。而这个文件夹就是家庭媒体中心的关键。你的电视剧，电影，小电影，行车记录仪，各类自媒体的视频存档，都可以放在这个文件夹下面。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">root</span><br><span class="line">├── backup</span><br><span class="line">├── books</span><br><span class="line">├── code</span><br><span class="line">├── data</span><br><span class="line">├── downloads</span><br><span class="line">├── manga</span><br><span class="line">├── media</span><br><span class="line">│   ├── av</span><br><span class="line">│   ├── bilibili</span><br><span class="line">│   ├── h</span><br><span class="line">│   ├── movie</span><br><span class="line">│   ├── tv_series</span><br><span class="line">│   ├── teslacam</span><br><span class="line">│   └── youtube</span><br><span class="line">├── music</span><br><span class="line">└── pictures</span><br></pre></td></tr></table></figure>
<h4 id="movie（电影）"><a href="#movie（电影）" class="headerlink" title="movie（电影）"></a>movie（电影）</h4><p>存放你正经电影的地方。</p>
<p>此目录下应该只存放被刮削后的电影，每部电影应该拥有自己的单独子文件夹，子文件夹中存放电影、字幕、nfo文件和海报图片。电影（movie）文件夹的目录将在后续的文章中进行详细介绍。</p>
<h4 id="tv-series（电视剧集）"><a href="#tv-series（电视剧集）" class="headerlink" title="tv_series（电视剧集）"></a>tv_series（电视剧集）</h4><p>存放你各类电视剧集的地方。</p>
<p>你的动漫，美剧，韩剧，<del>抗日神剧</del>等都应该存放在这里。和电影（movie）文件夹相同，每部电视剧集应该拥有自己的单独子文件夹，子文件夹中存放电视剧集、字幕、nfo文件和海报图片。电视剧集（tv_series）文件夹的目录将在后续的文章中进行详细介绍。</p>
<h4 id="av（不正经电影）"><a href="#av（不正经电影）" class="headerlink" title="av（不正经电影）"></a><del>av（不正经电影）</del></h4><p>存放小姐姐的地方。</p>
<p>你的小姐姐们都住在这里，这里的文件命名也有相应的规则，具体规则以及相关的工具，也会在后续文章中介绍。</p>
<h4 id="h（不正经视频）"><a href="#h（不正经视频）" class="headerlink" title="h（不正经视频）"></a><del>h（不正经视频）</del></h4><p>一些没有<del>番号</del>部队番号的小姐姐，将会放在这里。</p>
<h4 id="youtube"><a href="#youtube" class="headerlink" title="youtube"></a>youtube</h4><p>YouTube 的视频存档将存放在此处。后续将会介绍用于下载 YouTube 视频的工具。</p>
<h4 id="bilibili"><a href="#bilibili" class="headerlink" title="bilibili"></a>bilibili</h4><p>同 YouTube。</p>
<h4 id="TeslaCam（特斯拉汽车行车记录视频以及哨兵录像）"><a href="#TeslaCam（特斯拉汽车行车记录视频以及哨兵录像）" class="headerlink" title="TeslaCam（特斯拉汽车行车记录视频以及哨兵录像）"></a>TeslaCam（特斯拉汽车行车记录视频以及哨兵录像）</h4><p>特斯拉汽车行车记录录像将会存放在此处。后续将会介绍用于合并和查看行车记录仪的工具。</p>
<h3 id="pictures（照片）"><a href="#pictures（照片）" class="headerlink" title="pictures（照片）"></a>pictures（照片）</h3><p>NAS 的另一个作用就是作为家庭相册，你的手机，相机拍摄的照片和视都将存储在此处，在这里，分类的方式多种多样，可以按照设备分类、按照日期分类、按照事件分类请以你觉得方便的形式进行分类，这些都不太会影响后续的家庭相册的建立。但是请尽量做到容易辨识。</p>
<p>关于家庭相册的建立，后续的文章也将会进行介绍。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">root</span><br><span class="line">├── backup</span><br><span class="line">├── books</span><br><span class="line">├── code</span><br><span class="line">├── data</span><br><span class="line">├── downloads</span><br><span class="line">├── manga</span><br><span class="line">├── media</span><br><span class="line">├── music</span><br><span class="line">└── pictures</span><br><span class="line">    ├── iPhone_7</span><br><span class="line">    │   └── 2022</span><br><span class="line">    │       └── 08</span><br><span class="line">    ├── Nikon_D5600</span><br><span class="line">    │   └── 20220808_重庆行</span><br><span class="line">    ├── iCloud</span><br><span class="line">    │   └── bot960528gmailcom</span><br><span class="line">    │       └── 2022</span><br><span class="line">    │           └── 08</span><br><span class="line">    │               └── 08</span><br><span class="line">    ├── Qzone</span><br><span class="line">    └── other</span><br></pre></td></tr></table></figure>
<p>接下来介绍几种分类方式：</p>
<h4 id="iPhone-7（按照设备）"><a href="#iPhone-7（按照设备）" class="headerlink" title="iPhone_7（按照设备）"></a>iPhone_7（按照设备）</h4><p>此处将存放你的 iPhone 7 拍摄的照片和视频。</p>
<h5 id="2022（年份）"><a href="#2022（年份）" class="headerlink" title="2022（年份）"></a>2022（年份）</h5><p>此处将存放你的 iPhone 7 于 2022 年所拍摄的照片和视频。</p>
<h6 id="08（月份）"><a href="#08（月份）" class="headerlink" title="08（月份）"></a>08（月份）</h6><p>此处将存放你的 iPhone 7 于 2022 年 8 月所拍摄的照片和视频。</p>
<h4 id="Nikon-D5600（按照设备）"><a href="#Nikon-D5600（按照设备）" class="headerlink" title="Nikon_D5600（按照设备）"></a>Nikon_D5600（按照设备）</h4><p>此处将存放你的 Nikon D5600 拍摄的照片和视频。</p>
<h5 id="20220808重庆行（时间旅行）"><a href="#20220808重庆行（时间旅行）" class="headerlink" title="20220808重庆行（时间旅行）"></a>20220808<em>重庆行（时间</em>旅行）</h5><p>此处将存放你的 Nikon D5600 在 2022 年 8 月 8 日于重庆旅行时拍摄的照片和视频。</p>
<h4 id="iCloud（按照备份方式）"><a href="#iCloud（按照备份方式）" class="headerlink" title="iCloud（按照备份方式）"></a>iCloud（按照备份方式）</h4><p>此处将存放从 iCloud 下载的照片和视频。关于自动从 iCloud 定时下载照片的方法，后续将进行介绍。</p>
<h4 id="Qzone（按照照片来源）"><a href="#Qzone（按照照片来源）" class="headerlink" title="Qzone（按照照片来源）"></a>Qzone（按照照片来源）</h4><p>此处将存放你在 QQ 空间的<del>黑历史</del>照片。关于 QQ 空间相册、说说的下载备份方法，后续将进行介绍。</p>
<h4 id="other（其他）"><a href="#other（其他）" class="headerlink" title="other（其他）"></a>other（其他）</h4><p>此处将存放一些你<del>懒的分类</del>无法分类的照片。</p>
<h3 id="downloads（下载）"><a href="#downloads（下载）" class="headerlink" title="downloads（下载）"></a>downloads（下载）</h3><p>下载，也是 NAS 的主要任务之一，你的所有下载任务以及下载的文件，应该都存放在此处。</p>
<p>关于下载的分类，我的规则是按照下载器的种类进行分类。当然，在各类下载器内部，希望大家也能做好文件的分类。</p>
<p>各类下载器的安装和配置，今后也将会有相应的介绍。</p>
<p>系列相关文章：</p>
<ol>
<li><a href="/2022/08/09/%E6%A6%A8%E5%B9%B2%E8%BF%99%E5%8F%B0NAS%E7%AC%AC002%E8%AF%9D-%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/" title="榨干这台 NAS 第 002 话-下载工具">榨干这台 NAS 第 002 话-下载工具</a>
</li>
</ol>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">root</span><br><span class="line">├── backup</span><br><span class="line">├── books</span><br><span class="line">├── code</span><br><span class="line">├── data</span><br><span class="line">├── downloads</span><br><span class="line">│   ├── aria2Downloads</span><br><span class="line">│   ├── emuleDownloads</span><br><span class="line">│   ├── farmDownloads</span><br><span class="line">│   ├── qBittorrentDownloads</span><br><span class="line">│   ├── thunderDownloads</span><br><span class="line">│   └── transmissionDownloads</span><br><span class="line">├── manga</span><br><span class="line">├── media</span><br><span class="line">├── music</span><br><span class="line">└── pictures</span><br></pre></td></tr></table></figure>
<h4 id="aria2Download（aria2-下载目录）"><a href="#aria2Download（aria2-下载目录）" class="headerlink" title="aria2Download（aria2 下载目录）"></a>aria2Download（aria2 下载目录）</h4><p>此处将存放由 aria2 下载的文件。</p>
<h4 id="emuleDownloads（emule-下载目录）"><a href="#emuleDownloads（emule-下载目录）" class="headerlink" title="emuleDownloads（emule 下载目录）"></a>emuleDownloads（emule 下载目录）</h4><p>此处将存放由 emule 下载的文件。</p>
<h4 id="qBittorrentDownloads（qBittorrent-下载目录）"><a href="#qBittorrentDownloads（qBittorrent-下载目录）" class="headerlink" title="qBittorrentDownloads（qBittorrent 下载目录）"></a>qBittorrentDownloads（qBittorrent 下载目录）</h4><p>此处将存放由 qBittorrent 下载的文件。</p>
<h4 id="transmissionDownloads（transmission-下载目录）"><a href="#transmissionDownloads（transmission-下载目录）" class="headerlink" title="transmissionDownloads（transmission 下载目录）"></a>transmissionDownloads（transmission 下载目录）</h4><p>此处将存放由 transmission 下载的文件。</p>
<h3 id="code（代码）"><a href="#code（代码）" class="headerlink" title="code（代码）"></a>code（代码）</h3><p>如果你是一个程序员，那么 NAS 还能成为你的代码仓库，当你在 NAS 上部署你的 git 服务时，其中的数据就可以存储在这里。如果你只将此文件夹作为你的工作目录的话（例如通过 ssh 连接到此服务器进行编码），那么你可以按照代码类型或者编程语言进行分类。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">root</span><br><span class="line">├── backup</span><br><span class="line">├── books</span><br><span class="line">├── code</span><br><span class="line">│   ├── script</span><br><span class="line">│   ├── project</span><br><span class="line">│   ├── java</span><br><span class="line">│   └── python</span><br><span class="line">├── data</span><br><span class="line">├── downloads</span><br><span class="line">├── manga</span><br><span class="line">├── media</span><br><span class="line">├── music</span><br><span class="line">└── pictures</span><br></pre></td></tr></table></figure>
<h4 id="script（按照类型）"><a href="#script（按照类型）" class="headerlink" title="script（按照类型）"></a>script（按照类型）</h4><p>此处将存放你的各类脚本。</p>
<h4 id="project（按照类型）"><a href="#project（按照类型）" class="headerlink" title="project（按照类型）"></a>project（按照类型）</h4><p>此处将存放你的各个项目。</p>
<h4 id="java（按照编程语言）"><a href="#java（按照编程语言）" class="headerlink" title="java（按照编程语言）"></a>java（按照编程语言）</h4><p>此处将存放你使用 java 编写的代码。</p>
<h4 id="python（按照编程语言）"><a href="#python（按照编程语言）" class="headerlink" title="python（按照编程语言）"></a>python（按照编程语言）</h4><p>此处将存放你使用 python 编写的代码。</p>
<h3 id="backup（备份）"><a href="#backup（备份）" class="headerlink" title="backup（备份）"></a>backup（备份）</h3><p>备份，这是数据保存中必不可少的一环，如果你的数据很宝贵。请务必进行备份。后续我将为大家介绍应该如何备份你的数据。</p>
<p>备份文件夹的命名可以简单些，你只要区分这是什么软件或数据的备份即可，所以你可以使用软件或数据名称加backup，作为你的文件名。</p>
<p>关于备份，希望能做到以下几点：</p>
<ol>
<li><p>记录备份文件的备份时间；</p>
</li>
<li><p>定时备份；</p>
</li>
<li><p>压缩后并加密，减少占用空间的同时并保证备份文件的安全；</p>
</li>
<li><p>3-2-1 备份原则，至少制作<strong>三</strong>份备份，将备份分别存放在<strong>两</strong>种不同的存储媒介中，至少存放<strong>一</strong>份在异地。</p>
</li>
</ol>
<p>请大家<strong>务必</strong>重视备份的重要性，不然等到数据丢失的时候，是无论如何也无法挽救的。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">root</span><br><span class="line">├── backup</span><br><span class="line">│   ├── bitwarden_backup</span><br><span class="line">│   └── wechat_backup</span><br><span class="line">├── books</span><br><span class="line">├── code</span><br><span class="line">├── data</span><br><span class="line">├── downloads</span><br><span class="line">├── manga</span><br><span class="line">├── media</span><br><span class="line">├── music</span><br><span class="line">└── pictures</span><br></pre></td></tr></table></figure>
<h4 id="wechat-backup（微信备份）"><a href="#wechat-backup（微信备份）" class="headerlink" title="wechat_backup（微信备份）"></a>wechat_backup（微信备份）</h4><p>这里用于存放你的微信备份。</p>
<h4 id="bitwarden-backup"><a href="#bitwarden-backup" class="headerlink" title="bitwarden_backup"></a>bitwarden_backup</h4><p>这里用于存放你的 BitWarden 备份。</p>
<h3 id="music（音乐）"><a href="#music（音乐）" class="headerlink" title="music（音乐）"></a>music（音乐）</h3><p>此处用于存放你的音乐。音乐的分类就比较简单，可以先按歌手进行分类，然后再安装专辑分类即可。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">root</span><br><span class="line">├── backup</span><br><span class="line">├── books</span><br><span class="line">├── code</span><br><span class="line">├── data</span><br><span class="line">├── downloads</span><br><span class="line">├── manga</span><br><span class="line">├── media</span><br><span class="line">├── music</span><br><span class="line">│   └── 周杰伦</span><br><span class="line">│       └── 叶惠美</span><br><span class="line">└── pictures</span><br></pre></td></tr></table></figure>
<h4 id="周杰伦"><a href="#周杰伦" class="headerlink" title="周杰伦"></a>周杰伦</h4><p>此处用于存放周杰伦的音乐。</p>
<h5 id="叶惠美"><a href="#叶惠美" class="headerlink" title="叶惠美"></a>叶惠美</h5><p>此处用于存放周杰伦的叶惠美专辑的歌曲。</p>
<h3 id="books（电子书）"><a href="#books（电子书）" class="headerlink" title="books（电子书）"></a>books（电子书）</h3><p>此处用于存放你的电子书，可以按照书籍的类型来分类，如：小说、文献、教科等等，这边将不再进行举例。。后续也将会介绍如果搭建你的电子书仓库。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">root</span><br><span class="line">├── backup</span><br><span class="line">├── books</span><br><span class="line">├── code</span><br><span class="line">├── data</span><br><span class="line">├── downloads</span><br><span class="line">├── manga</span><br><span class="line">├── media</span><br><span class="line">├── music</span><br><span class="line">└── pictures</span><br></pre></td></tr></table></figure>
<h3 id="manga（漫画）"><a href="#manga（漫画）" class="headerlink" title="manga（漫画）"></a>manga（漫画）</h3><p>此处用于存放的漫画。后续也将会介绍如果搭建你的漫画仓库。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">root</span><br><span class="line">├── backup</span><br><span class="line">├── books</span><br><span class="line">├── code</span><br><span class="line">├── data</span><br><span class="line">├── downloads</span><br><span class="line">├── manga</span><br><span class="line">├── media</span><br><span class="line">├── music</span><br><span class="line">└── pictures</span><br></pre></td></tr></table></figure>
<h3 id="data（数据）"><a href="#data（数据）" class="headerlink" title="data（数据）"></a>data（数据）</h3><p>数据是一个宽泛的词，其实上述所有的分类，都可以将其划进数据目录，所以这个目录的目的就是为了存放那些无法被上述目录所包含的数据。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">root</span><br><span class="line">├── backup</span><br><span class="line">├── books</span><br><span class="line">├── code</span><br><span class="line">├── data</span><br><span class="line">│   ├── document</span><br><span class="line">│   └── ISO</span><br><span class="line">│       ├── Windows</span><br><span class="line">│       ├── Ubuntu</span><br><span class="line">│       ├── Adobe</span><br><span class="line">│       └── JetBrains</span><br><span class="line">├── downloads</span><br><span class="line">├── manga</span><br><span class="line">├── media</span><br><span class="line">├── music</span><br><span class="line">└── pictures</span><br></pre></td></tr></table></figure>
<h4 id="ISO"><a href="#ISO" class="headerlink" title="ISO"></a>ISO</h4><p>用于存放你下载的各类系统镜像和各类软件的安装文件。</p>
<h5 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h5><p>用于存放 Windows 系统安装镜像。</p>
<h5 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h5><p>用于存放 Ubuntu 系统安装镜像。</p>
<h5 id="Adobe"><a href="#Adobe" class="headerlink" title="Adobe"></a>Adobe</h5><p>用于存放 Adobe 软件安装程序。</p>
<h5 id="JetBrains"><a href="#JetBrains" class="headerlink" title="JetBrains"></a>JetBrains</h5><p>用于存放 JetBrains 软件安装程序。</p>
<h4 id="document（文档）"><a href="#document（文档）" class="headerlink" title="document（文档）"></a>document（文档）</h4><p>用于存放你的工作生活文档。分类按照你的实际需求来就行，没有一种特定方法。</p>
<p>只要能遵循分类原则，就可以建立出易于管理和使用的目录。</p>
<h2 id="end"><a href="#end" class="headerlink" title="end"></a>end</h2><p>如果你刚开始使用 NAS，那么建议你可以按照这篇文章的介绍，来建立你的目录结构。如果你已经使用 NAS 很长一段时间，上面已经存储了许多数据，那么我还是建议你最好能够慢慢的，分块的整理一下你的 NAS，这将对今后的使用起到极大的帮助！</p>
<p>如果大家对目录结构有什么好的建议或意见，也可以在下面留言，我们可以一起讨论，如果有好的想法，我会第一时间对文章进行完善。</p>
]]></content>
      <categories>
        <category>榨干这台 NAS</category>
      </categories>
      <tags>
        <tag>NAS</tag>
        <tag>unRAID</tag>
      </tags>
  </entry>
  <entry>
    <title>榨干这台 NAS 第 001 话-文件浏览器（File Browser）</title>
    <url>/2022/08/08/%E6%A6%A8%E5%B9%B2%E8%BF%99%E5%8F%B0NAS%E7%AC%AC001%E8%AF%9D-%E6%96%87%E4%BB%B6%E6%B5%8F%E8%A7%88%E5%99%A8%EF%BC%88FileBrowser%EF%BC%89/</url>
    <content><![CDATA[<p>这是一系列关于 NAS 的文章，系列的名称你们也看到了：「<strong>榨干这台 NAS</strong>」。我将尽可能详细的介绍 NAS 相关的知识，帮助你最大限度的发挥你的手中 NAS 的威力！</p>
<span id="more"></span>
<p>在上一话中我们介绍了目录结构，那么应该如何编辑这些目录和文件呢？最最原始的方式就是使用命令来执行这些操作。但是这对于一部分不熟悉 Linux 系统的人来说，会显得有些困难。所以，这一话，我将介绍一个软件，可以用于 NAS 的文件浏览。如果你是群晖或威联通用户，那么其系统自带的软件就应该能满足大部分需求了，所以可以跳过这一话。</p>
<p>PS：接下来的操作将在 unRAID（6.10.2） 系统上进行。</p>
<p>PSS: 当然对于非 unRAID 系统的用户，我也会演示一下在 Linux 系统下应该如何进行安装。</p>
<h3 id="unRAID-下的安装和使用"><a href="#unRAID-下的安装和使用" class="headerlink" title="unRAID 下的安装和使用"></a>unRAID 下的安装和使用</h3><h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>前往「应用『Apps』」页面搜索「FileBrowser」，选择下图所示的应用：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第001话-文件浏览器（FileBrowser）/FileBrowser.png" alt="FileBrowser.png"></p>
<p>点击「安装『Install』」，即图中「Actions」按钮所在位置（因为我已经安装过这个软件，所以不会显示「Install」按钮了）。</p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第001话-文件浏览器（FileBrowser）/FileBrowserConfig.png" alt="FileBrowserConfig.png"></p>
<p>然后依照上图所示填写。</p>
<p>主要是配置了两个路径和一个端口：</p>
<ol>
<li><p>将宿主机的 <code>/</code> 路径映射至容器的 <code>/srv</code> 路径，此路径为你需要进行文件管理的路径；</p>
</li>
<li><p>将宿主机的 <code>/mnt/user/appdata/filebrowser/</code> 路径映射至容器的 <code>/db/</code> 路径，此路径为此容器的配置数据库路径，你之后所设置的用户名密码等个性配置信息都将存储在这里；</p>
</li>
<li><p>将宿主机的 <code>8222</code> 端口映射到容器的 <code>80</code> 端口，此端口为该容器的 WebUI 端口，之后可以通过此端口来访问 WebUI 界面（注意，请确定宿主机的 <code>8222</code> 端口无其他程序占用，不然将无法启动容器，如果被占用，可以自行更换端口）。</p>
</li>
</ol>
<p>点击应用，即可启动容器。如果你的配置无误，那么在等待片刻后，容器将会自动启动，接下来就可以使用了。</p>
<p>附上 unRAID 下的启动命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">/usr/local/emhttp/plugins/dynamix.docker.manager/scripts/docker run -d --name=&#x27;FileBrowser&#x27; --net=&#x27;bridge&#x27; -e TZ=&quot;Asia/Shanghai&quot; -e HOST_OS=&quot;Unraid&quot; -e HOST_HOSTNAME=&quot;Tower&quot; -e HOST_CONTAINERNAME=&quot;FileBrowser&quot; -l net.unraid.docker.managed=dockerman -l net.unraid.docker.webui=&#x27;http://[IP]:[PORT:8222]/files/&#x27; -l net.unraid.docker.icon=&#x27;https://github.com/maschhoff/docker/raw/master/filebrowser/35781395.png&#x27; -p &#x27;8222:80/tcp&#x27; -v &#x27;/&#x27;:&#x27;/srv&#x27;:&#x27;rw&#x27; -v &#x27;/mnt/user/appdata/filebrowser/&#x27;:&#x27;/db/&#x27;:&#x27;rw&#x27; &#x27;filebrowser/filebrowser&#x27; -d /db/database.db</span><br></pre></td></tr></table></figure>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>打开浏览器，访问 <a href="http://192.168.1.223:8222">http://192.168.1.223:8222</a>（注意，如果你在上述配置中修改过端口，请访问相应的端口，而 IP 地址则是你的 NAS 的 IP 地址），即可前往 File Browser 的操作页面。</p>
<p>默认的用户名为：<code>admin</code>，默认为密码为：<code>admin</code>。</p>
<h5 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h5><p>登录后的第一件事，请前往「设置」-「个人设置」页面修改你的密码。</p>
<h5 id="一些使其更好使用的配置"><a href="#一些使其更好使用的配置" class="headerlink" title="一些使其更好使用的配置"></a>一些使其更好使用的配置</h5><ol>
<li><p>在「设置」-「个人设置」中将语言修改为中文；</p>
</li>
<li><p>在「设置」-「个人设置」中<strong>取消勾选</strong>「不显示隐藏文件」，这样你就能看到隐藏的文件和文件夹了；</p>
</li>
<li><p>在「设置」-「个人设置」中<strong>取消勾选</strong>「使用单击来打开文件和目录」，这样可以更加符合 Windows 资源管理器的操作逻辑，同时也可以使用 <em>ctrl</em> 和 <em>shift</em> 来进行多选操作了；</p>
</li>
<li><p>由于在安装容器的时候设置了管理目录为宿主机的 <code>/</code> 路径，所以每次访问 WebUI 默认路径都是此路径，要想更换默认路径的话，软件并没有相应的设置，但是我们可以曲线救国，首先去到我们想默认显示的路径下。例如：<code>/mnt/user/appdata/</code>，然后我们只要将当前页面（<a href="http://192.168.1.223:8222/files/mnt/user/appdata/">http://192.168.1.223:8222/files/mnt/user/appdata/</a>）添加到浏览器的书签，这样以后就可以通过这个书签来访问此路径了。同样的，我们可以为不同的目录设置不同的书签，从而达到快捷访问的目的。</p>
</li>
</ol>
<h3 id="Linux-下的安装"><a href="#Linux-下的安装" class="headerlink" title="Linux 下的安装"></a>Linux 下的安装</h3><p>以下操作均建立在系统已经安装 Docker 的基础之上。</p>
<ol>
<li><p>拉取 Docker 镜像</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull filebrowser/filebrowser:latest</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动容器</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run \</span><br><span class="line">    -v &#x27;/&#x27;:&#x27;/srv&#x27; \</span><br><span class="line">    -v &#x27;/mnt/user/appdata/filebrowser/&#x27;:&#x27;/db/&#x27; \</span><br><span class="line">    -p &#x27;8222:80/tcp&#x27; \</span><br><span class="line">    filebrowser/filebrowser:latest \</span><br><span class="line">    -d /db/database.db</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li><p><a href="https://filebrowser.org/">https://filebrowser.org/</a></p>
</li>
<li><p><a href="https://github.com/filebrowser/filebrowser">https://github.com/filebrowser/filebrowser</a></p>
</li>
<li><p><a href="https://hub.docker.com/r/filebrowser/filebrowser">https://hub.docker.com/r/filebrowser/filebrowser</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>榨干这台 NAS</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>NAS</tag>
        <tag>unRAID</tag>
        <tag>File Browser</tag>
      </tags>
  </entry>
  <entry>
    <title>榨干这台 NAS 第 002 话-下载工具</title>
    <url>/2022/08/09/%E6%A6%A8%E5%B9%B2%E8%BF%99%E5%8F%B0NAS%E7%AC%AC002%E8%AF%9D-%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p>这是一系列关于 NAS 的文章，系列的名称你们也看到了：「<strong>榨干这台 NAS</strong>」。我将尽可能详细的介绍 NAS 相关的知识，帮助你最大限度的发挥你的手中 NAS 的威力！</p>
<span id="more"></span>
<p>刚打完篮球回到家，洗完了澡，喝了点小酒，看到有朋友在前两篇文章中催更，那就趁着酒意再写一篇。</p>
<p>之前我们介绍了目录结构和文件浏览工具，那么，文件从哪儿来呢？最常用的办法就是下载。仔细想想，我们在 PC 上是怎么下载文件的？可以通过浏览器直接下载，也可以通过各种下载软件进行下载。那么在 NAS 上应该使用什么工具呢？接下来我将介绍一下在 NAS 上常用的下载工具。</p>
<p>PS：喝醉了，如果写错了什么还请见谅。</p>
<h3 id="qBittorrent"><a href="#qBittorrent" class="headerlink" title="qBittorrent"></a>qBittorrent</h3><p>说起 BT 下载，国内的大家应该第一时间会想到迅雷吧，但是迅雷并不是一个好的 BT 下载软件。一般使用的就是 <strong>qBittorrent</strong> 这款软件。</p>
<h4 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h4><p>还是老样子，前往「应用『Apps』」页面搜索「qBittorrent」，选择下图所示的应用：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第002话-下载工具/qBittorrent.png" alt="qBittorrent.png"></p>
<p>注意不要选错。</p>
<p>点击「安装『Install』」。</p>
<h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第002话-下载工具/qBittorrentConfig.png" alt="qBittorrentConfig.png"></p>
<p>可以看到这个容器需要配置为三个端口，一个路径和一个环境变量。</p>
<ol>
<li><p>将宿主机的 <code>8080</code> 端口映射到容器的 <code>8080</code> 端口，此端口为该容器的 WebUI 端口，之后可以通过此端口来访问 WebUI 界面（注意，请确定宿主机的 <code>8222</code> 端口无其他程序占用，不然将无法启动容器，如果被占用，可以自行更换端口）；</p>
</li>
<li><p>将宿主机的 <code>6881</code> 端口映射到容器的 <code>6881</code> 端口，此端口为 <strong>TCP</strong> 连接的端口，<code>6881</code> 是用于传入连接的默认端口；</p>
</li>
<li><p>将宿主机的 <code>6881</code> 端口映射到容器的 <code>6881</code> 端口，此端口为 <strong>UDP</strong> 连接的端口，<code>6881</code> 是用于传入连接的默认端口；</p>
</li>
<li><p>将宿主机的 <code>/mnt/user/UNRAID/downloads/qBittorrentDownloads</code> 路径映射至容器的 <code>/downloads</code> 路径，此路径为 <strong>qBittorrent</strong> 存放下载文件的路径；</p>
</li>
<li><p>设置 <code>WEBUI_PORT</code> 环境变量，值为 <code>8080</code>，这个环境变量的作用为设置容器内 WebUI 的端口，不用去改变它就行，如果这里改变了，那么在第一个端口映射配置时，也要把容器内端口改为改变后的值，否则启动容器后将无法访问 WebUI 页面。</p>
</li>
</ol>
<p>上方都是除了下载路径外都是默认配置，我们需要在默认配置的基础上进行修改：</p>
<ol>
<li><p>添加两个新的端口映射，端口值可以大一些，我使用的是：<code>41638</code>，一个为 TCP 端口，一个为 UDP 端口，完成后可以移除上方两个默认的 <code>6881</code> 端口映射，这么修改的原因是有些 PT 站点屏蔽了默认的 <code>6881</code> 端口；</p>
</li>
<li><p>点开下方的「显示更多设置」，修改 Appdata 路径为 <code>/mnt/user/appdata/qBittorrent</code>，这是 <strong>qBittorrent</strong> 所以配置信息所存放的路径；</p>
</li>
<li><p>还是在「显示更多设置」中，修改 <code>PUID</code> 环境变量的值为 <code>0</code>，修改 <code>PGID</code> 环境变量的值为 <code>0</code>，这样就可以以 root 用户来启动这个容器了；</p>
</li>
<li><p>添加 <code>UMASK</code> 环境变量，值为 <code>000</code>。</p>
</li>
</ol>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第002话-下载工具/qBittorrentConfig2.png" alt="qBittorrentConfig2.png"></p>
<p>确认无误后，点击「应用」，即可启动容器。</p>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>打开浏览器，访问 <a href="http://192.168.1.223:8080">http://192.168.1.223:8080</a>（注意，如果你在上述配置中修改过端口，请访问相应的端口，而 IP 地址则是你的 NAS 的 IP 地址），即可前往 qBittorrent 的操作页面。</p>
<p>默认的用户名为：<code>admin</code>，默认为密码为：<code>adminadmin</code>。</p>
<h5 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h5><p>登录后的第一件事，请前往「工具」-「选项」-「Web UI」-「验证」修改你的密码。</p>
<h5 id="一些使其更好使用的配置"><a href="#一些使其更好使用的配置" class="headerlink" title="一些使其更好使用的配置"></a>一些使其更好使用的配置</h5><ol>
<li><p>「工具」-「选项」-「Web UI」-「语言」修改语言为简体中文；</p>
</li>
<li><p>「工具」-「选项」-「连接」-「监听端口」将其设置为之前启动容器时所配置传入连接端口，即刚刚设置的 <code>41638</code>，<strong>强烈建议选择随机端口</strong>，而不是和我的一样，这么做的原因是，首先一部分 PT 站会禁用默认的<code>6881</code> ~ <code>6999</code> 端口。所以尽量不要选择这些范围内的端口；其次某些运营商会对 BT 流量进行封禁，如果很多人使用相同的端口的话，则会增大被运营商发现 的概率；</p>
</li>
<li><p>「工具」-「选项」-「下载」勾选「为不完整的文件添加扩展名 .!qB」,这样做可以方便之后设置硬链接；</p>
</li>
<li><p>「工具」-「选项」-「高级」-「libtorrent 相关」将「校验时内存使用扩增量」修改大一些，我设置成了 <code>512</code>，这样可以提高校验速度，提升之后辅种效率；</p>
</li>
<li><p>「工具」-「选项」-「BitTorrent」勾选「自动添加以下 tracker 到新的 torrent」，并在下方输入框中填入<a href="&#x6d;&#97;&#105;&#108;&#116;&#111;&#58;&#104;&#116;&#x74;&#x70;&#115;&#58;&#x2f;&#x2f;&#x63;&#100;&#110;&#46;&#x6a;&#115;&#100;&#101;&#108;&#x69;&#x76;&#x72;&#46;&#110;&#101;&#116;&#47;&#x67;&#x68;&#47;&#110;&#103;&#x6f;&#x73;&#97;&#110;&#x67;&#x2f;&#x74;&#114;&#x61;&#99;&#107;&#x65;&#x72;&#115;&#x6c;&#x69;&#x73;&#x74;&#64;&#x6d;&#97;&#115;&#x74;&#101;&#114;&#47;&#x74;&#x72;&#97;&#99;&#x6b;&#101;&#x72;&#115;&#x5f;&#x61;&#x6c;&#108;&#46;&#x74;&#120;&#x74;">&#104;&#116;&#x74;&#x70;&#115;&#58;&#x2f;&#x2f;&#x63;&#100;&#110;&#46;&#x6a;&#115;&#100;&#101;&#108;&#x69;&#x76;&#x72;&#46;&#110;&#101;&#116;&#47;&#x67;&#x68;&#47;&#110;&#103;&#x6f;&#x73;&#97;&#110;&#x67;&#x2f;&#x74;&#114;&#x61;&#99;&#107;&#x65;&#x72;&#115;&#x6c;&#x69;&#x73;&#x74;&#64;&#x6d;&#97;&#115;&#x74;&#101;&#114;&#47;&#x74;&#x72;&#97;&#99;&#x6b;&#101;&#x72;&#115;&#x5f;&#x61;&#x6c;&#108;&#46;&#x74;&#120;&#x74;</a>中的内容，此处设置的作用的是为了获得更多的供种者，此操作能有效提高下载速度，建议每隔一段时间就更新一下 tracker 列表，更多 tracker 列表可以查看 <a href="https://github.com/ngosang/trackerslist">https://github.com/ngosang/trackerslist</a> 和 <a href="https://github.com/XIU2/TrackersListCollection">https://github.com/XIU2/TrackersListCollection</a>。</p>
</li>
<li><p>「工具」-「选项」-「BitTorrent」取消勾选「Torrent 排队」,这一步是为了多任务同时下载与上传，BT 的本质就是我为人人，人人为我，你的下载即是别人的上传，所以请最好不要限制你的上传，在不影响使用的情况下提供最多的上传；</p>
</li>
<li><p>更多详细配置可以查看 <a href="https://www.jianshu.com/p/ac70172767ed">https://www.jianshu.com/p/ac70172767ed</a>，此文讲得十分详细。</p>
</li>
</ol>
<h5 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h5><p>qBittorrent 与其他下载工具相比的优势之一在于他有强大的分类和标签机制。在左侧的边栏可以看到分类和便签管理模块。</p>
<p>我们可以通过鼠标右键任意分类来添加新的分类：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第002话-下载工具/qBittorrent新建分类.png" alt="qBittorrent新建分类.png"></p>
<p>然后填入分类名称和保存路径，可以为不同的分类设置不同的路径，例如 Movie 分类，保存路径 <code>/downloads/Media/Movie</code>、TV series 分类，保存路径 <code>/downloads/Media/TV series</code>，大家可以按照我在<a href="/2022/08/08/%E6%A6%A8%E5%B9%B2%E8%BF%99%E5%8F%B0NAS%E7%AC%AC000%E8%AF%9D-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/" title="榨干这台 NAS 第 000 话-目录结构">第000话</a>中的 Media 目录配置来建立相关的分类。这会为之后的硬链接提供很大的方便。</p>
<p>最后在新建任务时候，就能选择已经设定的分类了。当然对于已有的任务对一个或多个任务右键即可在「分类」栏中选择相应的分类。</p>
<h5 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h5><p>其实有分类就已经完全足够了，标签和分类区别是：</p>
<ol>
<li><p>标签无法设置保存路径；</p>
</li>
<li><p>一个任务可以拥有多个标签，但是只能拥有一个分类。</p>
</li>
</ol>
<p>大家可以根据实际需求来使用。例如有些任务的名称名字比较奇怪，不好第一时间辨别，就可以使用标签来标记一下。又或者可以按照电影或电视剧的国家，上映年份来设置标签。</p>
<h4 id="Linux-下的安装"><a href="#Linux-下的安装" class="headerlink" title="Linux 下的安装"></a>Linux 下的安装</h4><p>以下操作均建立在系统已经安装 Docker 的基础之上。</p>
<ol>
<li><p>拉取 Docker 镜像</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker pull linuxserver/qbittorrent:latest</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动容器</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name=&#x27;qBittorrent&#x27; \</span><br><span class="line">  --net=&#x27;bridge&#x27; \</span><br><span class="line">  -e TZ=&quot;Asia/Shanghai&quot; \</span><br><span class="line">  -e &#x27;WEBUI_PORT&#x27;=&#x27;8080&#x27; \</span><br><span class="line">  -e &#x27;PUID&#x27;=&#x27;0&#x27; \</span><br><span class="line">  -e &#x27;PGID&#x27;=&#x27;0&#x27; \</span><br><span class="line">  -e &#x27;UMASK&#x27;=&#x27;000&#x27; \</span><br><span class="line">  -p &#x27;8080:8080/tcp&#x27; \</span><br><span class="line">  -p &#x27;41638:41638/tcp&#x27; \</span><br><span class="line">  -p &#x27;41638:41638/udp&#x27; \</span><br><span class="line">  -v &#x27;/mnt/user/UNRAID/downloads/qBittorrentDownloads&#x27;:&#x27;/downloads&#x27;:&#x27;rw&#x27; \</span><br><span class="line">  -v &#x27;/mnt/user/appdata/qbittorrent&#x27;:&#x27;/config&#x27;:&#x27;rw&#x27; \</span><br><span class="line">  &#x27;linuxserver/qbittorrent:latest&#x27;</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h3 id="Aria2"><a href="#Aria2" class="headerlink" title="Aria2"></a>Aria2</h3><p>除了专门用于 BT 下载的软件之外，还要推荐的是 <strong>Aria2</strong> 这个工具。它被认为从该软件的下载效率和可用性来看是 Linux 下最好用的下载管理器之一。Aria2 不仅支持 BitTorrent，还能够从各种来源多路检索所请求的文件。包括 HTTP，HTTPS，FTP 和 BitTorrent 协议。</p>
<h4 id="搜索-1"><a href="#搜索-1" class="headerlink" title="搜索"></a>搜索</h4><p>前往「应用『Apps』」页面搜索「aria2」，选择下图所示的应用：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第002话-下载工具/Aria2.png" alt="Aria2.png"></p>
<p>点击「安装『Install』」。</p>
<h4 id="配置-1"><a href="#配置-1" class="headerlink" title="配置"></a>配置</h4><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第002话-下载工具/Aria2Config.png" alt="Aria2Config.png"></p>
<p><strong>Aria2</strong> 的配置看起来比较多，但是大多数使用默认配置即可，我讲一下重点的几个配置：</p>
<ol>
<li><p><code>RPC_SECRET</code> 环境变量，这个值就是之后对 <strong>Aria2</strong> 进行管理的密码，设置一个不那么简单的密码即可；</p>
</li>
<li><p>将宿主机的 <code>/mnt/user/UNRAID/downloads/aria2Download</code> 路径映射至容器的 <code>/downloads</code> 路径，此路径为 <strong>Aria2</strong> 存放下载文件的路径；</p>
</li>
<li><p>将宿主机的 <code>/mnt/user/appdata/aria2-pro</code> 路径映射至容器的 <code>/config</code> 路径，此路径为 <strong>Aria2</strong> 存放下载文件的路径；</p>
</li>
<li><p><code>RPC_PORT</code> 是对 <strong>Aria2</strong> 进行管理的端口，默认即可；</p>
</li>
<li><p>余下几个端口使用默认配置即可，这里的 <code>Listen Port</code> 的作用和上方 <strong>qBittorrent</strong> 的传入连接的端口是相同的。但是在有 <strong>qBittorrent</strong> 的情况一般就不用 <strong>Aria2</strong> 来进行 BT 下载了，所以这边也就没有必要改动了，使用默认就可以；</p>
</li>
</ol>
<p>确认无误后，点击「应用」，即可启动容器。</p>
<p>附上启动命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name=&#x27;Aria2-Pro&#x27; \</span><br><span class="line">  --net=&#x27;bridge&#x27; \</span><br><span class="line">  -e TZ=&quot;Asia/Shanghai&quot; \</span><br><span class="line">  -e &#x27;RPC_SECRET&#x27;=&#x27;这里填写你的密码&#x27; \</span><br><span class="line">  -e &#x27;IPV6_MODE&#x27;=&#x27;true&#x27; \</span><br><span class="line">  -e &#x27;RPC_PORT&#x27;=&#x27;6800&#x27; \</span><br><span class="line">  -e &#x27;LISTEN_PORT&#x27;=&#x27;6888&#x27; \</span><br><span class="line">  -p &#x27;6800:6800/tcp&#x27; \</span><br><span class="line">  -p &#x27;6888:6888/tcp&#x27; \</span><br><span class="line">  -p &#x27;6888:6888/udp&#x27; \</span><br><span class="line">  -v &#x27;/mnt/user/UNRAID/downloads/aria2Download&#x27;:&#x27;/downloads&#x27;:&#x27;rw&#x27; \</span><br><span class="line">  -v &#x27;/mnt/user/appdata/aria2-pro&#x27;:&#x27;/config&#x27;:&#x27;rw&#x27; \</span><br><span class="line">  &#x27;p3terx/aria2-pro&#x27;</span><br></pre></td></tr></table></figure>
<h4 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h4><p>与 <strong>qBittorrent</strong> 不同，<strong>Aria2</strong> 容器本身没有提供 WebUI。我们需要通过 <a href="http://ariang.mayswind.net/">AriaNg</a> 这一工具来对 <strong>Aria2</strong> 进行管理。</p>
<ol>
<li><p>打开浏览器，访问 <a href="http://ariang.mayswind.net/latest">http://ariang.mayswind.net/latest</a>；</p>
</li>
<li><p>点击左侧边栏的「AriaNg设置」；</p>
</li>
<li><p>选择第二个标签页「RPC（ariang.mayswind.net）」;</p>
</li>
<li><p>输入 <strong>Aria2 RPC 别名</strong>，用于区分多个 RPC，例如「家中 NAS」、「公司服务器」；</p>
</li>
<li><p>输入 <strong>Aria2 RPC 地址</strong>，将默认的 <ariang.mayswind.net>，修改为你的 NAS 的 IP 地址即可，端口号则为默认的 <code>6800</code>，如果你在配置容器时修改过 <code>RPC_PORT</code>，那么这里需要改为修改后的端口号；</p>
</li>
<li><p><strong>Aria2 RPC 协议</strong>选择 「Http」；</p>
</li>
<li><p><strong>Aria2 RPC Http 请求方法</strong>选择「POST」；</p>
</li>
<li><p><strong>Aria2 RPC 密钥</strong>则为容器配置时填写的 <code>RPC_SECRET</code> 的值；</p>
</li>
<li><p>确认无误后，重新刷新本页面即可。</p>
</li>
</ol>
<p>如果配置的没有问题，那么在左侧边栏的 <strong>Aria2 状态</strong>处则会显示绿色的已连接，则代表已经成功连接到你的 <strong>Aria2</strong> 服务。那么你就可以此页面添加下载任务并下载了。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第002话-下载工具/AriaNg.png" alt="AriaNg.png"></p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol>
<li><p><a href="https://github.com/qbittorrent/qBittorrent">https://github.com/qbittorrent/qBittorrent</a></p>
</li>
<li><p><a href="https://github.com/XIU2/TrackersListCollection">https://github.com/XIU2/TrackersListCollection</a></p>
</li>
<li><p><a href="https://github.com/ngosang/trackerslist">https://github.com/ngosang/trackerslist</a></p>
</li>
<li><p><a href="https://www.jianshu.com/p/ac70172767ed">https://www.jianshu.com/p/ac70172767ed</a></p>
</li>
<li><p><a href="https://zh.wikipedia.org/wiki/Aria2">https://zh.wikipedia.org/wiki/Aria2</a></p>
</li>
<li><p><a href="https://github.com/aria2/aria2">https://github.com/aria2/aria2</a></p>
</li>
</ol>
]]></content>
      <categories>
        <category>榨干这台 NAS</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>NAS</tag>
        <tag>unRAID</tag>
        <tag>qBittorrent</tag>
        <tag>Aria2</tag>
        <tag>PT</tag>
      </tags>
  </entry>
  <entry>
    <title>榨干这台 NAS 第 003 话-硬链接</title>
    <url>/2022/08/24/%E6%A6%A8%E5%B9%B2%E8%BF%99%E5%8F%B0NAS%E7%AC%AC003%E8%AF%9D-%E7%A1%AC%E9%93%BE%E6%8E%A5/</url>
    <content><![CDATA[<p>这是一系列关于 NAS 的文章，系列的名称你们也看到了：「<strong>榨干这台 NAS</strong>」。我将尽可能详细的介绍 NAS 相关的知识，帮助你最大限度的发挥你的手中 NAS 的威力！</p>
<span id="more"></span>
<p>上一话中已经介绍了下载工具，想必很多人在接触 NAS 的时候也或多或少会接触到 PT 吧，今天我就来介绍一个 PT 利器：硬链接。</p>
<h3 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h3><p>什么是 PT 呢，大家可以自己 Google，或者之后我再来讲。在 PT 下载中，不是说你下载完就好了，而是秉承着我为人人，人人为我的精神，在下载完成后最好一直保持做种，这样在别人下载这个资源的时候，也可以有较快的速度。</p>
<p>但是做种的时候，有一个问题，就是下载好的文件，不能改名也不能修改目录结构。这样一来，对后期的刮削操作来说是完全不能接受的。所以我们就要用到「硬链接」。</p>
<p>那么什么是硬链接呢？与硬链接相对应的，还有一种软链接，软链接其实就相当于 Windows 中的快捷方式，只是一个指向源文件的文件。在我们删除源文件后，快捷方式将无法使用。而硬链接就不一样了，你同样可以像创建软链接一样创建多个硬链接。但是当你删除源文件后，硬链接还是可以正常使用，和普通文件没有区别。只有当你删除所有的源文件和硬链接后，这个文件才算是真正的被删除。并且多个硬链接和源文件只会占用一个文件的空间。</p>
<p>举例来说：</p>
<ol>
<li><p>你下载了最新的电影 <code>不能说的秘密2.mp4</code>，它存放在：<code>Downloads/qBittorrentDownloads/media/movie/不能说的秘密/不能说的秘密2.mp4</code>；</p>
</li>
<li><p>你就可以创建一个硬链接，在另一个文件夹下面：<code>media/movie/不能说的秘密2（2034）/不能说的秘密2（2034）.mp4</code>；</p>
</li>
<li><p>这时候，你可以将 <code>Downloads/qBittorrentDownloads/media/movie/不能说的秘密/不能说的秘密2.mp4</code> 删除，<code>media/movie/不能说的秘密2（2034）/不能说的秘密2（2034）.mp4</code> 仍然可以使用，反过来也是一样。但是不能将两个文件同时删除；</p>
</li>
<li><p>如果你创建的硬链接源文件发生了变化，你的所有硬链接同时也会将变化同步，例外的：文件名的变化将不会同步。</p>
</li>
</ol>
<h3 id="如何创建硬链接"><a href="#如何创建硬链接" class="headerlink" title="如何创建硬链接"></a>如何创建硬链接</h3><p>简单的方法是使用 <code>ln</code> 命令，以上面的例子来说，只需要执行以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ln /Downloads/qBittorrentDownloads/media/movie/不能说的秘密/不能说的秘密2.mp4 /media/movie/不能说的秘密2（2034）/不能说的秘密2（2034）.mp4</span><br></pre></td></tr></table></figure>
<p>就可以创建一个硬链接。</p>
<p>但是这样对于一个文件来说还好说，对于众多的电影来说，却是一项大工程。所以我们需要用到 <a href="https://github.com/likun7981/hlink">hLink</a> 这一硬链接工具。</p>
<h4 id="安装-hLink"><a href="#安装-hLink" class="headerlink" title="安装 hLink"></a>安装 hLink</h4><p>在 UNRAID 的应用市场中并没有 hLink，所以无法通过应用市场直接安装。</p>
<p>我们可以直接通过命令来进行安装：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d --name hlink \</span><br><span class="line">-e HLINK_HOME=$YOUR_HLINK_HOME_DIR \</span><br><span class="line">-p 9090:9090 \</span><br><span class="line">-v $YOUR_NAS_VOLUME_PATH:$DOCKER_VOLUME_PATH \</span><br><span class="line">likun7981/hlink:latest</span><br></pre></td></tr></table></figure>
<p>在上方的命令中你需要将你要硬链接的源文件的目录和硬链接文件的目录的共同的父目录映射进容器。</p>
<p>在我的机器上，具体命令是这样的：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d --name hlink \</span><br><span class="line">-e HLINK_HOME=/share/appdata/hlink \</span><br><span class="line">-p 9090:9090 \</span><br><span class="line">-v /mnt/user:/share \</span><br><span class="line">likun7981/hlink:latest</span><br></pre></td></tr></table></figure>
<p>运行命令后稍等片刻就安装完成了。</p>
<h4 id="使用-hLink"><a href="#使用-hLink" class="headerlink" title="使用 hLink"></a>使用 hLink</h4><p>前往浏览器访问「你设备的IP地址:9090」，例如：<a href="http://192.168.1.223:9090">http://192.168.1.223:9090</a>，即可进入操作页面。</p>
<ol>
<li><p>首先点击「创建配置」</p>
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第003话-硬链接/创建配置.png" alt="创建配置.png"></p>
</li>
<li><p>为配置输入一个名字，用于标记这个配置的作用，例如：Movie；</p>
</li>
<li><p>接下来就要对配置文件进行修改，可以先看一下默认的配置文件：</p>
 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 重要说明路径地址都请填写 绝对路径！！！！</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 源路径与目标路径的映射关系</span></span><br><span class="line"><span class="comment">  * 例子:</span></span><br><span class="line"><span class="comment">  *  pathsMapping: &#123;</span></span><br><span class="line"><span class="comment">  *     &#x27;/path/to/exampleSource&#x27;: &#x27;/path/to/exampleDest&#x27;,</span></span><br><span class="line"><span class="comment">  *     &#x27;/path/to/exampleSource2&#x27;: &#x27;/path/to/exampleDest2&#x27;</span></span><br><span class="line"><span class="comment">  *  &#125;</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="attr">pathsMapping</span>: &#123;&#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 需要包含的后缀，如果与exclude同时配置，则取两者的交集</span></span><br><span class="line"><span class="comment">  * include 留空表示包含所有文件</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * 后缀不够用? 高阶用法: https://hlink.likun.me/other/v2.html#%E6%96%B0%E5%A2%9E%E5%8A%9F%E8%83%BD</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="attr">include</span>: [</span><br><span class="line">    <span class="string">&#x27;mp4&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;flv&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;f4v&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;webm&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;m4v&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mov&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;cpk&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;dirac&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3gp&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;3g2&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rm&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;rmvb&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;wmv&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;avi&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;asf&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mpg&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mpeg&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mpe&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;vob&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mkv&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;ram&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;qt&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;fli&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;flc&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;mod&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;iso&#x27;</span>,</span><br><span class="line">  ],</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 需要排除的后缀，如果与include同时配置，则取两者的交集</span></span><br><span class="line"><span class="comment">  *</span></span><br><span class="line"><span class="comment">  * 后缀不够用? 高阶用法: https://hlink.likun.me/other/v2.html#%E6%96%B0%E5%A2%9E%E5%8A%9F%E8%83%BD</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="attr">exclude</span>: [],</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@scope</span> 该配置项 hlink 专用</span></span><br><span class="line"><span class="comment">  * 是否保持原有目录结构，为false时则只保存一级目录结构</span></span><br><span class="line"><span class="comment">  * 可选值: true/false</span></span><br><span class="line"><span class="comment">  * 例子：</span></span><br><span class="line"><span class="comment">  *  - 源地址目录为：/a</span></span><br><span class="line"><span class="comment">  *  - 目标地址目录为: /d</span></span><br><span class="line"><span class="comment">  *  - 链接的文件地址为 /a/b/c/z/y/mv.mkv；</span></span><br><span class="line"><span class="comment">  *  如果设置为true  生成的硬链地址为: /d/b/c/z/y/mv.mkv</span></span><br><span class="line"><span class="comment">  *  如果设置为false 生成的硬链地址为：/d/y/mv.mkv</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="attr">keepDirStruct</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@scope</span> 该配置项 hlink 专用</span></span><br><span class="line"><span class="comment">  * 是否打开缓存，为true表示打开</span></span><br><span class="line"><span class="comment">  * 可选值: true/false</span></span><br><span class="line"><span class="comment">  * 打开后，每次硬链后会把对应文件存入缓存，就算下次删除硬链，也不会进行硬链</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="attr">openCache</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@scope</span> 该配置项 hlink 专用</span></span><br><span class="line"><span class="comment">  * 是否为独立文件创建同名文件夹，为true表示创建</span></span><br><span class="line"><span class="comment">  * 可选值: true/false</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="attr">mkdirIfSingle</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@scope</span> 该配置项为 hlink prune 命令专用</span></span><br><span class="line"><span class="comment">  * 是否删除文件及所在目录，为false只会删除文件</span></span><br><span class="line"><span class="comment">  * 可选值: true/false</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  <span class="attr">deleteDir</span>: <span class="literal">false</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p> 可以到看到大部分配置都已经有的了，我们只要修改部分就行。例如最重要的 <code>pathsMapping</code> 属性。这是时候需要注意，此时填写的路径不是当前宿主机中的路径，而是容器中的路径，你需要根据启动容器时候的目录映射参数来修改相对应的路径。</p>
<p> 例如我的启动参数中映射是：<code>-v /mnt/user:/share</code>，即在宿主机的路径 <code>/mnt/user</code> 等于容器中的 <code>/share</code>，所以我原本电影（源文件）的下载路径：<code>/mnt/user/UNRAID/downloads/qBittorrentDownloads/Media/Movie</code>，这时候就要改为：<code>/share/UNRAID/downloads/qBittorrentDownloads/Media/Movie</code>，原本硬链接的存放位置：<code>/mnt/user/UNRAID/media/Movie</code>，就要更改为：<code>/share/UNRAID/media/Movie</code>。</p>
<p> 所以最后我的 <code>pathsMapping</code> 属性就是：</p>
 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">pathsMapping</span>: &#123;</span><br><span class="line">  <span class="string">&#x27;/share/UNRAID/downloads/qBittorrentDownloads/Media/Movie&#x27;</span>: <span class="string">&#x27;/share/UNRAID/media/Movie&#x27;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
</li>
<li><p>然后点击「确定」；</p>
</li>
<li><p>之后点击「创建任务」</p>
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第003话-硬链接/创建任务.png" alt="创建任务.png"></p>
</li>
<li><p>输入任务名称，任务类型选择 <strong>硬链（hlink）</strong>，然后选择你刚刚创建的配置文件，最后点击「确定」；</p>
</li>
<li><p>最后在任务列表点击你刚刚点击的任务，就可以开始进行创建硬链接了。</p>
</li>
</ol>
<h3 id="需要注意的点"><a href="#需要注意的点" class="headerlink" title="需要注意的点"></a>需要注意的点</h3><ol>
<li><p>我在 <a href="/2022/08/09/%E6%A6%A8%E5%B9%B2%E8%BF%99%E5%8F%B0NAS%E7%AC%AC002%E8%AF%9D-%E4%B8%8B%E8%BD%BD%E5%B7%A5%E5%85%B7/" title="榨干这台 NAS 第 002 话-下载工具">榨干这台 NAS 第 002 话-下载工具</a> 文章中有提到 qBittorrent 一些使其更好使用的配置（「工具」-「选项」-「下载」勾选「为不完整的文件添加扩展名 .!qB」），为的就是在创建硬链接的时候不将未下载完成的电影包括进去；</p>
</li>
<li><p>可以为任务设置定时任务，这样就不需要在每次有新电影时再进入 Web 页面进行手动操作了，一般来说一个小时执行一次任务即可；</p>
</li>
<li><p>我在 <a href="/2022/08/08/%E6%A6%A8%E5%B9%B2%E8%BF%99%E5%8F%B0NAS%E7%AC%AC000%E8%AF%9D-%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/" title="榨干这台 NAS 第 000 话-目录结构">榨干这台 NAS 第 000 话-目录结构</a> 中提到电影，电视剧不同类型的影音文件最好可以分文件夹保存，这时候在创建硬链接的时候就需要根据不同的分类创建不同的配置才可以，例如我就根据不同的媒体类型创建了不同的配置：</p>
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第003话-硬链接/hLink.png" alt="hLink.png"></p>
</li>
<li><p>当文件夹中有文件你不想进行硬链接时，可以在 <code>exclude</code> 中添加规则。</p>
</li>
</ol>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://github.com/likun7981/hlink">https://github.com/likun7981/hlink</a></p>
]]></content>
      <categories>
        <category>榨干这台 NAS</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>NAS</tag>
        <tag>unRAID</tag>
        <tag>PT</tag>
        <tag>hLink</tag>
      </tags>
  </entry>
  <entry>
    <title>榨干这台 NAS 第 004 话-刮削</title>
    <url>/2022/11/21/%E6%A6%A8%E5%B9%B2%E8%BF%99%E5%8F%B0NAS%E7%AC%AC004%E8%AF%9D-%E5%88%AE%E5%89%8A/</url>
    <content><![CDATA[<p>这是一系列关于 NAS 的文章，系列的名称你们也看到了：「<strong>榨干这台 NAS</strong>」。我将尽可能详细的介绍 NAS 相关的知识，帮助你最大限度的发挥你的手中 NAS 的威力！</p>
<span id="more"></span>
<p>上一话中，讲解了硬链接功能，适合 PT 玩家们使用。那么之后就需要对下载下来的资源进行整理了。</p>
<p>我们在一般的视频网站中看电影或电视剧的时候，都会看到影视剧有海报，简介，分类，演职人员表等信息，那么这些信息应该怎么来呢？</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第004话-刮削/电视墙海报墙效果.png" alt="电视墙海报墙效果.png"></p>
<p>在我们自建的影音库中，所有的这些都需要通过「刮削」来获取。</p>
<p>对于一般的影视剧，通过一款叫做 TinyMediaManager 的软件即可一条龙完成刮削。</p>
<h4 id="安装-TinyMediaManager"><a href="#安装-TinyMediaManager" class="headerlink" title="安装 TinyMediaManager"></a>安装 TinyMediaManager</h4><p><a href="https://www.tinymediamanager.org/">TinyMediaManager</a> 支持 Windows、macOS、Linux 以及 Docker，对于我们基于 NAS 的使用场景来说，使用 Docker 是更为方便的。当然你也可以使用其他的版本，各个版本之间除了安装方式不同，使用方法都是一样的。</p>
<p>需要注意的是，TinyMediaManager 在4.0后改为了付费软件，如果没有付费将只支持刮削 50 部影视剧，所以接下来我们将使用 3.0 版本的 TinyMediaManager，放心，两个版本的刮削效果完全相同。</p>
<p>这里推荐使用 <a href="https://hub.docker.com/r/dzhuang/tinymediamanager">dzhuang/tinymediamanager:latest</a> 镜像，能更好的支持中文。</p>
<p>在 unRAID 下，安装下图进行配置即可：</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第004话-刮削/TinyMediaManager3-config.png" alt="TinyMediaManager3-config.png"></p>
<p>也可以使用命令启动：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d --name=&#x27;TinyMediaManager3&#x27; \</span><br><span class="line">-e &#x27;TZ&#x27;=&quot;Asia/Shanghai&quot; \</span><br><span class="line">-e &#x27;DISPLAY_WIDTH&#x27;=&#x27;1920&#x27; \</span><br><span class="line">-e &#x27;DISPLAY_HEIGHT &#x27;=&#x27;1080&#x27; \</span><br><span class="line">-p &#x27;5800:5800/tcp&#x27; \</span><br><span class="line">-v &#x27;/mnt/user/UNRAID/media&#x27;:&#x27;/media&#x27;:&#x27;rw&#x27; \</span><br><span class="line">-v &#x27;/mnt/user/appdata/TinyMediaManager3&#x27;:&#x27;/config&#x27;:&#x27;rw&#x27; \</span><br><span class="line">&#x27;dzhuang/tinymediamanager:latest&#x27;</span><br></pre></td></tr></table></figure>
<p>运行命令后稍等片刻就安装完成了。</p>
<p>注意这里的 <code>/media</code> 映射的 <code>/mnt/user/UNRAID/media</code> 目录即为<a href="/2022/08/24/%E6%A6%A8%E5%B9%B2%E8%BF%99%E5%8F%B0NAS%E7%AC%AC003%E8%AF%9D-%E7%A1%AC%E9%93%BE%E6%8E%A5/" title="榨干这台 NAS 第 003 话-硬链接">榨干这台 NAS 第 003 话-硬链接</a>中硬链接所存放的地方。选择你的电影硬链接和电视剧硬链接的最深的共同父目录即可。</p>
<h4 id="使用-TinyMediaManager"><a href="#使用-TinyMediaManager" class="headerlink" title="使用 TinyMediaManager"></a>使用 TinyMediaManager</h4><p>首先要注意的是：不要更新，不要更新，不要更新！</p>
<ol>
<li><p>选择左侧的「电影」——「媒体库目录」，在媒体库目录中添加你的电影硬链接文件夹（注意，这里的文件夹可以一次添加多个）；</p>
</li>
<li><p>选择左侧的「电影」——「刮削器」，在元数据刮削在选择 <strong>themoviedb.com</strong> ；</p>
</li>
<li><p>选择左侧的「电影」——「刮削器」——「刮削器选项」，在高级选项中设置首选语音为 <strong>大陆简体</strong>；</p>
</li>
<li><p>关闭设置框，点击左上角的「更新源」，这样你的电影都会在列表中显示，目前是未刮削状态；</p>
</li>
<li><p>右键任意一部电影，点击「搜索并刮削所选电影」，一般来说如果命名规范，那么软件能直接识别出当前电影，在搜索结果中选中后，点击右下角的「确定」即可；</p>
</li>
<li><p>如果没有搜索结果，那么在上方的输入框中输入电影的 <strong>IMDbID</strong> 并点击搜索即可，<strong>IMDbID</strong> 可以在电影的豆瓣详情页中找到；</p>
</li>
<li><p>如果有多条搜索结果，那么大概率是存在同名电影，可以通过电影的上映年份，或者依次点击左侧搜索结果，并在右侧查看电影海报来判断；</p>
</li>
<li><p>点击「确定」后，观察右下角进度条，当进度条跑完后，选中刚刚刮削的电影，右键并选择「重命名或整理所选电影」，这样 TinyMediaManager 会为电影文件重新命名。</p>
</li>
</ol>
<p>自此，一部电影就刮削完成了。</p>
<p>电视剧的刮削和电影大同小异，需要注意的是，电视剧由于有多季多集的情况存在，所以需要对每一集规范命名，实际测试下来以 S01E01 的命名方法就可以准确得被 TinyMediaManager 识别，S01E01 代表的就是第一季第一集。</p>
<p>所以在电视剧的刮削之前，还要为电视剧文件批量重新命名，在 Linux 下可以使用 rename 命令来完成，而在 Windows 下有许多批量重命名的软件可供使用。</p>
<h4 id="需要注意的点"><a href="#需要注意的点" class="headerlink" title="需要注意的点"></a>需要注意的点</h4><p>在刮削电视剧的时候，可能有时候季数和集数不太清楚，大家可以去 <a href="https://www.themoviedb.org/">https://www.themoviedb.org/</a> 搜索需要刮削的电视剧。在详情页中点击「查看全部季」，这样就可以看到这部剧的季结构了。根据这些来对文件重新命名即可。</p>
]]></content>
      <categories>
        <category>榨干这台 NAS</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>NAS</tag>
        <tag>unRAID</tag>
        <tag>TinyMediaManager</tag>
      </tags>
  </entry>
  <entry>
    <title>榨干这台 NAS 第 005 话-外网访问之 Tailscale</title>
    <url>/2024/06/12/%E6%A6%A8%E5%B9%B2%E8%BF%99%E5%8F%B0NAS%E7%AC%AC005%E8%AF%9D-%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE%E4%B9%8BTailscale/</url>
    <content><![CDATA[<p>这是一系列关于 NAS 的文章，系列的名称你们也看到了：「<strong>榨干这台 NAS</strong>」。我将尽可能详细的介绍 NAS 相关的知识，帮助你最大限度的发挥你的手中 NAS 的威力！</p>
<span id="more"></span>
<p>许久不见，托更了快两年，今天继续来填坑。</p>
<p>今天我们暂时先不捣鼓 PT、影视、下载那些问题了，我们来解决一个更加基础的问题：<strong>外网访问</strong>。</p>
<p>家用 NAS 作为家庭存储的设备，绝大多数场景是在家中使用的，但是有时候我们需要在外面访问家中的 NAS，比如在外面需要访问家中的文件、下载文件到家中的 NAS 等等。那么，如何实现外网访问呢？</p>
<p>目前主流的方式有以下几种：</p>
<ol>
<li><p><strong>端口映射</strong>：在路由器上设置端口映射，将 NAS 的端口映射到外网，这样就可以通过外网 IP 访问到 NAS。但是这种方式有一个很大的问题，就是<strong>安全性</strong>，端口映射后，NAS 的端口就暴露在了外网，这样就会有安全隐患。笔者曾经在暴露了 NAS 的多个端口后，被黑客入侵，所幸没有造成太大的损失。这方式在用户没有太多安全意识以及没有太多技术能力的情况下，不建议使用。当然它也有一些优点，比如速度快、稳定等；</p>
</li>
<li><p><strong>DDNS</strong>：动态域名解析服务，这其实是第一种方式的一个补充，通过 DDNS 服务，我们可以通过一个域名访问到家中的 NAS，而不需要记住家中的 IP 地址。因为现如今家庭宽带即使分配了公网 IP 地址，也是动态的，所以我们需要 DDNS 服务来实现动态 IP 的映射。这种方式的优点是不需要记住 IP 地址，但是安全性和第一种方式一样；</p>
</li>
<li><p><strong>frp</strong>：frp 是一个高性能的反向代理应用，支持 TCP、UDP、HTTP、HTTPS 等协议。frp 的原理是通过一个中转服务器，将外网的请求转发到家中的 NAS，这样就不需要在路由器上设置端口映射，也不需要 DDNS 服务。frp 的优点是不需要用户拥有公网 IP，它的缺点是其速度受限于用于部署 frp 中转服务器的带宽，而且 frp 服务需要一台服务器来搭建，这样就会增加一定的成本；</p>
</li>
<li><p><strong>VPN</strong>：VPN 是一种通过加密通道将外网请求转发到家中的 NAS 的方式，VPN 的优点是安全性高，速度快，稳定性好，但是 VPN 的缺点是需要在外网设备上安装 VPN 客户端，这样才能访问家中的 NAS，而且 VPN 服务需要一台服务器来搭建，这样就会增加一定的成本。VPN 的另一个缺点是，VPN 服务一般都是收费的，如果你自己搭建 VPN 服务，那么你需要一台服务器，这样就会增加一定的成本；</p>
</li>
<li><p><strong>Tailscale</strong>：Tailscale 是一个基于 WireGuard 的 VPN 服务，它的优点是简单易用，安全性高，速度快，稳定性好，由于使用 Tailscale 后，优先是进行直连，影响你传输速度的只有你的家庭宽带的带宽，而不是中转服务器的带宽。而且 Tailscale 服务是免费的，不需要自己搭建服务器，也不需要在外网设备上安装 VPN 客户端，只需要在家中的 NAS 上安装 Tailscale 客户端，然后在外网设备上安装 Tailscale 客户端，就可以访问家中的 NAS 了。Tailscale 的缺点是需要在访问端和被访问端都安装 Tailscale 客户端，但是这样也增加了安全性。</p>
</li>
</ol>
<p>今天我们就来讲讲第 5 种方式：<strong>Tailscale</strong>。</p>
<p>其实还有一种方式，就是<strong>NAS 厂商提供的远程访问服务</strong>，比如 Synology 的 QuickConnect、QNAP 的 myQNAPcloud 等等，这种方式的优点是简单易用，但是本质上也是一种中转服务，只是它是由 NAS 厂商提供的，而不是用户自己搭建的。并且只支持品牌的 NAS，不支持自建的 NAS。</p>
<p>还有人会提到说 <strong>ZeroTier</strong>，ZeroTier 是一个类似 Tailscale 的 VPN 服务，但是 ZeroTier 我在使用的时候经常会出现连接不上的情况，并没有 Tailscale 那么稳定，所以我没有选择 ZeroTier。当然也可能是笔者的网络环境问题，你可以尝试一下。</p>
<h4 id="Tailscale-的注册"><a href="#Tailscale-的注册" class="headerlink" title="Tailscale 的注册"></a>Tailscale 的注册</h4><p>首先，我们需要注册一个 Tailscale 账号，打开 <a href="https://tailscale.com/">Tailscale 官网</a>，点击「Get Started」注册一个账号。</p>
<p>在 <a href="https://login.tailscale.com/start">https://login.tailscale.com/start</a> 中，选择你拥有的第三方账号进行登录，比如 Google、GitHub、Apple 等等。</p>
<h4 id="Tailscale-的安装"><a href="#Tailscale-的安装" class="headerlink" title="Tailscale 的安装"></a>Tailscale 的安装</h4><p>安装分为两部分，一部分在外网设备上安装 Tailscale 客户端，一部分在家中的 NAS 上安装 Tailscale 客户端。</p>
<p>首先我们先在外网设备上安装 Tailscale 客户端，打开 <a href="https://tailscale.com/download">https://tailscale.com/download</a>，点击「Download」下载对应的客户端，然后安装。安装方式就不详细介绍了，很简单。</p>
<p>安装完成后，打开 Tailscale 客户端，登录你刚刚注册的 Tailscale 账号即可。你可以将其设置为开机启动。</p>
<p>然后我们在家中的 NAS 上安装 Tailscale 客户端，这里以 unRAID 为例，打开 unRAID 的「Apps」，搜索「Tailscale」，点击「Install」安装 Tailscale 客户端。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第005话-外网访问之Tailscale/unRAID-App-Tailscale.png" alt="unRAID-App-Tailscale.png"></p>
<p>docker 配置使用默认配置即可，然后点击「Apply」。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第005话-外网访问之Tailscale/Tailscale-docker-config.png" alt="Tailscale-docker-config.png"></p>
<p>安装完成后，我们需要打开 unRAID 的「Docker」，找到刚刚安装的 Tailscale 客户端，点击「Logs」，找到「logon URL」，然后在电脑上打开浏览器，输入这个 URL，然后登录你的 Tailscale 账号，点击「Auth」授权。</p>
<p>如此一来，你的家中的 NAS 就和你的外网设备连接在了一起，你可以在外网设备上访问家中的 NAS 了。</p>
<p>你可以将其当作是 TailScale 为你的外网设备和家中的 NAS 搭建局域网，这样你的外网设备就可以访问家中的 NAS 了。相反的，NAS 也可以访问外网设备。</p>
<h4 id="TailScale-的使用"><a href="#TailScale-的使用" class="headerlink" title="TailScale 的使用"></a>TailScale 的使用</h4><p>Tailscale 的使用非常简单，你可以在 <a href="https://login.tailscale.com/admin/machines">Tailscale 控制台</a> 中看到你的设备和它的 IP 地址，你可以通过这个 IP 地址访问到你的设备。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/_posts/榨干这台NAS第005话-外网访问之Tailscale/Tailscale-console.png" alt="Tailscale-console.png"></p>
<p>例如，你可以在外网设备上通过 <code>http://TailScale-IP:Port</code> 访问到家中的 NAS 上的服务，比如你可以通过 <code>http://TailScale-IP</code> 直接访问到 unRAID 的 WebUI。其他服务也是一样，并且无需设置端口映射。</p>
<h4 id="高阶使用-subnets"><a href="#高阶使用-subnets" class="headerlink" title="高阶使用 subnets"></a>高阶使用 subnets</h4><p>Tailscale 还有一个很强大的功能，就是 subnets，你可以在 Tailscale 控制台中设置 subnets，这样你就让你的外网设备访问到家中的局域网中的其他设备了。</p>
<p>比如你家中有一个打印机，你可以设置 subnets，让外网设备访问到这个打印机，这样你就可以在外网设备上通过这台打印机打印文件了。</p>
<p>具体设置方法可以参考 <a href="https://tailscale.com/kb/1019/subnets">Tailscale 官方文档</a>。</p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>通过上述的设置，你应该已经可以从外网访问到家中的 NAS 了，而且速度快、安全性高、稳定性好。如果你使用 TailScale 的时候发现速度并不能达到预期，或者连接速度慢，那么再进阶一步，可以考虑自建 Headscale 服务，这样你就可以自己控制中转服务器的带宽了。对于笔者来说，Tailscale 已经能够满足我的需求了，所以我没有自建 Headscale 服务。</p>
<p>希望这篇文章对你有所帮助，如果有任何问题，欢迎在评论区留言，我会尽力解答。</p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><ul>
<li><p><a href="https://tailscale.com/">Tailscale 官网</a></p>
</li>
<li><p><a href="https://tailscale.com/kb/">Tailscale 官方文档</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>榨干这台 NAS</category>
      </categories>
      <tags>
        <tag>Docker</tag>
        <tag>NAS</tag>
        <tag>unRAID</tag>
      </tags>
  </entry>
  <entry>
    <title>程序员常用单词</title>
    <url>/2020/12/28/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%B8%B8%E7%94%A8%E5%8D%95%E8%AF%8D/</url>
    <content><![CDATA[<p>因为我的英语基础比较差，所以开一篇文章记录一些程序员常见，常用的一些单词、缩写。</p>
<h3 id="A"><a href="#A" class="headerlink" title="A"></a>A</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">administrator</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">管理员</td>
</tr>
<tr>
<td style="text-align:left">AJAX</td>
<td style="text-align:left">Asynchronous JavaScript and XML</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">异步的 JavaScript 与 XML 技术</td>
</tr>
<tr>
<td style="text-align:left">alert</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">提醒；警示</td>
</tr>
<tr>
<td style="text-align:left">algorithm</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">算法</td>
</tr>
<tr>
<td style="text-align:left">analyze</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">分析</td>
</tr>
<tr>
<td style="text-align:left">API</td>
<td style="text-align:left">Application Programming Interface</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">应用程序接口</td>
</tr>
<tr>
<td style="text-align:left">argument</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">参数，自变量</td>
</tr>
<tr>
<td style="text-align:left">array</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">数组</td>
</tr>
<tr>
<td style="text-align:left">attribute</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">属性</td>
</tr>
<tr>
<td style="text-align:left">authentication</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">认证方式</td>
</tr>
<tr>
<td style="text-align:left">authorization</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">授权</td>
</tr>
</tbody>
</table>
</div>
<h3 id="B"><a href="#B" class="headerlink" title="B"></a>B</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">BDFL</td>
<td style="text-align:left">Benevolent Dictator For Life</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">终身仁慈独裁者</td>
</tr>
<tr>
<td style="text-align:left">back-end</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">后端</td>
</tr>
<tr>
<td style="text-align:left">batch</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">批量</td>
</tr>
<tr>
<td style="text-align:left">binary</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">二进制</td>
</tr>
<tr>
<td style="text-align:left">bug</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">程序错误</td>
</tr>
</tbody>
</table>
</div>
<h3 id="C"><a href="#C" class="headerlink" title="C"></a>C</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">callee</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">被调用者</td>
</tr>
<tr>
<td style="text-align:left">charset</td>
<td style="text-align:left">character set</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">字符集</td>
</tr>
<tr>
<td style="text-align:left">chain</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">链子；锁链</td>
</tr>
<tr>
<td style="text-align:left">CLI</td>
<td style="text-align:left">Command-Line Interface</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">命令行界面</td>
</tr>
<tr>
<td style="text-align:left">commit</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">承诺</td>
</tr>
<tr>
<td style="text-align:left">concat</td>
<td style="text-align:left">concatenation</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">级联</td>
</tr>
<tr>
<td style="text-align:left">constructor</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">构造函数</td>
</tr>
<tr>
<td style="text-align:left">content</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">内容</td>
</tr>
<tr>
<td style="text-align:left">convergence</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">收敛</td>
</tr>
<tr>
<td style="text-align:left">cursor</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">光标</td>
</tr>
</tbody>
</table>
</div>
<h3 id="D"><a href="#D" class="headerlink" title="D"></a>D</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">decimal</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">十进制</td>
</tr>
<tr>
<td style="text-align:left">dequeue</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">出队</td>
</tr>
<tr>
<td style="text-align:left">description</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">描述</td>
</tr>
<tr>
<td style="text-align:left">discrete</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Adjective</td>
<td style="text-align:left">离散的</td>
</tr>
<tr>
<td style="text-align:left">DOM</td>
<td style="text-align:left">Document Object Model</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">文档对象模型</td>
</tr>
</tbody>
</table>
</div>
<h3 id="E"><a href="#E" class="headerlink" title="E"></a>E</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">experimental</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Adjective</td>
<td style="text-align:left">实验性的</td>
</tr>
<tr>
<td style="text-align:left">emit</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">发射；发出</td>
</tr>
<tr>
<td style="text-align:left">eliminate</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">消除；去除</td>
</tr>
<tr>
<td style="text-align:left">effect</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">影响</td>
</tr>
</tbody>
</table>
</div>
<h3 id="F"><a href="#F" class="headerlink" title="F"></a>F</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">filter</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">过滤器；筛选器</td>
</tr>
<tr>
<td style="text-align:left">front-end</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">前端</td>
</tr>
</tbody>
</table>
</div>
<h3 id="G"><a href="#G" class="headerlink" title="G"></a>G</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">GNU</td>
<td style="text-align:left">GNU’s Not Unix!</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">一个自由的操作系统</td>
</tr>
<tr>
<td style="text-align:left">guard</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">守卫</td>
</tr>
<tr>
<td style="text-align:left">GUI</td>
<td style="text-align:left">Graphical User Interface</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">图形用户界面</td>
</tr>
<tr>
<td style="text-align:left">gutter</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">槽；排水沟</td>
</tr>
</tbody>
</table>
</div>
<h3 id="H"><a href="#H" class="headerlink" title="H"></a>H</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">handler</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">处理程序</td>
</tr>
<tr>
<td style="text-align:left">hexadecimal</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">十六进制</td>
</tr>
<tr>
<td style="text-align:left">HTCPCP</td>
<td style="text-align:left">Hyper Text Coffee Pot Control Protocol</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">超文本咖啡壶控制协议</td>
</tr>
<tr>
<td style="text-align:left">HTML</td>
<td style="text-align:left">Hyper Text Markup Language</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">超文本标记语言</td>
</tr>
<tr>
<td style="text-align:left">hypothesis</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">假设</td>
</tr>
</tbody>
</table>
</div>
<h3 id="I"><a href="#I" class="headerlink" title="I"></a>I</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">i18n</td>
<td style="text-align:left">internationalization</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">国际化</td>
</tr>
<tr>
<td style="text-align:left">IIFE</td>
<td style="text-align:left">Immediately Invoked Function Expression</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">立即调用函数表达式</td>
</tr>
<tr>
<td style="text-align:left">infinity</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">无限</td>
</tr>
<tr>
<td style="text-align:left">install</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">安装</td>
</tr>
<tr>
<td style="text-align:left">integer</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">整数</td>
</tr>
<tr>
<td style="text-align:left">intensive</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">密集的</td>
</tr>
<tr>
<td style="text-align:left">intercept</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">截距</td>
</tr>
<tr>
<td style="text-align:left">interface</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">接口</td>
</tr>
<tr>
<td style="text-align:left">internal</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Adjective</td>
<td style="text-align:left">内部，内置</td>
</tr>
<tr>
<td style="text-align:left">invoke</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">调用</td>
</tr>
</tbody>
</table>
</div>
<h3 id="J"><a href="#J" class="headerlink" title="J"></a>J</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">JSON</td>
<td style="text-align:left">JavaScript Object Notation</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">JavaScript对象表示法</td>
</tr>
</tbody>
</table>
</div>
<h3 id="L"><a href="#L" class="headerlink" title="L"></a>L</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">literal</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">字面量</td>
</tr>
</tbody>
</table>
</div>
<h3 id="K"><a href="#K" class="headerlink" title="K"></a>K</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">k8s</td>
<td style="text-align:left">kubernetes</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">用于自动部署、扩展和管理「容器化应用程序」的开源系统。</td>
</tr>
</tbody>
</table>
</div>
<h3 id="M"><a href="#M" class="headerlink" title="M"></a>M</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">matrix</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">矩阵</td>
</tr>
<tr>
<td style="text-align:left">MVVM</td>
<td style="text-align:left">Model–view–viewmodel</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">模型，视图，视图模型，一种软件架构模式</td>
</tr>
</tbody>
</table>
</div>
<h3 id="N"><a href="#N" class="headerlink" title="N"></a>N</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">NaN</td>
<td style="text-align:left">Not a Numner</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">不是一个数字</td>
</tr>
<tr>
<td style="text-align:left">negative</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Adjective</td>
<td style="text-align:left">负</td>
</tr>
</tbody>
</table>
</div>
<h3 id="O"><a href="#O" class="headerlink" title="O"></a>O</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">octal</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">八进制</td>
</tr>
<tr>
<td style="text-align:left">outline</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">大纲</td>
</tr>
</tbody>
</table>
</div>
<h3 id="P"><a href="#P" class="headerlink" title="P"></a>P</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">P2P</td>
<td style="text-align:left">peer-to-peer</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">点对点网络</td>
</tr>
<tr>
<td style="text-align:left">padding</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">内边距，填充</td>
</tr>
<tr>
<td style="text-align:left">pointer</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">指针</td>
</tr>
<tr>
<td style="text-align:left">prerequisite</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">先决条件</td>
</tr>
<tr>
<td style="text-align:left">prevent</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">避免；防止</td>
</tr>
<tr>
<td style="text-align:left">primary</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Adjective</td>
<td style="text-align:left">主要的</td>
</tr>
<tr>
<td style="text-align:left">prototype</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">原型</td>
</tr>
<tr>
<td style="text-align:left">public</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">公开；公共</td>
</tr>
</tbody>
</table>
</div>
<h3 id="Q"><a href="#Q" class="headerlink" title="Q"></a>Q</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">queue</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">队列</td>
</tr>
</tbody>
</table>
</div>
<h3 id="R"><a href="#R" class="headerlink" title="R"></a>R</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">reject</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">拒绝</td>
</tr>
<tr>
<td style="text-align:left">replicate</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">复现（BUG）</td>
</tr>
<tr>
<td style="text-align:left">repository</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">仓库；资源库；存储库</td>
</tr>
<tr>
<td style="text-align:left">request</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">请求</td>
</tr>
<tr>
<td style="text-align:left">required</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Adjective</td>
<td style="text-align:left">需要</td>
</tr>
<tr>
<td style="text-align:left">resolve</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">解决</td>
</tr>
<tr>
<td style="text-align:left">response</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">响应</td>
</tr>
</tbody>
</table>
</div>
<h3 id="S"><a href="#S" class="headerlink" title="S"></a>S</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">schema</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">架构（数据库）</td>
</tr>
<tr>
<td style="text-align:left">schemaless</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">无模式</td>
</tr>
<tr>
<td style="text-align:left">SEO</td>
<td style="text-align:left">Search Engine Optimization</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">搜索引擎优化</td>
</tr>
<tr>
<td style="text-align:left">SPA</td>
<td style="text-align:left">single-page application</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">单页应用</td>
</tr>
<tr>
<td style="text-align:left">stack</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">堆栈；栈区</td>
</tr>
<tr>
<td style="text-align:left">support</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">支持</td>
</tr>
<tr>
<td style="text-align:left">swagger</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Verb</td>
<td style="text-align:left">昂首阔步</td>
</tr>
<tr>
<td style="text-align:left">symbol</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">符号；象征</td>
</tr>
</tbody>
</table>
</div>
<h3 id="T"><a href="#T" class="headerlink" title="T"></a>T</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">target</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">目标；靶；指标</td>
</tr>
<tr>
<td style="text-align:left">timestamp</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">时间戳</td>
</tr>
<tr>
<td style="text-align:left">traffic</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">流量</td>
</tr>
<tr>
<td style="text-align:left">turing completeness</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">图灵完备;图灵完备性</td>
</tr>
</tbody>
</table>
</div>
<h3 id="V"><a href="#V" class="headerlink" title="V"></a>V</h3><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:left">Word</th>
<th style="text-align:left">Unabbreviated</th>
<th style="text-align:left">Part of speech</th>
<th style="text-align:left">Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">vanilla</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Adjective</td>
<td style="text-align:left">普遍的；寻常的</td>
</tr>
<tr>
<td style="text-align:left">variable</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">变量</td>
</tr>
<tr>
<td style="text-align:left">vector</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">向量</td>
</tr>
<tr>
<td style="text-align:left">verbose</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Adjective</td>
<td style="text-align:left">冗长的</td>
</tr>
<tr>
<td style="text-align:left">version</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Noun</td>
<td style="text-align:left">版本</td>
</tr>
<tr>
<td style="text-align:left">volatile</td>
<td style="text-align:left">-</td>
<td style="text-align:left">Adjective</td>
<td style="text-align:left">易变的</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title>煎蛋保险小课堂</title>
    <url>/2021/09/29/%E7%85%8E%E8%9B%8B%E4%BF%9D%E9%99%A9%E5%B0%8F%E8%AF%BE%E5%A0%82/</url>
    <content><![CDATA[<p>蛋友 阿Lam：</p>
<blockquote>
<p>因为看到部分蛋友有保险困扰。我又刚好是这行的，所以做了个小科普。</p>
</blockquote>
<p>转载自：<a href="http://jandan.net/p/109642">煎蛋保险小课堂</a></p>
<span id="more"></span>
<h2 id="有哪些保险？"><a href="#有哪些保险？" class="headerlink" title="有哪些保险？"></a>有哪些保险？</h2><p>保险的种类称作险种，按缴费方式分，可以分为<strong>社会保险</strong>（强制交）和<strong>商业保险</strong>（自愿购买）。</p>
<h3 id="社会保险（社保）"><a href="#社会保险（社保）" class="headerlink" title="社会保险（社保）"></a>社会保险（社保）</h3><ol>
<li><p>城镇职工五险一金中的五险：养老保险、医疗保险、工伤保险、失业保险、生育保险；</p>
</li>
<li><p>城市少儿医保；</p>
</li>
<li><p>城镇居民医疗保险/乡镇居民的新型农村合作医疗（新农合）。</p>
</li>
</ol>
<p>社保是国家福利，是最基础的保障，商保可以没有，但社保必须在手。</p>
<p>医保是社保中的一个类别，具体指五险中的医疗保险、城市少儿医保、城镇居民医疗保险、新农合。四者不能重复报销，所以在公司交了五险一金的，在老家就不用浪费钱交新农合了。</p>
<p>城市少儿医保是给小孩子办的，有本市户口的，出生就可以办；没本市户口的，要等上幼儿园/小学后才能统一办；没本市户口的家庭，可以先给孩子在老家交个新农合，平时在城市门诊治疗是没法报销了，但住院治疗要花大钱时可以申请异地报销。</p>
<p>有社保的人在买部分商保时，比没社保的要便宜</p>
<h3 id="商业保险"><a href="#商业保险" class="headerlink" title="商业保险"></a>商业保险</h3><p>商业保险按保险标的（对象）分为<strong>人身险</strong>和<strong>财产险</strong>。</p>
<p><strong>人身险</strong>就是保人的寿命和健康的，<strong>财产险</strong>就是保人的房车等财产的，其中的代表就是车险。</p>
<p>人身险里有四大类险种，分别是<strong>寿险</strong>、<strong>重疾险</strong>、<strong>医疗险</strong>、<strong>意外险</strong>。其中<strong>重疾险</strong>和<strong>医疗险</strong>都属于健康险。</p>
<ol>
<li><p>寿险（保死，狗带了就赔一大笔钱）；</p>
</li>
<li><p>健康险（保生，生病了就赔钱或报销医疗费）；</p>
<ol>
<li><p>重疾险；</p>
</li>
<li><p>医疗险：百万医疗险、防癌医疗险、小额医疗险。</p>
</li>
</ol>
</li>
<li><p>意外险（保非疾病导致的生和死，比如被车撞了，狗带了就赔钱，没带就报销医疗费。但如果是因癌症等疾病引起的，那带不带都不赔）。</p>
</li>
</ol>
<h3 id="课外小姿势"><a href="#课外小姿势" class="headerlink" title="课外小姿势"></a>课外小姿势</h3><h4 id="团险"><a href="#团险" class="headerlink" title="团险"></a>团险</h4><p>公司团险不是一个具体的险种，而是一种承保方式，我们平常办商保都是个人给个人买，团险则是一个团体给它的成员统一购买。<br>像有些公司 HR 招人时喊的「六险一金」，多的那个险就一般是商业团险，具体险种一般是意外险、医疗险，成本大概是 100 块/人年。</p>
<h4 id="「我买了保险」"><a href="#「我买了保险」" class="headerlink" title="「我买了保险」"></a>「我买了保险」</h4><p>重疾险的理赔动不动就是几十万，所以审核会很严格，会查你的诊断报告、病例书等，所以在看一些你不知道是什么病的时候，记得提醒医生：「我买了保险！」</p>
<p>然后有经验的医生都能 get 到，病例就尽量不会写影响理赔的内容了。</p>
<h4 id="自由职业怎么交社保"><a href="#自由职业怎么交社保" class="headerlink" title="自由职业怎么交社保"></a>自由职业怎么交社保</h4><ol>
<li><p>挂在朋友或专门的公司去正常交职工五险一金，但这个有法律风险，不提倡；</p>
</li>
<li><p>在当地社保局以灵活就业人员身份，去申请缴纳职工医保和养老保险；</p>
</li>
<li><p>在户口所在地的社保局交居民医疗保险和居民养老保险。</p>
</li>
</ol>
<h2 id="社会保险有什么用？"><a href="#社会保险有什么用？" class="headerlink" title="社会保险有什么用？"></a>社会保险有什么用？</h2><h3 id="养老保险"><a href="#养老保险" class="headerlink" title="养老保险"></a>养老保险</h3><p>退休后发养老金。</p>
<h3 id="工伤保险"><a href="#工伤保险" class="headerlink" title="工伤保险"></a>工伤保险</h3><p>因公受伤时，报销医疗费。</p>
<h3 id="失业保险"><a href="#失业保险" class="headerlink" title="失业保险"></a>失业保险</h3><p>职工被辞退后无业，或农村户口辞职后无业时，可以领取失业保险金。</p>
<h3 id="生育保险"><a href="#生育保险" class="headerlink" title="生育保险"></a>生育保险</h3><p>产妇在生育前后可以领取生育津贴、报销检查费、接生费、手术费等费用。</p>
<h3 id="职工医疗保险、少儿保险、新农合、城镇居民医疗保险"><a href="#职工医疗保险、少儿保险、新农合、城镇居民医疗保险" class="headerlink" title="职工医疗保险、少儿保险、新农合、城镇居民医疗保险"></a>职工医疗保险、少儿保险、新农合、城镇居民医疗保险</h3><p>看病时报销医疗费。</p>
<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>凡是报销类的社保，要求治疗项目和药物必须在国家医保目录内，才可以报销。简称社保范围内用药。范围外的，不予报销。</p>
<p>国家医保目录见链接：<a href="http://www.gov.cn/xinwen/2019-11/28/content_5456660.htm">国家医保局、人力资源社会保障部印发2019年国家医保谈判准入药品名单</a></p>
<p>有人就问了，那我记不住怎么办？</p>
<p>那就在问诊时对医生说一句：「医生你好，麻烦尽量开社保范围内用药哈~」。</p>
<p>要是医生说他也记不住，那你就得好好寻思一下你找的是什么医生了。</p>
<h2 id="商业保险有什么用？"><a href="#商业保险有什么用？" class="headerlink" title="商业保险有什么用？"></a>商业保险有什么用？</h2><h3 id="寿险"><a href="#寿险" class="headerlink" title="寿险"></a>寿险</h3><h4 id="寿险·分类"><a href="#寿险·分类" class="headerlink" title="寿险·分类"></a>寿险·分类</h4><p>寿险按保障期限，可以分为<strong>定期寿险</strong>和<strong>终身寿险</strong>。<strong>定寿</strong>便宜，预算有限就先买来用着；<strong>终身寿险</strong>贵，适合预算足，想留笔钱给子女，及「我不管！反正我花了钱就要有得赔！」的人。</p>
<h4 id="寿险·赔付条件"><a href="#寿险·赔付条件" class="headerlink" title="寿险·赔付条件"></a>寿险·赔付条件</h4><p>那很明显啦，寿险是自己挂了，给家属拿钱的。</p>
<h4 id="寿险·适合人群"><a href="#寿险·适合人群" class="headerlink" title="寿险·适合人群"></a>寿险·适合人群</h4><ol>
<li>家庭支柱</li>
<li>成年的独生子女</li>
</ol>
<p>比如一家老小靠着张三吃饭，但张三突然挂了，有寿险，那家里人就有几十万赔偿傍身；</p>
<p>没赔偿，那家里人就要守着没还完的房贷吃土了。还有像我这种单身狗，很怕哪天突然狗带了，我妈没人照顾，所以我就给自己买了份保到 60 岁的定寿。</p>
<h4 id="寿险·常见坑"><a href="#寿险·常见坑" class="headerlink" title="寿险·常见坑"></a>寿险·常见坑</h4><blockquote>
<p>小孩子没必要买寿险</p>
</blockquote>
<p>给孩子买保险，是为了在孩子生病时有钱治。但寿险是人没了才能拿的，孩子都没了要这钱做什么？所以每次看到有些代理人逮着朋友刚生孩子就让买寿险，我！就！很！烦！</p>
<h3 id="重疾险"><a href="#重疾险" class="headerlink" title="重疾险"></a>重疾险</h3><p>大部分人说的大病保险，就是<strong>重疾险</strong>和<strong>百万医疗险</strong>（下详）。</p>
<h4 id="重疾险·分类"><a href="#重疾险·分类" class="headerlink" title="重疾险·分类"></a>重疾险·分类</h4><p>按保障期限，可以分为<strong>定期重疾险</strong>和<strong>终身重疾险</strong>，<strong>定期重疾险</strong>比<strong>终身重疾险</strong>便宜很多，男性 20 岁买 50 万保额，保到 60 岁只要两千左右，保到 70 岁是三四千，保终身要七八千。但我国男性平均寿命 70 岁，女性 73……</p>
<p>按赔付条件，可以分为<strong>消费型重疾险</strong>和<strong>返还型重疾险</strong>。<strong>返还型重疾险</strong>是个坑，坑到有部分保司把「返还」给打成了敏感词，让我想批判都只能叫做「那个保险」，搞得像搞黄色一样。</p>
<h4 id="重疾险·赔付条件"><a href="#重疾险·赔付条件" class="headerlink" title="重疾险·赔付条件"></a>重疾险·赔付条件</h4><p>确诊即赔（部分疾病需达到合同约定条件），提前给付。</p>
<p>被保人一旦确诊保单约定的某种疾病，或达到合同约定条件，就提前赔付相应保额。这段话有点长，所以很多代理人图省事（或本身就是坏），省略了「达到合同约定条件」，简写为「确诊即赔」，但这是不规范的，所以就惹出了很多麻烦！</p>
<p>首先，普通人、临床医学、保险医学，这三者对「重疾」的定义是不一样的。</p>
<p>保险里的重疾是针对那些病情严重、治疗花费巨大、不易治愈的疾病。像心脏支架手术。人老了或太胖后，心脏血管就会硬化堵塞，管道变窄，这时候就可以在血管切个口子，放个支架进去，把血管撑大来，让它能正常工作。是物理+精神双重意义上的「开心」~</p>
<ol>
<li>普通人：都要动到心脏了，常威你还说不是重疾？</li>
<li>临床医学：全麻都不用，局部麻醉就可以做，不算小手术，要经验丰富的医生才能做，但也不算什么大 case；</li>
<li>保险医学：国产支架 8000 块，进口支架 1 万块，手术完就可以下床，1 天就能出院，1 周就能生活自理。要是这样都能拿 50 万重疾理赔，那患癌症的不要面子的啊？！</li>
</ol>
<p>再举个被最多人 diss「苛刻的急性心肌梗塞」，这是一个标准的急性心肌梗塞的重疾条款定义。</p>
<blockquote>
<p><strong>煎蛋保险小课堂</strong></p>
<p><em>客户</em>：医生都说我是急性心肌梗塞咯！合同里也说了保急性心肌梗塞的啊，为什么你不赔？！</p>
<p><em>理赔专员</em>：先生您好，合同里有说明急性心肌梗塞要满足至少 3 个条件才算重疾，才可以赔的。</p>
<p><em>客户</em>：医生说了不算，你们说才算？你们这是要重新定义急性心肌梗塞吗？</p>
<p><em>理赔专员</em>：先生，我们合同里有规……</p>
<p><em>客户</em>：保险都是大屁眼子！</p>
<p><em>理赔专员</em>：……（屁眼子好累）</p>
</blockquote>
<p>很多代理人在解释时，都只会复读「这是合同规定的」。但规定了什么，难道我们就不认字吗？<br>换我听了这种解释，我也会觉得保险是大屁眼子，但是为什么会要这样规定呢？</p>
<p>这里借鉴一个车险里的玻璃险来参考，车的挡风玻璃出现轻微裂痕但又不影响正常使用时，为了避免车主拿到理赔后不更换玻璃，甚至在裂痕扩大后二次申请赔偿，所以会和车主协商，对玻璃进行扩损，用小锤锤砸到玻璃确保用不了，才能理赔。</p>
<p>回到重疾定义也是一样的，就算是感冒也分轻感冒和重感冒、流感致死，重疾也是需要确定这个病到达了「重」的程度才能按重疾理赔。</p>
<p>我们再回顾一下知识要点：保险里的重疾是针对那些<strong>病情严重</strong>、<strong>治疗花费巨大</strong>、<strong>不易治愈</strong>的疾病，都没到那么严重呢，保险公司赔的话也很委屈，而且 25 种重大疾病的重疾定义是由国家银保监会统一规定的，保险公司动不了手脚。</p>
<h4 id="重疾险·适合人群"><a href="#重疾险·适合人群" class="headerlink" title="重疾险·适合人群"></a>重疾险·适合人群</h4><p>除了老人外的人。</p>
<p>重疾险的价格是越年轻买就越便宜：0 岁小宝宝买定期重疾的抄底价是 500 左右/年。60 岁大宝宝买，就要奔近 10000 元/年去了，交的钱和赔的钱都要持平了。</p>
<p>另外重疾险对被保人的健康状况有要求，像高血压、有肺结节的人群很难投保，或者需要加费，甚至直接被拒保。因此买到了重疾险的人，就相当于获得了保险公司的「检疫合格认证」：此人身体 OK，请大家放心食用。</p>
<p>但对于那种什么「能买保险代表你有福气」的论调……我通常会回一句「对呀~能吃屎还代表您牙口好呢」。</p>
<h3 id="医疗险"><a href="#医疗险" class="headerlink" title="医疗险"></a>医疗险</h3><h4 id="医疗险·分类"><a href="#医疗险·分类" class="headerlink" title="医疗险·分类"></a>医疗险·分类</h4><p>医疗险常见的有<strong>百万医疗险</strong>、<strong>防癌医疗险</strong>和<strong>小额医疗险</strong>。</p>
<ol>
<li><p>百万医疗险</p>
<p> 300+/年，是为治大病用的，不管是因为意外、癌症或其他疾病原因都可以报销（违法犯罪的除外！），通常有 1 万免赔额，所以基本也就住院才能用得到了，额度最高可以报销上百万。</p>
</li>
<li><p>防癌医疗险</p>
<p> 300～1000/年，是百万医疗险的精简版，只保因癌症导致的治疗，是专门给买不了百万医疗险提供的备胎。</p>
</li>
<li><p>小额医疗险</p>
<p> 500～600/年，是日常看小病用的，免赔额从零到几百不等，额度通常在两三万内，是百万医疗险的补充。</p>
</li>
</ol>
<h4 id="医疗险·赔付条件"><a href="#医疗险·赔付条件" class="headerlink" title="医疗险·赔付条件"></a>医疗险·赔付条件</h4><p>医疗险都是报销型，花多少，报多少。</p>
<p>这里要注意一点：医疗险通常会要求社保范围内用药。部分产品可以报销非社保用药、门诊治疗，但价格也会相对比较贵，可以按需选择。</p>
<p>很多人搞不懂<strong>医疗险</strong>和<strong>重疾险</strong>的区别，这里简单类比一下：</p>
<p><strong>百万医疗险</strong>：报销型，需要治疗完成后拿着票据去报销。像个会计小姐姐：「发生医疗支出了？OK，拿发票来，我报销。」</p>
<p><strong>重疾险</strong>：提前给付型，确诊即赔（部分需要达到理赔条件）。像个土豪朋友：「发生重大疾病了？OK，给个账号，我给你打钱」</p>
<p>百万医疗险通常搭配重疾险使用，如果实在要 2 选 1 的话，我会先选百万医疗险。</p>
<h4 id="医疗险·适合人群"><a href="#医疗险·适合人群" class="headerlink" title="医疗险·适合人群"></a>医疗险·适合人群</h4><ol>
<li><p>百万医疗险：适合10岁以上所有能买的人买</p>
<p> 百万医疗险是最体现保险本质的险种，但也是对被保人健康要求最严格的险种，老人、三高等人群通常是买不了的了。</p>
<p> 不管是男是女，是20岁还是40岁，一年200多，就能换到最高100万的医疗费用报销。<br> 但8岁以下的宝宝理赔率比较高，会受到针对，价格会跳到900多。这时候就不推荐给孩子配医疗险了，可以换成惠民保+意外险。</p>
</li>
<li><p>防癌医疗险：适合买不了百万医疗险的老人和三高患者买</p>
<p> 防癌险对健康要求会比百万医疗险宽松，所以老人和三高可以退而求其次，买一份防癌险，来保障最高发的癌症疾病。</p>
</li>
<li><p>小额医疗险：不推荐购买</p>
<p> 小额医疗险使用的频率高，理赔率就高，所以保费也跟着贵，贵还是小事，最怕的是医疗险理赔多了，会被保险公司认为这人健康有问题，影响到后面买保险和理赔，所以综合考虑，不推荐购买。</p>
</li>
</ol>
<h3 id="意外险"><a href="#意外险" class="headerlink" title="意外险"></a>意外险</h3><h4 id="意外险·分类"><a href="#意外险·分类" class="headerlink" title="意外险·分类"></a>意外险·分类</h4><p>按保障范围可以分为<strong>综合意外险</strong>和<strong>交通工具意外险</strong>、猝死险等<strong>专项意外险</strong>。</p>
<p>部分意外险只保身故和全残，不保意外伤害医疗。这种一般还是长期型意外险，又贵又坑。还有部分打着<strong>综合意外险</strong>名号的产品，却只保交通工具引起的意外，像落水、被狗咬这种就不赔，这点需要看清楚。</p>
<h4 id="意外险·理赔条件"><a href="#意外险·理赔条件" class="headerlink" title="意外险·理赔条件"></a>意外险·理赔条件</h4><p>意外险的理赔有一个基础定义：所受到的伤害必须是外来的、突发的、非本意的、非疾病的，才会赔。</p>
<p>比如吃鱼时被刺卡喉了，这叫外来的突发的，可以赔。但坐姿不端导致腰椎间盘突出，这种就不是外来的，还属于疾病，不赔。张三出门被车撞了，这叫非本意的，可以赔。但要是张三看到车来了赶紧撞上去，没撞伤的叫碰瓷，撞伤了的叫骗保，不但不赔还要接受来自警察叔叔的惩罚。</p>
<h4 id="意外险·适合人群"><a href="#意外险·适合人群" class="headerlink" title="意外险·适合人群"></a>意外险·适合人群</h4><ol>
<li><p>普通人</p>
<p> 普通人买意外险主要看意外伤害医疗额度，买的时候需要注意3大点：是否可以用于门诊医疗；是否可以报销社保范围外医疗；如果有住院津贴的话，那就更是加分项。</p>
</li>
<li><p>老人、孩子</p>
<p> 老人腿脚不便，容易摔碰，小孩子太好动，而且容易发生烫伤、鱼刺卡喉这种小意外，所以这两者都推荐购买。</p>
</li>
<li><p>空中飞人、出差达人</p>
<p> 说起来让人心塞，但这两类人要注意看身故/伤残额度……</p>
</li>
</ol>
<p>伤残这里有个坑，伤残等级最低是 10 级，最高是 1 级，有些意外险只赔全残（1、2级），不赔伤残。</p>
<p>交通工具赔付这里也有个要注意的点：有些意外险只赔公共交通工具，像高铁、公交、地铁、出租车。但是网约车这种私人运营的交通工具，到底属不属于「公共」，法律没定性，所以部分保司也没更新，容易引起纠纷，买的时候多问一嘴。</p>
]]></content>
      <categories>
        <category>转载</category>
      </categories>
      <tags>
        <tag>转载</tag>
        <tag>保险</tag>
      </tags>
  </entry>
  <entry>
    <title>《罗生门》</title>
    <url>/2020/05/19/%E7%BD%97%E7%94%9F%E9%97%A8/</url>
    <content><![CDATA[<p>《<a href="https://book.douban.com/subject/4908882/">罗生门</a>》（羅生門）</p>
<ul>
<li><p>肆意违反道德者乃经济意识匮乏之人；一味屈从道德者乃懦夫或懒汉。</p>
</li>
<li><p>侏儒的祈祷</p>
<p>我是穿五彩衣、献筋斗戏的侏儒，唯以享受太平为乐的侏儒，敬祈满足我的心愿：</p>
<p>不要使我穷得粒米皆无，不要让我富得熊掌食厌。</p>
<p>不要让采桑农妇都对我嗤之以鼻，不要使后宫佳丽亦对我秋波频传。</p>
<p>不要让我愚昧得麦菽不分，不要使我聪明得明察云天。</p>
<p>尤其不要使我成为英雄而勇敢善战。时下我便不时梦见或跨越惊涛骇浪或登临险峰之巅，即在梦中变不可能为可能——再没有比这种梦更令人惶恐不安。如与恶龙搏斗一样，我正在为同梦的对峙而苦恼不堪。请不要让我成为英雄，不要使我产生雄心义胆，永保这无能无力的我一生平安。</p>
<p>我是醉春日之酒诵金缕之歌的侏儒，唯求日日如此天天这般。</p>
</li>
<li><p>古往今来，众多父母不知重复了多少遍这样一句话：「我终归是不行了，但无论如何要使子女出人头地！」</p>
</li>
<li><p>老好人最像的是天上的神。第一适合对其讲述欢喜，第二适合与之倾诉不幸，第三是可有可无。</p>
</li>
<li><p>恋爱不过是披以诗的外衣的性欲。至少不披以诗的外衣的性欲不值得称之为恋爱。</p>
</li>
<li><p>我们最为自豪的仅限于我们所不具有的东西。实例：Τ精通德语，但他桌子上常放的全是英语书。</p>
</li>
<li><p>再没有比不受罚更痛苦的惩罚。如果神保佑决不受罚则另当别论。</p>
</li>
</ul>
]]></content>
      <categories>
        <category>书摘</category>
      </categories>
      <tags>
        <tag>阅读</tag>
      </tags>
  </entry>
  <entry>
    <title>青旅</title>
    <url>/2021/04/08/%E9%9D%92%E6%97%85/</url>
    <content><![CDATA[<p>在出发前就已经想好要做一个沙发客，或者住青年旅舍。说实话从来没有一个人去旅行过，过去都是和朋友家人一起住快捷酒店。这次一个人出来，住青旅的第一个目的是为了省钱，毕竟比起快捷酒店来说，青旅一天只需要几十元，便宜了一半不止。其二，由于是一个人的原因，我想着住青旅说不定就遇到志同道合的朋友，可以一起旅行。</p>
<p>写下这些文字的时候，是我到武汉的第一晚。之前我的行程是厦门-深圳-长沙，算上武汉一共是四家青旅，分别是厦门的<strong>国际青年旅舍</strong>、深圳的<strong>侨城旅友国际青年旅舍</strong>、长沙的<strong>天鹅之旅国际青年旅舍五一广场店</strong>以及武汉的<strong>享趣国际青年旅舍</strong>。其中有三家是<a href="https://www.yhachina.com/">YHA</a>的（除了长沙的不是）。</p>
<h3 id="厦门国际青年旅舍"><a href="#厦门国际青年旅舍" class="headerlink" title="厦门国际青年旅舍"></a>厦门国际青年旅舍</h3><p>厦门国际青年旅舍是我住的第一家青旅，位置还行。离各个景点都很近，交通也比较方便，就是离机场有点远。它在一个小山坡上，我第一次找的时候走了一段上坡的小路才到的，为什么说是第一次呢？因为后来我才发现那是后门。公共区域的环境还好，有间玻璃房，里边有很多油画（后来才发现这里还进行油画教学）。有一只狗狗，名叫 tuōtuō 或 tātā，有些记不清了，是条很听话的大狗狗。我把在八市买的手撕鸡都给他吃了，吃的很开心。</p>
<p>我住的是四人间，两张上下铺的床位，我睡的下铺，算上我是一共睡了三个人。原本我以为来住青旅的都是学生或者像我这样的旅游的人，但是其中一位是工作出差的，还有一位呢，我也不太清楚是做什么的。也没去问过，但是他每天的活动就是起床，然后去楼下玻璃房打 Switch。</p>
<p>我在青旅手洗衣服的时候，感觉又回到了高中时候。</p>
<p>总之，厦门国际青年旅舍作为我的第一家青旅，体验还是很不错的。除了它位于山上，蚊子很多。</p>
<p>然后价格也还可以接受，我是四月底的时候去的，一晚是 45 元，住了三晚之后由于清明假期的原因，一晚贵了 10 元。我一共住了四晚，总共是 190 元。</p>
<p>噢，对了，我住的那间的空调是坏的，不过那些天也不算热，晚上洗完澡基本上就不太会出汗了。</p>
<h3 id="深圳侨城旅友国际青年旅舍"><a href="#深圳侨城旅友国际青年旅舍" class="headerlink" title="深圳侨城旅友国际青年旅舍"></a>深圳侨城旅友国际青年旅舍</h3><p>我本以为深圳会有很多的 YHA 青旅，但是我在官网上搜索的时候只有这么一家。所以就直接选了这家。</p>
<p>这家的位置其实还算不错的，周边有趣的店很多。但是不好的是宾馆离地铁口比较远，不背着行李还好，如果背着全部行李，还是有点吃不消的。</p>
<p>说点和青旅无关的，深圳不是个旅游城市，果然还是适合打工人的城市。很多景点我根本不想去，吃的东西也没什么，甚至有一晚的晚餐我是在全家吃的泡面和维他柠檬茶（维他柠檬茶真好喝啊）。</p>
<p>这家青旅是偏贵的，一晚是 80 元，还是我有 YHA 会员的情况（会员便宜了 5 元）。我住的三人间，本来选的是下铺，但是前台说，他们的下铺可能有点矮，担心我睡下铺会太压抑。我看网上的图其实觉得还好，可能是和网上的图片的拍摄视角有关系吧。于是我就听取了前台的意见，换成了上铺。但是我实际到房间看的时候，其实看起来也还好，没有会感到压抑这么夸张。其实第一晚过后，我有想过去和前台说一下，帮我换成下铺，因为我感觉爬上爬下实在是太麻烦了。但是后来由于太懒，还是睡了三天上铺。房间偏小，只放了一张高低铺和一张双人床。卫生间是在房间外面的，一个楼层公用一间卫生间和一间淋浴间（两间是分开的）。</p>
<p>前台有只小猫猫，很好撸。</p>
<p>深圳那几天的天气我觉得是刚刚好的，只是两个室友比较怕热，每天 22 度空调，导致我晚上只能卷着被子睡。</p>
<h3 id="长沙天鹅之旅国际青年旅舍五一广场店"><a href="#长沙天鹅之旅国际青年旅舍五一广场店" class="headerlink" title="长沙天鹅之旅国际青年旅舍五一广场店"></a>长沙天鹅之旅国际青年旅舍五一广场店</h3><p>这是四家中唯一不是 YHA 的青旅。还是我在到了长沙站后手机上现找的。</p>
<p>天鹅之旅的位置可以说是非常不错，我基本上每天都是步行，根本没怎么坐交通工具。因此遗憾的错过了长沙的公交车水平。</p>
<p>价格是 62 元一晚，住的六人间。三张上下铺，我选的下铺。这家青旅的位于商业大楼的顶层（29 层），等电梯比较慢。然后住客都是偏年轻一点，学生偏多。大多数的人都是夜猫子，每次都是凌晨了就开始活跃起来了，例如狼人杀，都是在凌晨一两天开始在群里组队了。也会有很多人去楼下的酒吧夜店玩个通宵。我一直觉得自己还很年轻，但是在住在这里的这几天，我发现自己其实已经没有那么年轻了。</p>
<p>青旅的浴室是公共浴室，不过是带有隔间的，很小，也就一平米左右，密封性很好，好到墙上会有「注意洗浴时间，以免缺氧」的标语。大家都是夜猫子，晚点洗澡也不太会打搅到其他人。</p>
<p>有一点不好的是洗衣房特别小，并且洗衣晒衣都是在一间屋子。里面密密麻麻都挂满了衣服，甚至防盗窗上面也是。再结合长沙那几天的阴雨天气，我就没指望的我的衣服会干。但是我还是心存侥幸的把用完的速干浴巾晾在那里，不出所料的，没有干。离开长沙的前一个晚上，我用了四次每次四十分钟的烘干机，折腾到凌晨两点多，衣服还都是半干状态的。</p>
<h3 id="武汉享趣国际青年旅舍"><a href="#武汉享趣国际青年旅舍" class="headerlink" title="武汉享趣国际青年旅舍"></a>武汉享趣国际青年旅舍</h3><p>这家青旅是我重点要提的，这一家才有些我心目中青旅的感觉。说实话，地理位置不算特别好，最近的地铁站需要乘公交两站路。前后左右都是老旧的居民楼，半夜太吵闹会被邻居阿姨苛责。青旅的老板叫虎哥，应该是武汉本地人，年龄应该在五十左右吧，老板娘是广州人。我刚到的时候，两人一直在自己测血压，后来才知道是因为要打新冠疫苗，血压过了 150 毫米汞柱，医院那边不让打。</p>
<p>我到的当天，入住，四人间，两张木制上下铺，一天是 37 元。有独立卫生间（四人公用），座式马桶（甚至还有马桶圈清洁剂），电吹风，除了一间房四张床，其他都和普通的快捷酒店差不多。之后我去户部巷了，被各种网红小吃坑了 70 元。回来后，刚到大厅门口，虎哥就叫住了我：「就差你一个了。」说实话，这是我住过三家青旅，第一次有人找过说话（噢，厦门还有个外国小哥被蚊子咬得不行，找我借了驱蚊水）。</p>
<p>我说：「什么？」</p>
<p>虎哥说：「狼人杀呀！」</p>
<p>虽说我听过狼人杀，也知道大致的规则，但是我从来没有玩过一把狼人杀。心想，闲着也是闲着，那就来嘛！</p>
<p>就这样，之后的我，一发不可收拾，每天就想着到晚上的时候能玩狼人杀。大家都是天南地北来武汉的游客，互相都不认识，有玩过上万把的老手，也有我这样一把没玩过的新手。我就懵懵懂懂开始了我的第一把狼人杀。一开始我觉得狼人杀应该是很无聊的游戏，大家全凭一张嘴，会有什么意思呢？可是才一把，我就完全上头，虽然一开始并不知道应该怎么发言，都是直接滑水过的。但是玩了几把过后，懂得了大部分规则和术语之后，就彻底沦陷了。脑子了无时不刻不在推理，每个人发言的时候我都会盯着ta看，看看自己能不能看出对方有说谎的迹象，感觉自己像个侦探。</p>
<p>我一共在武汉住了五晚，有三晚都在狼人杀，其中有一天玩到了早上五点半，由于狼人杀需要大脑一直思考，越到后来，大家的脑子就越迷糊，最后实在是撑不住了，就都回屋睡觉了。</p>
<p>对了，青旅还有好多宠物，有一条叫做「皮蛋」的牧羊犬，有三只猫，一只英短蓝猫，大部分时间都在笼子里，还有两只，一只是橘猫，一只是黑猫，叫做「享享」和「趣趣」，都是可爱的毛茸朋友。</p>
<p>青旅的客人不止有我这样的游客，也有来附近考试的考生，也有来武汉出差的人（那天就有几位是阿里巴巴的员工来武汉培训），也有学生，还有来武汉寻找旧时味道的人——一位来自新疆的大叔。从零星的对话中，我了解到，大叔原本是武汉人，在文革期间被打成右派，之后又得了癌症，然后去了新疆。一别武汉就是几十年。现在，他已经将儿子，抚养成人，自己也击败了癌症，已经开始了自己的养老生活。他想到了自己的家乡武汉，所以就独自一人来武汉，准备寻找一些小时候的记忆。他吃到热干面时落泪，并说「再也不吃热干面了，吃一次哭一次」。他也说「吃了这么多大菜，都没有小时候的味道了」。</p>
<p>最后一晚，我买了些鸭脖卤味，另一位客人借用了虎哥的厨房，做了两道菜，我们几个坐下边喝边吃边聊。我也是第一次把自己的烦恼说给陌生人听，我甚至不知道大家叫什么名字。萍水相逢，可能在彼此的生命中，这是我们一起吃的第一顿饭也是最后一顿。但是大家都没想这么多，聊到最后，大家说的还都是身体健康，只要人还在，什么都有可能。</p>
<p>第二天一早，我就走了，起身回家，昨晚做菜的老哥也起了大早，他要带昨天认识的女生去游武汉。虎哥的血压也降了下来，吃了片降压药准备去打第二针疫苗了。</p>
]]></content>
      <categories>
        <category>记事</category>
      </categories>
      <tags>
        <tag>旅行</tag>
      </tags>
  </entry>
  <entry>
    <title>Story of My Life</title>
    <url>/about/index.html</url>
    <content><![CDATA[<p>关于我什么呢，我也不知道，放一些一直以来收集的骚话吧！</p>
<ul>
<li><p>我们迷恋的不是狂风暴雨本身，而是日常秩序裂开缝隙时，从裂缝里涌进来的、带着青草腥气的风。那一刻钟的喧哗，是青春在钢筋森林里找到的野生洞穴，所有的欢呼都沾着雨水，像某种远古而新鲜的仪式。</p>
</li>
<li><p>你以为社会是一台精密仪器，各行精英谨慎周密地维持其运转，但经历越多越发现这个社会就是个草台班子，一小撮精英带一大帮混子，尽最大努力维持着社会的底线而已。</p>
</li>
<li><p>这个世界是一个巨大的草台班子。</p>
</li>
<li><p><a href="https://en.wikipedia.org/wiki/Perfect_is_the_enemy_of_good">Don’t let perfect be the enemy of good.</a></p>
</li>
<li><p>我拥有的都是侥幸啊，我失去的都是人生。</p>
</li>
<li><p><a href="https://www.bilibili.com/video/BV17V411Y77d">平淡的创意，却企图以华丽的表演来掩饰，你应该感到惭愧！</a></p>
</li>
<li><p>有一套房子之后，才能去爱别人吗？</p>
</li>
<li><p><a href="https://www.youtube.com/watch?v=fVTX8f7XVUs&amp;t=397s">你的獨立審美，才是這氾濫流行中最珍貴的東西。</a></p>
</li>
<li><p><a href="https://www.bilibili.com/video/BV1KJ411R7YY?t=156">任意的践踏自由，这算什么正义？</a></p>
</li>
<li><p>未来不迎，过往不恋，当事不杂。</p>
</li>
<li><p>胜利的曙光和前进的希望来自于再努力使把劲的坚持之中。</p>
</li>
<li><p>斧头的刀刃换了 3 次，刀柄也换了 4 次，可是还是同一把旧斧头。</p>
</li>
<li><p>I have noticed even people who claim everything is predestined, and that we can do nothing to change it, look before they cross the road.</p>
<p>我注意过，即便是那些声称一切都是命中注定的而且我们无力改变的人，在过马路之前都会左右看。</p>
</li>
<li><p>人的一生中，最光辉的一天并非是功成名就那天，而是从悲叹与绝望中产生对人生的挑战，以勇敢迈向意志那天。</p>
</li>
<li><p>把时间用在你最终不会引以为豪的东西上面，是一件可怕的事情，浪费了你在地球上的短暂旅程。</p>
</li>
<li><p>结婚不等于幸福，单身也不意味着不幸福，我们出生就一个人，最后也不可能同时离去，爱情是精神的奢侈品，没有也行。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/爱情是精神的奢侈品.gif" alt="结婚不等于幸福，单身也不意味着不幸福，我们出生就一个人，最后也不可能同时离去，爱情是精神的奢侈品，没有也行。"></p>
</li>
<li><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/贫富差距.jpg" alt="贫富差距"></p>
</li>
<li><p><a href="https://weibo.com/1508386642/Iv5EPxTMu">民族主义只教会了你去恨你连见都没见过的人，你从未参与过的那些成就，一下子就让你骄傲自豪起来了。你到处吹牛逼，就像有些美国人：「去他妈的法国人！要不是我们两次世界大战都救了这帮 B，他们现在得说德语了」。你心想：「哦哦，那是我们的功劳吗？我们？你，和我？汤米，矮马，我俩救了法国人吗？」</a></p>
</li>
<li><p><a href="https://weibo.com/1508386642/Iv5EPxTMu">你站起来挥舞着你的旗帜，高谈阔论你的种族身份，民族身份，说你有多自豪。跟你有半毛钱关系吗？你这个废物！因为你就是历史上的那些伟大的英雄之一吗？所以你才站那挥舞着你的旗子吗？不不，你并不是，你自我归类于这个群体，因为你个人本身毫无贡献价值，可悲至极。</a></p>
</li>
<li><p><a href="https://weibo.com/1508386642/Iv5EPxTMu">我从来都无法理解种族或者民族主义自豪感，因为我觉得，自豪感应该是留给你自己获得的成就，而不是为你出生就意外获得的东西而骄傲。「我是爱尔兰人」并不是一门技能啊，而是一场基因意外。你不会说「我一米八我很自豪」，「我有易患肠癌的倾向我很骄傲」。所以为啥要为是爱尔兰人而骄傲，或者意大利人、美国人或者任何人。你要是很幸福的话倒没问题，用这个词吧，说幸福，「作为美国人我很幸福」。请幸福，不要骄傲，骄傲自豪已经太多了。「骄傲在跌倒之前」，勿忘箴言。</a></p>
</li>
<li><p>世界上只有一种真正的英雄主义，就是认清了生活的真相后还依然热爱它。</p>
</li>
<li><p>生活不可能像你想象得那么好，但也不会像你想象得那么糟。</p>
<p>我觉得人的脆弱和坚强都超乎自己的想象。</p>
<p>有时，我可能脆弱得一句话就泪流满面；有时，也发现自己咬着牙走了很长的路。</p>
</li>
<li><p>圣者弗拉基米尔渡过了河。他在逆流中走了整整的一夜。</p>
<p>天又黎明！黑沉沉的危崖后面，看不见的太阳在金色的天空升起。快要倒下来的弗拉基米尔终于到了彼岸。于是他对孩子说：</p>
<p>「咱们到了！唉，你多重啊！孩子，你究竟是谁呢？」</p>
<p>孩子回答说：</p>
<p>「我是即将来到的日子。」</p>
</li>
<li><p><a href="https://cnbible.com/john/1-4.htm">生命在他里面，这生命就是人的光。</a></p>
</li>
<li><p>对于普遍不守时的铁路系统，列车时刻表反而更重要一些，否则无法衡量晚点多少。</p>
</li>
<li><p>百善孝为先，论心不论迹，论迹寒门无孝子；</p>
<p>万恶淫为首，论迹不论心，论心世上无圣人。</p>
</li>
<li><p><a href="https://www.youtube.com/watch?v=iLh5u7b9cBA&amp;t=19845s">To be the best, you gotta to beat the best!</a></p>
</li>
<li><p>葬礼是为你们这些还活着的笨蛋们举办的。</p>
</li>
<li><p>年份，是人类创造的虚拟单位，并不会影响时间的连续性。但人类需要虚假又温柔的憧憬来自我安慰，鼓励自己在这个陌生的世界勇敢走下去。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/年份.jpg" alt="年份"></p>
</li>
<li><p><a href="https://www.v2ex.com/t/778064?p=1#r_10541233">别人主动暴露给你的，大都是包装出来的惬意生活。</a></p>
</li>
<li><p>一代人终将老去，但总有人正年轻。</p>
</li>
<li><p><a href="https://zh.wikipedia.org/wiki/%E6%B2%A1%E6%9C%89%E9%93%B6%E5%BC%B9">No Silver Bullet.</a></p>
</li>
<li><p>Roses are Red, Violets are Blue, Unexpected ‘{‘ on line 32.</p>
</li>
<li><p><a href="https://www.bilibili.com/video/BV11r4y1T7aX/?t=189">往前看</a></p>
<p><a href="https://www.bilibili.com/video/BV1Qy4y1W77p?t=591">往前看</a></p>
</li>
<li><p><a href="https://draemm.li/various/place-atlas/"><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/place-indexed.png" alt="place-indexed.png"></a></p>
</li>
<li><p><a href="https://zh.wikipedia.org/wiki/%E8%88%AC%E8%8B%A5%E6%B3%A2%E7%BE%85%E8%9C%9C%E5%A4%9A%E5%BF%83%E7%B6%93">心无罣碍，无罣碍故，无有恐怖，远离颠倒梦想，究竟涅槃。</a></p>
</li>
<li><p><a href="http://jandan.net/t/4872991">让我们觉得开心的，都是一些没用的事。</a></p>
</li>
<li><p><a href="https://www.bilibili.com/video/BV1fa4y1W7Vz?t=150">我必须考虑这会不会是我此生仅有的机会。</a></p>
</li>
<li><p><a href="https://zh.wikipedia.org/wiki/%E5%AF%A7%E9%9D%9C%E7%A6%B1%E6%96%87">赐予我宁静，让我接受无法改变的事情；赐予我勇气，让我去改变可改之事；赐予我睿智，让我能区分以上两者。</a></p>
</li>
<li><p>若连评论的自由权利都被剥夺，那迎合的赞颂也将消失。</p>
</li>
<li><p>心存美好，则无可恼之事；</p>
<p>心存善良，则无可恨之人。</p>
</li>
<li><p>混杂部分真相的谎言比直接说谎更有效。</p>
</li>
<li><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/舔.jpg" alt="舔.jpg"></p>
</li>
<li><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/青春这场雨.jpg" alt="青春这场雨.jpg"></p>
</li>
<li><p>The devil is in the detail.</p>
<p>魔鬼藏在细节中。</p>
</li>
<li><p>穷人在十字街头耍十把钢勾，勾不着亲人骨肉；</p>
<p>富人在深山老林抡刀枪棍棒，打不散无义的宾朋；</p>
<p>大将军手中枪，翻江倒海挡不住饥寒穷三个字。</p>
</li>
<li><p>来试试吧，孩子，你将踏上一段伟大的旅程。随着这道路去向终点，我将带着你的<strong>奖赏</strong>与你重逢。<strong>要小心</strong>！这一路你不知要面对多少危险……</p>
<p>幼时恼人的<strong>溺爱</strong>保护会娇惯与扼杀你……</p>
<p><strong>懒惰</strong>的沙发会吸干你的能量……</p>
<p>思想与身体都套上<strong>枷锁</strong>的重重密林仿佛漫无边境，让人沮丧退缩……而你依然不可放弃！</p>
<p>而<strong>肉欲</strong>的轻浮诱惑更似刮骨钢刀……</p>
<p>而在前方恐怖的浅滩，<strong>轻浮</strong>与玩世不恭的小鬼随时准备伏击你，千万小心……</p>
<p>稀散的水泥聚成了<strong>消费主义</strong>的流沙陷阱，莫要陷进去了。</p>
<p>你要从夜夜<strong>纵情</strong>笙歌的兽群中驶过……</p>
<p>留心互联网上那些<strong>废话家</strong>呕出胆汁汇成的沼泽……</p>
<p>泛滥的<strong>媒体</strong>把你的长短都牢牢盯紧，<strong>金钱</strong>诱惑的毒蛇则细语阿谀的佞辞。</p>
<p>空虚的<strong>工作</strong>与腐坏的<strong>感情</strong>，都要夺走你的年华，戕害你的使命。</p>
<p>最后，执着当年之勇的<strong>傲慢</strong>与固步自封，也会使你功亏一篑。</p>
<p>等到一切结束之时，孩子，我如约在你面前降临……</p>
<p>而赐予你的<strong>奖赏</strong>，也自然于此刻显现……</p>
<p>这就是旅程本身，你无悔的生命。</p>
<p> <img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/旅程.jpg" alt="旅程"></p>
</li>
<li><p><a href="https://www.v2ex.com/t/746505#r_10089818">愿你来世做一只蝉，生于夏初，死于夏末，一生只有烈日当空，不必见那三九寒冬，你会看到那赤脚玩闹的孩童，眼里满是懵懂，也会看到他独饮于漫天星空，藏着一点不舍在眼眸。</a></p>
</li>
<li><p>We were both sensations to each other-eyes, ears, nose, hands, mouth. So, as long as I can tickle a few of those, I’m only gone from myself. Not from you.</p>
<p>我们之于彼此，本就是一些知觉——眼、耳、口、鼻、手的感觉。因此，只要我还能微微触动你的感官，我就只是离开了我自己，而未曾离开你。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/win-win.png" alt="win-win"></p>
</li>
<li><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/dont_worry_this_is_not_goodbey_forever.jpg" alt="don&#39;t worry this is not goodbey forever."></p>
</li>
<li><p>Those who can, put something in; those who can’t, help yourself.</p>
<p>那些可以放入东西的人，放入些东西（捐助）；那些不能的人，救助自己。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/Food_basket_Covid.jpg" alt="Food_basket_Covid"></p>
</li>
<li><p><a href="https://www.bilibili.com/video/BV1co4y1o7Xg?t=36">人生唯一确定的就是不确定的人生。</a></p>
</li>
<li><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/positive.jpg" alt="positive"></p>
</li>
<li><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/Dementors_Black_Lake.jpg" alt="Dementors_Black_Lake"></p>
</li>
<li><p><a href="https://www.bilibili.com/video/BV1iX4y1u7Rx?t=107">如果一个玩笑呢，你不会说给你妈妈和女儿听，那其实你也不应该说给你的女同事和女同学听。</a></p>
</li>
<li><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/去码头整点薯条.jpg" alt="去码头整点薯条。"></p>
</li>
<li><p>世人慌慌张张，不过图的是碎银几两，偏偏这碎银几两，能解世间万千惆怅，这几两碎银，可让父母安康，可护幼子成长。但这碎银几两，也断了儿时念想，让少年染上沧桑，压弯了脊梁。</p>
</li>
<li><p>新鲜感是追寻出来的，而不是等待出来的。多和旧人做新事，少和新人做旧事，前者是上升的山路，后者是循环的泥沼。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/移情别恋.jpg" alt="新鲜感是追寻出来的，而不是等待出来的。多和旧人做新事，少和新人做旧事，前者是上升的山路，后者是循环的泥沼。"></p>
</li>
<li><p><a href="https://sre.google/sre-book/postmortem-culture/">The cost of failure is education.</a></p>
</li>
<li><p>他在生命的每个阶段，都说了他相信的东西。那你要他怎么样，他什么都没做错。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/他在生命的每个阶段，都说了他相信的东西。那你要他怎么样，他什么都没做错。.GIF" alt="他在生命的每个阶段，都说了他相信的东西。那你要他怎么样，他什么都没做错。"></p>
</li>
<li><p>把你们绝望的人，你们迷茫的人，把你们渴望看到胜利之光的畏惧徘徊的人都给我，把那些精神失落、灵魂在流浪的人都送来：在这金色的信念旁，我要为他们把灯举起。</p>
</li>
<li><p>The New Colossus</p>
<blockquote>
<p>Not like the brazen giant of Greek fame,<br>With conquering limbs astride from land to land;<br>Here at our sea-washed, sunset gates shall stand<br>A mighty woman with a torch, whose flame<br>Is the imprisoned lightning, and her name<br>Mother of Exiles. From her beacon-hand<br>Glows world-wide welcome; her mild eyes command<br>The air-bridged harbor that twin cities frame.</p>
<p>“Keep, ancient lands, your storied pomp!” cries she<br>With silent lips. “Give me your tired, your poor,<br>Your huddled masses yearning to breathe free,<br>The wretched refuse of your teeming shore.<br>Send these, the homeless, tempest-tost to me,<br>I lift my lamp beside the golden door!”</p>
</blockquote>
</li>
<li><p>有志者立长志，无志者常立志。</p>
</li>
<li><p><a href="https://cnbible.com/hebrews/11-1.htm">信就是所望之事的实底，是未见之事的确据。</a></p>
</li>
<li><p><a href="https://www.bilibili.com/video/BV1co4y1o7Xg?t=1650">你当自卑视己，切勿狂妄自大。</a></p>
</li>
<li><p>当你老了，回顾一生，就会发觉：什么时候出国读书、什么时候决定做第一份职业、何时选定了对象而恋爱、什么时候结婚，其实都是命运的巨变。只是当时站在三岔路口，眼见风云千樯，你作出抉择的那一日，在日记上，相当沉闷和平凡，当时还以为是生命中普通的一天。但一场巨变，已经发生了，地动山移，浑然不觉，当时是道是寻常。世上的生死荣衰，不就是在空寂之中缘起缘灭的么？</p>
</li>
<li><p>我吃了一吓，赶忙抬起头，却见一个凸颧骨，薄嘴唇，五十岁上下的女人站在我面前，两手搭在髀间，没有系裙，张着两脚，正像一个画图仪器里细脚伶仃的圆规。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/圆规.gif" alt="圆规"></p>
</li>
<li><p>什么才是一生中最正确的浪费?</p>
<p>大概就是顺其自然，回头看时都是回忆，不必悔恨多想，哪怕是不如意的事，也是自己人生的一部分，全部完整才是自己，世事一切无条件接受。</p>
</li>
<li><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/war&amp;butterfly.jpg" alt="war&amp;butterfly"></p>
</li>
<li><p>买书如山倒，看书如抽丝。</p>
</li>
<li><p>收藏从未停止，学习从未开始。</p>
</li>
<li><p>Life is lived on a stage, against a backdrop and props, and amidst a script and a cast not of our own choosing.</p>
<p>我们登上并非我们所选择的舞台，演绎并非我们选择的剧本。</p>
</li>
<li><p>谁他妈都别想这么轻易离开这个操蛋的世界。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/兔子动画.jpg" alt="兔子动画"></p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/兔子照片.jpg" alt="兔子照片"></p>
</li>
<li><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/后浪.jpg" alt="后浪"></p>
</li>
<li><p>流星从天上飞过，让我们许下美好的心愿，它不像星星那样闪烁，也不像钻石那样珍贵。但是它像火苗一样燃烧着我们那颗与世界和谐共处的心。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/王康.jpg" alt="王康"></p>
</li>
<li><blockquote>
<p>I held up a fistful of sand and showed it to him, asking for as many years as grains in that pile. Foolish me! I forgot to ask they be years of youth.</p>
</blockquote>
<p>我抓起一把沙尘，高高举起，天真地祷告拥有如沙粒般多的年岁，却忘记说，只要青春岁月。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/沙子.gif" alt="沙子"></p>
</li>
<li><p><a href="https://www.bilibili.com/video/BV1Ms411s7kB">Look within yourself, What do you see? Is your soul a fading light? Strengthened by fury? Hardened by heat? Search deeper now, What do you see? Whatever you find, you must keep. You cannot fear, what lies beneath. Look within yourself, What do you see?</a></p>
<p>凝视自己的内心，你看到了什么？你的灵魂或许是渐暗的光，怒极而盛，百炼成钢。于更深处，你看到了什么？无论寻获什么，你都必须把持。莫可畏惧，你的本心。凝视自己的内心，你看到了什么？</p>
</li>
<li><p>你说咱长这么大容易吗。</p>
<p>说别人我不敢说，反正我是真不容易。</p>
<p>可不是。打在胎里，就随时有可能流产，当妈的一口烟就可能畸形。长慢了心脏缺损，长快了就是六指。好容易扛过十个月生出来了，一不留神，还得让产钳把头夹扁。都躲过去了，小儿麻痹、百日咳、猩红热、大脑炎还在前面等着。哭起来呛奶，走起来摔跤，摸水水烫，碰火火燎，是个东西撞上，咱就是个半死。钙多了不长个，钙少了罗圈腿。总算长到会吃饭能出门了，天上下雹子，地下跑汽车，大街小巷是个暗处就多这个坏人。你说赶谁都是个九死一生。</p>
<p>这都是明枪，还有暗箭呢。势利眼、冷脸子、闲言碎语、指桑骂槐；好了遭人嫉妒，差了让人瞧不起；忠厚的人家说你傻，精明的人家说你奸；冷淡了大伙儿说你傲，热情了群众说你浪；走在前头挨闷棍，走在后头全没份；这也叫活着，纯粹是练他妈一辈子轻功 ！</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/编辑部的故事.gif" alt="编辑部的故事"></p>
</li>
<li><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/电学三兄弟.jpg" alt="电学三兄弟"></p>
</li>
<li><p>Let’s show them who we are.</p>
</li>
<li><p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/R&amp;M.jpg" alt="R&amp;M"></p>
</li>
<li><p>纸上得来终觉浅，绝知此事要躬行。</p>
</li>
<li><p><a href="https://en.wikipedia.org/wiki/Robert_Landsburg"><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/Robert-Landsburg-Mt.-St.-Helens.jpg" alt="s"></a></p>
</li>
<li><p><a href="https://cnbible.com/matthew/7-3.htm">为什么看见你弟兄眼中有刺，却不想自己眼中有梁木呢？</a></p>
</li>
<li><p>路上没有灯火的时候，就点亮自己的头颅。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/路上没有灯火的时候，就点亮自己的头颅.JPG" alt="路上没有灯火的时候，就点亮自己的头颅。"></p>
</li>
<li><p>有一只小鸭子在排队，想和前面的鸭鸭对齐，可是怎么样都对不齐，它就嘀咕着说：「对不齐鸭对不齐鸭。」</p>
</li>
<li><blockquote>
<p><a href="https://en.wikipedia.org/wiki/Embrace,_extend,_and_extinguish">Embrace, extend, and extinguish.</a></p>
</blockquote>
<p><a href="https://zh.wikipedia.org/wiki/%E6%8B%A5%E6%8A%B1%E3%80%81%E6%89%A9%E5%B1%95%E5%86%8D%E6%B6%88%E7%81%AD">拥抱，扩展再消灭。</a></p>
</li>
<li><p><a href="https://www.v2ex.com/t/653386?p=1#r_8697857">海記憶體知己，天涯若比鄰。</a></p>
</li>
<li><p>World is powered by solitude.</p>
</li>
<li><p>Do have faith in what you’re doing.</p>
</li>
<li><blockquote>
<p><a href="https://bedtimepoem.com/?p=12276">人の命は、2万分の1でも8万分の1でもない。そうじゃなくて、そこには「1人が死んだ事件が2万件あった」ってことなんだよ。</a></p>
</blockquote>
<p>人的性命（死亡）不该说是2万分之一，或8万分之一，它的意思是，有一个人死了这件事，发生了2万次。</p>
</li>
<li><p>你从小到大做了无数个大大小小的选择，都不能阻止你看到这句话。</p>
</li>
<li><blockquote>
<p><a href="https://www.bilibili.com/video/av95917816?t=506">So if people are sufficiently worried, then there\’s a lot less to worry about. But if no one is worried, that\’s when you should worry!</a></p>
</blockquote>
<p>所以说：如果人们都足够担心的话，那你就没什么可担心的；但如果没有人担心的话，那你就得好好担心一下了。</p>
</li>
<li><p><a href="https://www.bilibili.com/video/av80845403">人的每一分钟都在变化，所以也要接受别人有变化。如果那个人跟你一日为友，就终身为友，你应该心里很紧张才对。就是：「怎么啦，我们两个都从此不变化了嘛？」所以如果有了变化，然后人际关系也跟着有了变化，他是你某一阶段最好的朋友，然后他当完了他该当的朋友，他就去当别人的朋友了。就接受人生的变化，是最好的态度。</a></p>
</li>
<li><p><a href="https://www.bilibili.com/video/av15267247?p=82&amp;t=44">计算机的所有东西都是人做出来的，别人能想得出来的，我也一定能想得出来。在计算机里头，没有任何黑魔法。所有的东西，只不过是我现在不知道而已，总有一天，我会把所有的细节、所有的内部的东西全都搞明白的！</a></p>
</li>
<li><p><a href="https://cnbible.com/proverbs/16-18.htm">骄傲在败坏以先，狂心在跌倒之前。</a></p>
</li>
<li><p>所有的离别，都是我在练习失去你。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/所有的离别，都是我在练习失去你。.jpg" alt="所有的离别，都是我在练习失去你。"></p>
</li>
<li><p><a href="https://baike.baidu.com/item/%E5%8D%9C%E7%AE%97%E5%AD%90%C2%B7%E5%92%8F%E6%A2%85/124232">已是悬崖百丈冰，犹有花枝俏。</a></p>
</li>
<li><p>Teaching sand to think was a mistake.</p>
<p><a href="https://www.bilibili.com/video/av87216714?t=949"><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/Teaching-sand-to-think-was-a-mistake.png" alt="Teaching sand to think was a mistake."></a></p>
</li>
<li><p><a href="https://weibo.com/1663937380/Is0UJchJW">一个健康的社会不应该只有一种声音。</a></p>
</li>
<li><p>警察只是按要求训诫，主播只是按稿子播报，后台只是按上面意思删帖撤热搜。大家都认为自己是好人，一切是生活所迫。只有当每一个人都敢说“我拒绝撒谎”，“我拒绝执行”的时候，我们才不会在某一天求助无门，走投无路，像狗一样地死去。但你敢吗。你不敢。所以请记得，无论这个世界最终烂成什么样子，都是在我们的默许之下完成的。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/陈生大王.jpg" alt="陈生大王"></p>
</li>
<li><p><a href="https://www.bilibili.com/video/av77327621?t=140">那熔铸眼前世界的炉火，他们早已经忘记了。</a></p>
</li>
<li><p>Everything will be fine in the end, Morty, And if it isn&apos;t, it&apos;s not the end yet.</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/Everything-will-be-fine-in-the-end.jpg" alt="Everything-will-be-fine-in-the-end.jpg"></p>
</li>
<li><p><a href="https://www.bilibili.com/video/av83908288#reply2270052215">「轻奢」这个词造得可谓精妙绝伦，是一种市场细分后的修辞手法。比如 100 块的衣服叫「屌丝」，1000 块的叫「奢侈品」，500 块的命名就很讲究了。不能叫「重屌」，而要叫「轻奢」，给人一种我在向社会上层流动的幻觉。</a></p>
</li>
<li><blockquote>
<p><a href="https://book.douban.com/subject/1051524/">She was still too young to know that life never gives anything for nothing, and that a price is always exacted for what fate bestows.</a></p>
</blockquote>
<p>她那时候还太年轻，不知道所有命运馈赠的礼物，早已在暗中标好了价格。</p>
</li>
<li><p>我们不能随便生气。生气的时候，你会使出真本领。这样，别人就会知道你的真本领很烂。</p>
</li>
<li><p>便宜的东西只有一个优点：就是便宜。</p>
<p>贵的东西只有一个缺点：就是贵。</p>
</li>
<li><p>人的大脑直到 25 岁才发育完全，然而从 15 岁到 18 岁他们的大脑运用得如何，往往将决定他们的余生。</p>
</li>
<li><p>如果你非要等到新年才开始做出改变，说明这个改变对你也不太重要。</p>
</li>
<li><p>在现实的人类社会中，除非有更大的光明将它改变，否则永远存在着两种人，一个在天上，一个在地下，一个是从善的亚伯，一个是从恶的该隐。</p>
</li>
<li><p>很抱歉啊，我白天都没什么机会和你说话，只能憋到晚上给你发句晚安。但你可别小看了这两个字，它可包含着我今天清晨见到的阳光，中午看到的白云，傍晚遇见的微风，包含着我这一天每句想对你说的话。晚安。</p>
</li>
<li><p>我的眼睛很大很大，装得下高山，装得下大海，装得下蓝天，装得下整个世界；我的眼睛很小很小，有时遇到心事，就连两行泪，也装不下。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/眼睛.jfif" alt="眼睛"></p>
</li>
<li><p>最痛苦的是什么呢？你恰巧有一点天赋，够你去觊觎天才们那片殿堂，却不够你进入。你在门前徘徊，却敲不开那扇门。你颓然而坐，却隐隐约约听到殿堂内传来一声叹息：「我好菜啊」。</p>
</li>
<li><p>其实，你觉得能觊觎也是错觉，你只是能大概理解对一些科学理论的通俗解释。</p>
</li>
<li><p><a href="https://weibo.com/2377356574/Ii8XQ8zjg">我见着日落时，她也见着日落，虽相隔千里，但对于太阳来说我和她在一起。</a></p>
</li>
<li><p>我们不能吹嘘自己设置的独特密码，真是太可惜了。</p>
</li>
<li><p>前路虽长，尤可期许。</p>
</li>
<li><p>每当成年人想要改变生活、逆转状态时，会不约而同做一件事：（再次开始）学英语。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/每当成年人想要改变生活、逆转状态时，会不约而同做一件事：（再次开始）学英语。.jpg" alt="每当成年人想要改变生活、逆转状态时，会不约而同做一件事：（再次开始）学英语。"></p>
</li>
<li><p><a href="https://zh.wikipedia.org/wiki/%E6%9C%A6%E8%83%A7%E8%AF%97#%E5%8C%97%E5%B2%9B">卑鄙是卑鄙者的通行证，高尚是高尚者的墓志铭。</a></p>
</li>
<li><p>我也不知道喜欢你什么，只是你不在的时候就会想你，想到你的每一个分钟我都会变得开心，这就是我最单纯的想法。如果只是单纯喜欢你的某一点的话，那就是有条件的喜欢而已，假使有一天那个条件突然发生了改变，那我对你得喜欢是不是应该就会变？所以我喜欢的不是你的某个什么，而是你的一切和每个和你在一起的瞬间。</p>
</li>
<li><p>我告诉你我喜欢你，并不是一定要和你在一起，只是希望今后的你，在遭遇人生低谷的时候，不要灰心，至少曾经有人被你的魅力所吸引，曾经是，以后也会是。</p>
</li>
<li><p>我永远喜欢你，不是说我会十年二十年一辈子都喜欢你，而是指，我这一刻喜欢你的程度，让我有勇气说出来我永远喜欢你。</p>
</li>
<li><p><a href="https://www.musixmatch.com/lyrics/%E5%A5%BD%E6%A8%82%E5%9C%98-2/%E6%88%91%E6%8A%8A%E6%88%91%E7%9A%84%E9%9D%92%E6%98%A5%E7%BB%99%E4%BD%A0">我把我的青春给你，不是因为想换取和你的婚礼。</a></p>
</li>
<li><p>但愿我能给你带来快乐，同时，又反射到我身上。</p>
</li>
<li><p>你无法控制其他人的脾气，但你可以保持一颗冷静的头脑。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/你无法控制其他人的脾气，但你可以保持一颗冷静的头脑。.jpg" alt="你无法控制其他人的脾气，但你可以保持一颗冷静的头脑。"></p>
</li>
<li><p>没有你在床真的没什么好赖的。</p>
</li>
<li><p>茫茫人海我们能相遇，缘分占百分之十，我长得好看占百分之九十。</p>
</li>
<li><p><a href="https://en.wikipedia.org/wiki/The_Heart_of_a_Broken_Story">Love is a touch and yet not a touch.</a></p>
</li>
<li><p><a href="https://baike.baidu.com/item/%E9%A2%84%E8%A8%80/2915721">不要前行！前面是无边的森林：古老的树现着野兽身上的斑纹，半生半死的藤蟒一样交缠着，密叶里漏不下一颗星星。你将怯怯地不敢放下第二步，当你听见了第一步空寥的回声。</a></p>
</li>
<li><p>事实上，机场比婚礼现场见证了更多真挚的接吻，医院的墙壁比教堂聆听了更多的祷告。</p>
</li>
<li><blockquote>
<p><a href="https://www.youtube.com/watch?v=_3BhOWpurdc">Night gathers, and now my watch begins. It shall not end until my death. I shall take no wife, hold no lands, father no children. I shall wear no crowns and win no glory. I shall live and die at my post. I am the sword in the darkness. I am the watcher on the walls. I am the fire that burns against the cold, the light that brings the dawn, the horn that wakes the sleepers, the shield that guards the realms of men. I pledge my life and honor to the Night&apos;s Watch, for this night and all the nights to come.</a></p>
</blockquote>
<p>长夜将至，我从今开始守望，至死方休。我将不娶妻、不封地、不生子。我将不戴宝冠，不争荣宠。我将尽忠职守，生死於斯。我是黑暗中的利剑，长城上的守卫。我是抵御寒冷的烈焰，破晓时分的光线，唤醒眠者的号角，守护王国的坚盾。我将生命与荣耀献给守夜人，今夜如此，夜夜皆然。</p>
</li>
<li><p>年轻有年轻的代价。</p>
</li>
<li><p><a href="https://weibo.com/1428546035/ymeph0NuH">如果天总也不亮，那就摸黑过生活；如果发出声音是危险的，那就保持沉默；如果自觉无力发光，那就别去照亮别人。但是——但是：不要习惯了黑暗就为黑暗辩护；不要为自己的苟且而得意洋洋；不要嘲讽那些比自己更勇敢、更有热量的人们。可以卑微如尘土，不可扭曲如蛆虫。</a></p>
</li>
<li><p>智商不如人没什么可耻的。只是要承认这一点有点困难。</p>
</li>
<li><p><a href="https://zh.wikisource.org/zh/%E8%8D%80%E5%AD%90/%E4%BF%AE%E8%BA%AB%E7%AF%87">路虽弥，不行不至。</a></p>
</li>
<li><p>道阻且长，行则将至。</p>
</li>
<li><p>你一直兼容，用户就一直觉得没问题，用户就会一直用，用户一直用，你就要一直兼容。</p>
</li>
<li><p>普通人负责普通就行了。</p>
</li>
<li><p>碎片化时间，听起来像一种能撕裂时空的超能力。</p>
</li>
<li><p>觉得自己能力不足无法战胜黑暗怎么办？</p>
</li>
<li><p><a href="https://www.zhihu.com/question/21905681/answer/92992501">没有实力到只能去靠诚意表真心。</a></p>
</li>
<li><p>目所能及又岂能是全部呢？</p>
</li>
<li><p>怕什么真理无穷，进一寸有进一寸的欢喜。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/胡适.jpg" alt="胡适"></p>
</li>
<li><p>梦境和死亡，都无定所，无处可去，终将被遗忘，我们身在此处，但没有人会记得，万物皆逝，仅剩夜晚，再见。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/万物皆逝，唯有夜长留。.jpg" alt="万物皆逝，唯有夜长留"></p>
</li>
<li><p>口才不好的人，总是在夜晚床上躺着时，才想到当时应该怎样反驳别人的话。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/口才不好的人，总是在夜晚床上躺着时，才想到当时应该怎样反驳别人的话。.jpg" alt="口才不好的人，总是在夜晚床上躺着时，才想到当时应该怎样反驳别人的话。"></p>
</li>
<li><p>遇到喜欢的东西，就把它买下来。钱并不是真的花掉了，只是换一种方式，陪伴在你的身边。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/GPU.jpg" alt="遇到喜欢的东西，就把它买下来。钱并不是真的花掉了，只是换一种方式，陪伴在你的身边。"></p>
</li>
<li><p>我不看星星，也不说想你。这样星星和你都蒙在鼓里。</p>
<p><img data-src="https://cdn.jsdelivr.net/gh/AemonCao/AemonCao.github.io@master/source/about/index/我不看星星，也不说想你。这样星星和你都蒙在鼓里。.jpg" alt="我不看星星，也不说想你。这样星星和你都蒙在鼓里。"></p>
</li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>categories</title>
    <url>/categories/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>tags</title>
    <url>/tags/index.html</url>
    <content><![CDATA[]]></content>
  </entry>
</search>
